(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    546808,      10757]
NotebookOptionsPosition[    542431,      10681]
NotebookOutlinePosition[    542855,      10698]
CellTagsIndexPosition[    542812,      10695]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Covid", "Title",
 CellChangeTimes->{{3.825064903523961*^9, 3.825064926396481*^9}, {
  3.825066076180868*^9, 
  3.825066079825165*^9}},ExpressionUUID->"52c07043-0fc0-4b9c-8ee9-\
651caf285f05"],

Cell["Analiza razlicnih aspektov epidemije v Sloveniji in po svetu", \
"Subtitle",
 CellChangeTimes->{{3.825066087108139*^9, 
  3.8250660971146708`*^9}},ExpressionUUID->"41edfe03-a6f1-45d5-982a-\
25067c1d7b47"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.825068018377892*^9, 
  3.825068020247864*^9}},ExpressionUUID->"78e77c0d-fea5-4e8d-a92f-\
2bede3387de9"],

Cell[TextData[{
 "Mathematica ima na voljo veliko podatkovno bazo ",
 StyleBox["Wolfram data repository",
  FontWeight->"Bold"],
 ". "
}], "Text",
 CellChangeTimes->{{3.825068052821238*^9, 
  3.82506806735163*^9}},ExpressionUUID->"91fb3070-106d-411c-ac7b-\
9405650d3532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<COVID-19\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8250680717479563`*^9, 3.825068085754641*^9}, {
   3.825070882959828*^9, 3.825070895481317*^9}, 3.8256649813155537`*^9, 
   3.825665092789647*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"c77b2033-dff4-4cee-b273-5313f708bd27"],

Cell[BoxData[
 TemplateBox[{
  "ResourceObject", "updav", 
   "\"There is an update available for resource \\\"\\!\\(\\*RowBox[{\\\"\\\\\
\\\"Epidemic Data for Novel Coronavirus COVID-19\\\\\\\"\\\"}]\\)\\\". Use \
\\!\\(\\*StyleBox[RowBox[{\\\"ResourceUpdate\\\", \\\"[\\\", \
\\\"\\\\\\\"Epidemic Data for Novel Coronavirus COVID-19\\\\\\\"\\\", \\\"]\\\
\"}], Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\\) to get \
the update.\"", 2, 13, 17, 33416830519751791316, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.825070896632127*^9, 3.825664986103421*^9, {3.825665022061466*^9, 
   3.825665036969824*^9}, 3.825665094125445*^9, 3.825670043049746*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"02583fbd-bfa9-4f73-838e-19c27f6aa718"],

Cell[BoxData[
 TemplateBox[{
  "ResourceObject", "updav", 
   "\"There is an update available for resource \\\"\\!\\(\\*RowBox[{\\\"\\\\\
\\\"Epidemic Data for Novel Coronavirus COVID-19\\\\\\\"\\\"}]\\)\\\". Use \
\\!\\(\\*StyleBox[RowBox[{\\\"ResourceUpdate\\\", \\\"[\\\", \
\\\"\\\\\\\"Epidemic Data for Novel Coronavirus COVID-19\\\\\\\"\\\", \\\"]\\\
\"}], Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\\) to get \
the update.\"", 2, 13, 18, 33416830519751791316, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.825070896632127*^9, 3.825664986103421*^9, {3.825665022061466*^9, 
   3.825665036969824*^9}, 3.825665094125445*^9, 3.825670043057067*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"284b70af-6b55-4796-b3f3-31efb5839a8d"],

Cell[BoxData[
 TemplateBox[{
  "ResourceObject", "updav", 
   "\"There is an update available for resource \\\"\\!\\(\\*RowBox[{\\\"\\\\\
\\\"Genetic Sequences for the SARS-CoV-2 Coronavirus\\\\\\\"\\\"}]\\)\\\". \
Use \\!\\(\\*StyleBox[RowBox[{\\\"ResourceUpdate\\\", \\\"[\\\", \
\\\"\\\\\\\"Genetic Sequences for the SARS-CoV-2 Coronavirus\\\\\\\"\\\", \
\\\"]\\\"}], Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\\) \
to get the update.\"", 2, 13, 19, 33416830519751791316, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.825070896632127*^9, 3.825664986103421*^9, {3.825665022061466*^9, 
   3.825665036969824*^9}, 3.825665094125445*^9, 3.825670043173025*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"4c655c51-6d04-4076-be05-861bbba33296"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ResourceObject\\\", \
\\\"::\\\", \\\"updav\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 13, 20, 33416830519751791316, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.825070896632127*^9, 3.825664986103421*^9, {3.825665022061466*^9, 
   3.825665036969824*^9}, 3.825665094125445*^9, 3.82567004318122*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"2fe0e264-7dd1-4eeb-8625-ac8bcd68c1c8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Name" -> "COVIDTrackingData", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "COVIDTrackingData", "ShortName" -> "COVIDTrackingData", 
           "UUID" -> "1fdda013-a202-4af1-b989-09e7e4724193", "ResourceType" -> 
           "Function", "Version" -> "3.0.0", "Description" -> 
           "Import data about COVID-19 in the US from the COVID Tracking \
Project", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$c64c99acefe3458284af16b6e0a55a22`\
COVIDTrackingData"]], "Description" -> 
        "Import data about COVID-19 in the US from the COVID Tracking \
Project", "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
COVIDTrackingData"]], 
       Association[
       "Name" -> 
        "UK Occupation Estimates: Exposure to Generic Disease and Physical \
Proximity", "ResourceType" -> "DataResource", "ResourceObject" -> 
        ResourceObject[
          Association[
          "Name" -> 
           "UK Occupation Estimates: Exposure to Generic Disease and Physical \
Proximity", "UUID" -> "3521a4b9-eef2-46e5-ad37-b366f430cc83", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "An estimate of exposure to disease (generally) and physical \
proximity for UK occupations based on US analysis of these factors, using \
2019 data", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", 
           "ContentElements" -> {"Dataset"}]], "Description" -> 
        "An estimate of exposure to disease (generally) and physical \
proximity for UK occupations based on US analysis of these factors, using \
2019 data", "Location" -> "Local", "DocumentationLink" -> 
        URL[
         "https://datarepository.wolframcloud.com/resources/3521a4b9-eef2-\
46e5-ad37-b366f430cc83"]], 
       Association[
       "Name" -> "NYTimesCOVID19Data", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "NYTimesCOVID19Data", "ShortName" -> "NYTimesCOVID19Data",
            "UUID" -> "3a66575b-a224-43de-86ce-2a21c364a87f", "ResourceType" -> 
           "Function", "Version" -> "2.0.0", "Description" -> 
           "Import data from the New York Times COVID-19 United States \
county-by-county data", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$cf69865c381d447b99a27f7b8f04a366`\
NYTimesCOVID19Data"]], "Description" -> 
        "Import data from the New York Times COVID-19 United States \
county-by-county data", "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
NYTimesCOVID19Data"]], 
       Association[
       "Name" -> "Coronavirus COVID-19 Pandemic Government Measures", 
        "ResourceType" -> "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Coronavirus COVID-19 Pandemic Government Measures", 
           "UUID" -> "51d1545a-614f-4b18-8a81-ca72189a986f", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Measures taken by governments from different countries to fight \
the coronavirus COVID-19 pandemic caused by the SARS-CoV-2", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", 
           "ContentElements" -> {"Dataset"}]], "Description" -> 
        "Measures taken by governments from different countries to fight the \
coronavirus COVID-19 pandemic caused by the SARS-CoV-2", "Location" -> 
        "Local", "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/51d1545a-614f-\
4b18-8a81-ca72189a986f"]], 
       Association[
       "Name" -> "PhylogeneticTreePlot", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "PhylogeneticTreePlot", "ShortName" -> 
           "PhylogeneticTreePlot", "UUID" -> 
           "562d05d8-fc55-4fe9-beb8-4e6746b1f1da", "ResourceType" -> 
           "Function", "Version" -> "4.0.0", "Description" -> 
           "Plot a dendrogram for a set of genome nucleotide sequences", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$dcda7d5e96a344b3ba91fe24691f0fec`\
PhylogeneticTreePlot"]], "Description" -> 
        "Plot a dendrogram for a set of genome nucleotide sequences", 
        "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
PhylogeneticTreePlot"]], 
       Association[
       "Name" -> "JHUCOVID19VaccineData", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "JHUCOVID19VaccineData", "ShortName" -> 
           "JHUCOVID19VaccineData", "UUID" -> 
           "6a0032cd-7e10-416f-8abc-d34487439093", "ResourceType" -> 
           "Function", "Version" -> "2.0.0", "Description" -> 
           "Estimated COVID-19 vaccine doses administered by US state", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$b271b01400c94f259a61939263386a3a`\
JHUCOVID19VaccineData"]], "Description" -> 
        "Estimated COVID-19 vaccine doses administered by US state", 
        "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
JHUCOVID19VaccineData"]], 
       Association[
       "Name" -> "Patient Medical Data for Novel Coronavirus COVID-19", 
        "ResourceType" -> "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Patient Medical Data for Novel Coronavirus COVID-19", 
           "UUID" -> "732a817d-f81e-4eca-a562-3323ba36145a", "ResourceType" -> 
           "DataResource", "Version" -> "41.0.0", "Description" -> 
           "Medical records of patients infected with novel coronavirus \
COVID-19\n(This data was imported and made computable on August 31, 2020.)", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[3.8869286880000002`, "Gigabytes"], 
           "ContentElements" -> {
            "Dataset", "ReportedRecordCountByLocation"}]], "Description" -> 
        "Medical records of patients infected with novel coronavirus COVID-19\
\n(This data was imported and made computable on August 31, 2020.)", 
        "Location" -> "Local", "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/732a817d-f81e-\
4eca-a562-3323ba36145a"]], 
       Association[
       "Name" -> "Genetic Sequences for the SARS-CoV-2 Coronavirus", 
        "ResourceType" -> "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Genetic Sequences for the SARS-CoV-2 Coronavirus", 
           "UUID" -> "8738b472-f1d1-462b-ac34-e9684a4dc088", "ResourceType" -> 
           "DataResource", "Version" -> "324.0.0", "Description" -> 
           "Nucleotide sequences of the SARS-CoV-2 virus (the virus \
associated with the COVID-19 disease, formerly known as 2019-nCoV) including \
location, collection time and similar supporting data.  (This data was \
imported and made computable at 6 am CDT on Mar. 17, 2021.)  ", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[1679.3789439999998`, "Megabytes"], 
           "ContentElements" -> {
            "AffectedLocations", "AlignmentDifferences", 
             "CollectionHistogram", "CollectionTimeline", "Dataset", 
             "Function", "InclusionHistogram", "InclusionTimeline", 
             "ReducedAlignmentDifferences", "ReducedData", 
             "ReferenceSequence", "ReleaseHistogram", "ReleaseTimeline", 
             "SubmissionAuthors"}]], "Description" -> 
        "Nucleotide sequences of the SARS-CoV-2 virus (the virus associated \
with the COVID-19 disease, formerly known as 2019-nCoV) including location, \
collection time and similar supporting data.  (This data was imported and \
made computable at 6 am CDT on Mar. 17, 2021.)  ", "Location" -> "Local", 
        "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/8738b472-f1d1-\
462b-ac34-e9684a4dc088"]], 
       Association[
       "Name" -> "MexicoCOVID19Data", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "MexicoCOVID19Data", "ShortName" -> "MexicoCOVID19Data", 
           "UUID" -> "dbd4a959-3dd7-4dd9-bc60-ee9681ab4d83", "ResourceType" -> 
           "Function", "Version" -> "3.1.0", "Description" -> 
           "Import data from the Direcci\[OAcute]n General de Epidemiolog\
\[IAcute]a website", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$d7c1605fe3e14a88b75898c1562fb9dc`\
MexicoCOVID19Data"]], "Description" -> 
        "Import data from the Direcci\[OAcute]n General de Epidemiolog\
\[IAcute]a website", "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
MexicoCOVID19Data"]], 
       Association[
       "Name" -> "CaliforniaCOVID19Data", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "CaliforniaCOVID19Data", "ShortName" -> 
           "CaliforniaCOVID19Data", "UUID" -> 
           "e871846c-336f-460b-b98e-cf7ecb0ea98d", "ResourceType" -> 
           "Function", "Version" -> "2.0.0", "Description" -> 
           "Generate datasets from California COVID-19 released by the State \
of California", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$9a1c7c633a444fae937968dbcca75109`\
CaliforniaCOVID19Data"]], "Description" -> 
        "Generate datasets from California COVID-19 released by the State of \
California", "Location" -> "Local", "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
CaliforniaCOVID19Data"]], 
       Association[
       "Name" -> "Protein Sequences for the SARS-CoV-2 Coronavirus", 
        "ResourceType" -> "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Protein Sequences for the SARS-CoV-2 Coronavirus", 
           "UUID" -> "f303ad23-93f5-4f54-9748-1e8ca4b820b3", "ResourceType" -> 
           "DataResource", "Version" -> "165.0.0", "Description" -> 
           "Protein sequences of the SARS-CoV-2 virus (the virus associated \
with the COVID-19 disease, formerly known as 2019-nCoV) including location, \
collection time and similar supporting data.  (This data was imported and \
made computable at 6 am CDT on March 17, 2021.)  ", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[748.070304, "Megabytes"], 
           "ContentElements" -> {
            "AffectedCountries", "AffectedLocations", "CollectionHistogram", 
             "Dataset", "InclusionHistogram", "ReleaseHistogram", 
             "SubmissionAuthors"}]], "Description" -> 
        "Protein sequences of the SARS-CoV-2 virus (the virus associated with \
the COVID-19 disease, formerly known as 2019-nCoV) including location, \
collection time and similar supporting data.  (This data was imported and \
made computable at 6 am CDT on March 17, 2021.)  ", "Location" -> "Local", 
        "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/f303ad23-93f5-\
4f54-9748-1e8ca4b820b3"]], 
       Association[
       "Name" -> "CDC Primers for SARS-CoV-2 Research", "ResourceType" -> 
        "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "CDC Primers for SARS-CoV-2 Research", "UUID" -> 
           "f9fe12c8-797b-473f-9263-3008e5a3d3e4", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Primers provided by the US Centers for Disease Control and \
Prevention (CDC) for identifying SARS-CoV-2 for research purposes, including \
the names, sequences, working concentration, and related information", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", 
           "ContentElements" -> {"Dataset", "name"}]], "Description" -> 
        "Primers provided by the US Centers for Disease Control and \
Prevention (CDC) for identifying SARS-CoV-2 for research purposes, including \
the names, sequences, working concentration, and related information", 
        "Location" -> "Local", "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/f9fe12c8-797b-\
473f-9263-3008e5a3d3e4"]], 
       Association[
       "Name" -> "Epidemic Data for Novel Coronavirus COVID-19", 
        "ResourceType" -> "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Epidemic Data for Novel Coronavirus COVID-19", "UUID" -> 
           "dba89a96-2b3a-4254-8824-cb1f9e01a94b", "ResourceType" -> 
           "DataResource", "Version" -> "439.0.0", "Description" -> 
           "Tracking the Novel Coronavirus (COVID-19) Global Cases", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[61.129087999999996`, "Megabytes"], 
           "ContentElements" -> {
            "AustraliaProvinces", "BrazilProvinces", "CanadaProvinces", 
             "ChileProvinces", "ChinaProvinces", "ColombiaProvinces", 
             "Dataset", "GermanyProvinces", "IndiaProvinces", 
             "ItalyProvinces", "JapanProvinces", "MexicoProvinces", 
             "NetherlandsProvinces", "PakistanProvinces", "PeruProvinces", 
             "PuertoRicoProvinces", "RussiaProvinces", "SpainProvinces", 
             "SwedenProvinces", "UkraineProvinces", "USCounties", "USStates", 
             "WorldCountries"}]], "Description" -> 
        "Estimated cases of novel coronavirus (COVID-19, formerly known as \
2019-nCoV) infection by country or region \n(This data was imported and made \
computable on Mar 23, 2021)", "Location" -> "Local", "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/dba89a96-2b3a-\
4254-8824-cb1f9e01a94b"]], 
       Association[
       "Name" -> "COVID19EpidemicData", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "COVID19EpidemicData", "ShortName" -> 
           "COVID19EpidemicData", "UUID" -> 
           "4ab27040-3edc-4d15-896e-8406d77fc15b", "ResourceType" -> 
           "Function", "Version" -> "1.1.0", "Description" -> 
           "Access COVID-19 epidemic data", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$61953678be2047b690f154b021dde05c`\
COVID19EpidemicData"]], "Description" -> "Access COVID-19 epidemic data", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
COVID19EpidemicData"]], 
       Association[
       "Name" -> "OWIDCOVID19Data", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "OWIDCOVID19Data", "ShortName" -> "OWIDCOVID19Data", 
           "UUID" -> "af26bb30-36ab-4624-a758-6e5c9a8ebfa0", "ResourceType" -> 
           "Function", "Version" -> "2.1.0", "Description" -> 
           "Generate testing and vaccination datasets from the OWID COVID-19 \
data site", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$8d63ae819c5c441e87cdeef1faaf6e4c`\
OWIDCOVID19Data"]], "Description" -> 
        "Generate testing and vaccination datasets from the OWID COVID-19 \
data site", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
OWIDCOVID19Data"]], 
       Association[
       "Name" -> "GoogleMobilityReport", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "GoogleMobilityReport", "ShortName" -> 
           "GoogleMobilityReport", "UUID" -> 
           "aa325192-2501-4658-8b03-0719d7853334", "ResourceType" -> 
           "Function", "Version" -> "1.1.0", "Description" -> 
           "Generate a dataset from Google Community Mobility Reports for a \
given country", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$16c9076673f74b5c803c3995b57f5203`\
GoogleMobilityReport"]], "Description" -> 
        "Generate a dataset from Google Community Mobility Reports for a \
given country", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
GoogleMobilityReport"]], 
       Association[
       "Name" -> "Repurposing Therapeutics for COVID-19", "ResourceType" -> 
        "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Repurposing Therapeutics for COVID-19", "UUID" -> 
           "c2eb033f-8c70-4ea7-bfc3-19d1d3930894", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Vina Docking scores for drug molecules with the S-protein of \
SARS-CoV-2 and human human ACE2 receptor", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", 
           "ContentElements" -> {"Association"}]], "Description" -> 
        "Vina Docking scores for drug molecules with the S-protein of \
SARS-CoV-2 and human human ACE2 receptor", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/c2eb033f-8c70-\
4ea7-bfc3-19d1d3930894"]], 
       Association[
       "Name" -> "COVID-19 Hospital Resource Use Projections", "ResourceType" -> 
        "DataResource", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "COVID-19 Hospital Resource Use Projections", "UUID" -> 
           "15cbef62-9274-4f1b-9075-829f08715bb7", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Projected hospital resource use based on COVID-19 deaths", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[22.0396, "Megabytes"], 
           "ContentElements" -> {"Dataset", "name"}]], "Description" -> 
        "Projected hospital resource use based on COVID-19 deaths", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/15cbef62-9274-\
4f1b-9075-829f08715bb7"]], 
       Association[
       "Name" -> "EpidemicModel", "ResourceType" -> "Function", 
        "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "EpidemicModel", "ShortName" -> "EpidemicModel", "UUID" -> 
           "6b24d4ac-5849-4773-932a-9b959dfe3362", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Generate an interactive tool for visualizing various compartment \
based epidemiological models", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "SymbolName" -> 
           "FunctionRepository`$e90168c612eb4aa09c2d8bfd2ea9aa46`\
EpidemicModel"]], "Description" -> 
        "Generate an interactive tool for visualizing various compartment \
based epidemiological models", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
EpidemicModel"]], 
       Association[
       "Name" -> "USA Google Mobility Data", "ResourceType" -> "DataResource",
         "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "USA Google Mobility Data", "UUID" -> 
           "670e5993-2d0b-4a5b-a528-5395fc179eeb", "ResourceType" -> 
           "DataResource", "Version" -> "2.0.0", "Description" -> 
           "Mobility Reports of Google for USA", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "10.0", 
           "ContentElements" -> {"Dataset"}]], "Description" -> 
        "Mobility Reports of Google for USA", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://datarepository.wolframcloud.com/resources/670e5993-2d0b-\
4a5b-a528-5395fc179eeb"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Name"} -> 1, {All, "ResourceType"} -> 
        1, {All, "ResourceObject"} -> 1, {All, "Description"} -> 
        1, {All, "Location"} -> 1, {All, "DocumentationLink"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Name" -> TypeSystem`PackageScope`AtomShape[470.4000000000001], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[108.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "Location" -> TypeSystem`PackageScope`UnknownShape[False], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource", "Function"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[URL]}], 20], "Meta" -> 
     Association["ID" -> 112305033006251], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Name"} -> 1, {All, "ResourceType"} -> 
        1, {All, "ResourceObject"} -> 1, {All, "Description"} -> 
        1, {All, "Location"} -> 1, {All, "DocumentationLink"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Name" -> TypeSystem`PackageScope`AtomShape[470.4000000000001], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[108.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "Location" -> TypeSystem`PackageScope`UnknownShape[False], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource", "Function"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[URL]}], 20], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     20, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "ResourceType"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "ResourceObject"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Description"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Location"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "DocumentationLink"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["COVIDTrackingData", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"COVIDTrackingData\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Import data about COVID-19 in the US from the COVID Tracking \
Project", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/COVIDTrackingData"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "UK Occupation Estimates: Exposure to Generic Disease and \
Physical Proximity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"UK Occupation Estimates: Exposure to Generic Disease and \
Physical Proximity\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "An estimate of exposure to disease (generally) and physical \
proximity for UK occupations based on US analysis of these factors, using \
2019 data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/3521a4b9-\
eef2-46e5-ad37-b366f430cc83"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NYTimesCOVID19Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"NYTimesCOVID19Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Import data from the New York Times COVID-19 United States \
county-by-county data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/NYTimesCOVID19Data"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Coronavirus COVID-19 Pandemic Government Measures", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Coronavirus COVID-19 Pandemic Government Measures\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Measures taken by governments from different countries to \
fight the coronavirus COVID-19 pandemic caused by the SARS-CoV-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/51d1545a-\
614f-4b18-8a81-ca72189a986f"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["PhylogeneticTreePlot", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"PhylogeneticTreePlot\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Plot a dendrogram for a set of genome nucleotide sequences", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/PhylogeneticTreePlot"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["JHUCOVID19VaccineData", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"JHUCOVID19VaccineData\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Estimated COVID-19 vaccine doses administered by US state", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/JHUCOVID19VaccineData"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Patient Medical Data for Novel Coronavirus COVID-19", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Patient Medical Data for Novel Coronavirus COVID-19\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Medical records of patients infected with novel coronavirus \
COVID-19\n(This data was imported and made computable on August 31, 2020.)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/732a817d-\
f81e-4eca-a562-3323ba36145a"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Genetic Sequences for the SARS-CoV-2 Coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Genetic Sequences for the SARS-CoV-2 Coronavirus\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Nucleotide sequences of the SARS-CoV-2 virus (the virus \
associated with the COVID-19 disease, formerly known as 2019-nCoV) including \
location, collection time and similar supporting data.  (This data was \
imported and made computable at 6 am CDT on Mar. 17, 2021.)  ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/8738b472-\
f1d1-462b-ac34-e9684a4dc088"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MexicoCOVID19Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"MexicoCOVID19Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Import data from the Direcci\[OAcute]n General de Epidemiolog\
\[IAcute]a website", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/MexicoCOVID19Data"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CaliforniaCOVID19Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"CaliforniaCOVID19Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Generate datasets from California COVID-19 released by the \
State of California", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/CaliforniaCOVID19Data"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Protein Sequences for the SARS-CoV-2 Coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Protein Sequences for the SARS-CoV-2 Coronavirus\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Protein sequences of the SARS-CoV-2 virus (the virus \
associated with the COVID-19 disease, formerly known as 2019-nCoV) including \
location, collection time and similar supporting data.  (This data was \
imported and made computable at 6 am CDT on March 17, 2021.)  ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/f303ad23-\
93f5-4f54-9748-1e8ca4b820b3"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CDC Primers for SARS-CoV-2 Research", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"CDC Primers for SARS-CoV-2 Research\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Primers provided by the US Centers for Disease Control and \
Prevention (CDC) for identifying SARS-CoV-2 for research purposes, including \
the names, sequences, working concentration, and related information", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/f9fe12c8-\
797b-473f-9263-3008e5a3d3e4"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Epidemic Data for Novel Coronavirus COVID-19", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Epidemic Data for Novel Coronavirus COVID-19\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Estimated cases of novel coronavirus (COVID-19, formerly known \
as 2019-nCoV) infection by country or region \n(This data was imported and \
made computable on Mar 23, 2021)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Local", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/dba89a96-\
2b3a-4254-8824-cb1f9e01a94b"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["COVID19EpidemicData", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"COVID19EpidemicData\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Access COVID-19 epidemic data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/COVID19EpidemicData"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["OWIDCOVID19Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"OWIDCOVID19Data\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Generate testing and vaccination datasets from the OWID \
COVID-19 data site", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/OWIDCOVID19Data"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GoogleMobilityReport", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"GoogleMobilityReport\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Generate a dataset from Google Community Mobility Reports for \
a given country", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/GoogleMobilityReport"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Repurposing Therapeutics for COVID-19", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Repurposing Therapeutics for COVID-19\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Vina Docking scores for drug molecules with the S-protein of \
SARS-CoV-2 and human human ACE2 receptor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/c2eb033f-\
8c70-4ea7-bfc3-19d1d3930894"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["COVID-19 Hospital Resource Use Projections", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"COVID-19 Hospital Resource Use Projections\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Projected hospital resource use based on COVID-19 deaths", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/15cbef62-\
9274-4f1b-9075-829f08715bb7"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EpidemicModel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"EpidemicModel\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Generate an interactive tool for visualizing various \
compartment based epidemiological models", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/EpidemicModel"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USA Google Mobility Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{108., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"USA Google Mobility Data\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Mobility Reports of Google for USA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://datarepository.wolframcloud.com/resources/...", 
                URL[
                "https://datarepository.wolframcloud.com/resources/670e5993-\
2d0b-4a5b-a528-5395fc179eeb"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2114., {367.41754150390625`, 374.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2114., {367.41754150390625`, 374.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825665094415065*^9, 3.825670043371129*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"aa8e3426-1c69-49bd-989f-e77578629e91"]
}, Open  ]],

Cell["Posodobimo podatke:", "Text",
 CellChangeTimes->{{3.825664969721779*^9, 
  3.825664974301515*^9}},ExpressionUUID->"052a4964-4100-4363-9b69-\
0bb774a5cb0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceUpdate", "[", 
   "\"\<Epidemic Data for Novel Coronavirus COVID-19\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825664976701342*^9, 3.825665043541572*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"23290cdf-c3bc-4366-a8ba-be7271edf147"],

Cell["Shranimo podatke:", "Text",
 CellChangeTimes->{{3.825665015042037*^9, 
  3.825665019138185*^9}},ExpressionUUID->"3615b7aa-621c-439f-ab32-\
3ac16136cf38"],

Cell[BoxData[
 RowBox[{
  RowBox[{"podatki", " ", "=", " ", 
   RowBox[{
   "ResourceData", "[", 
    "\"\<Epidemic Data for Novel Coronavirus COVID-19\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825068152112565*^9, 3.825068173161289*^9}, 
   3.825070885770352*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"fa75c7da-6964-4e47-93f9-f03ae2d8d8cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"podatki", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"prvih", " ", "10", " ", "vrstic", " ", "podatkov"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8256700576453037`*^9, 3.825670101064941*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8afce086-09d5-411e-84ba-8aadc5f4b56d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "AdministrativeDivision" -> Missing["NotAvailable"], "Country" -> 
        Entity["Country", "France"], "GeoPosition" -> 
        GeoPosition[{46.2276, 2.2137}], "ConfirmedCases" -> 
        TemporalData[TimeSeries, {CompressedData["
1:eJyN0wtMlWUcx/Hved5zDgcFRMSKqVwOHEDkroKAoliwStTykm4pKHlDEdNQ
shYakdFARfDS8pIm84IpiuI0FTfSvCINEpUSU0FR81aJIur6y3Gha2u92+f9
PXv33/P8/9vzeiTNGJaqAJ3Y8vT17Hn6TXuOXhieY/wP7f+D3f/kIJyEt4gQ
E0SmOChOim7S61yxUBotlQYnSYN7xQNp4JrJarBsMrsjFIhrLlDfDYZ7Qrof
vBYCx8MhPxryBoP7KFiSBJdnwqH5cCQfbq2SebbB2hOwug4uXoFhLTA+UcfG
qTpqM3TYF+kI26vj3gkdh6/qmPNQx22DYtBLiopHOhJsFb6RCt1Aq+iRipwE
RVKy4udxiquS301TeM1SDE1T3MxUlC5SNGQpsr6wGpCrmCKDnlos9QWKHesU
d9Yrbm1SbChS7NyiSN+qiNuumF6seL1EsXGXIlyMFvmlikd7FJ/sU0zd36ag
TPHjQUWxZLyk/UmF6ZTC8bSiRYyrUSytUhReVGTKuuisYl+t4rdfFAN/VVSK
MXWK8guKJqmZd1nxbb3iilgpqhokr8icjYrs64qFouqG4o/fpTfRR9bv31Fs
u63YKvo1KWLvKzY3y3ktMvdjRa1kpciVW3hRp7FfMt6gEWqjEW7U8BEF7TVG
inwHDU9HjUYnjVgRI667aGzvojHeTaPQrDHMW+OJxcolSKMsRCNKeIRpTBwg
+wkvsbS/xqfxGn4i5x0N+4kaRydolIu30jRsRe3nGh+JYV9r3N2gcVzU7tRY
K6aKmyUavW9KbYvGEHs98531pLvr2dNLjxavZ/FkPZ1EnyV6ElfpsSnWk3lM
T169Hl8bA18aDbiKsOEGuSMGruYa6FxsoLq6zQh/I0ffNNIww0jCCiOhx9vM
ibIhLcnKvtKGcjvTP+bPMFG12kROhUn+fVs+CGrjVWrLZ+dtmWVux09T2nFo
d5u8hPac3tGeZUY7OmXYUV1nR+UzK/QO5IxwYNA+B0rGdqCdzpG7OJJY4ohT
Q0eeTHLC9bbY3Imxyc6k/OlM9KbOuD0TvuZlema8wsfJLq3GD+/C+bVWx+Z1
/Zcpk10xu7iRscAN0zk3YkPd6ZPuzuoid6q/d2dmnTsPXDw4P8QDu3kedNnu
wfAaDy40tPFNMZOzwsyBY2ZO/GVmoc4T13BP4lM98VnvSUuNlSnSi69ivSiY
60VQmReVegu2Ay2cybJg3m3hyEkLEQ8t2PfyJjTbm1M13hRe8qZC+TDKwYcO
kT7o1/kQd8sH+whf/ON8uTfHly0LfLl82pdvwru3Gny2O9kWP2Le86P/TD8y
9/vh4tIDQ0oP3i6z2jjUn/4J/kzd688N9wAGfRiAa1UAeQGBGNMCWZ4VyMNz
gbi+GtSquSkIvxHBlKwJZmtxMMGmEEZPD2HRtBBmdw0leXIoKbtCeeNwKMvt
erIstSeNB17UtKUXhfd7kTiqN81Fvbn1nJQfwqh0CKciO5ySxhfFaREsHhNB
ankEAZZI6jMiCTsTSbp/FHExUUStjKLJoS/Oc/tyqbYvu4b0o3mnVW5MdKuu
Y/u3OttgtdEcw+N3Y/gbPvqtTg==
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 
             2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 11, 11, 11, 11, 12, 12, 12, 
             12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 
             12, 12, 12, 2200, 
             Missing["NotAvailable"], 3281, 3900, 4948, 5700, 5700, 7202, 
             7927, 9444, 10934, 12428, 14008, 15438, 16183, 17250, 19337, 
             21254, 23206, 24932, 26391, 27186, 27718, 28805, 30955, 32812, 
             34420, 35983, 36578, 37409, 39181, 40657, 42088, 43493, 44594, 
             44903, 45513, 46886, 48228, 49476, 50212, 49751, 49973, 50438, 
             51803, 53022, 54076, 54770, 54886, 55062, 55561, 56615, 57368, 
             58300, 59143, 59142, 59907, 60416, 61246, 61713, 62216, 62216, 
             62216, 62961, 63542, 64222, 64503, 65098, 65599, 66051, 66123, 
             66120, 66485, 67031, 67510, 68007, 68282, 68283, 68319, 68736, 
             69032, 69344, 69578, 69783, 69820, 69719, 69943, 70223, 70322, 
             70496, 70641, 70661, 70737, 70952, 71138, 71322, 71550, 71455, 
             71455, 71595, 71714, 71879, 72054, 72181, 72092, 72092, 72233, 
             72363, 72133, 72408, 72396, 72200, 72200, 72180, 71918, 71774, 
             71910, 71979, 71639, 71639, 71494, 71382, 71238, 71618, 71811, 
             71566, 71566, 71497, 71667, 71597, 71643, 71656, 71511, 71511, 
             71258, 71152, 71484, 71613, 71766, 71585, 71585, 71537, 71454, 
             71906, 71730, 72023, 71971, 71971, 72072, 72003, 71945, 71868, 
             72535, 72600, 72623, 72793, 73082, 73020, 73433, 73501, 73279, 
             73279, 73537, 73727, 73946, 74156, 74377, 73866, 73866, 74223, 
             74569, 74867, 74991, 75308, 75308, 75308, 75139, 75477, 75921, 
             75880, 76583, 76583, 76583, 77254, 77757, 77757, 77214, 77692, 
             77692, 77692, 77846, 78678, 79128, 79578, 80061, 80061, 80061, 
             80394, 80933, 81431, 81886, 81763, 81739, 81739, 82402, 83544, 
             84266, 84933, 85035, 85008, 85008, 86234, 87138, 87951, 88898, 
             89600, 89600, 90436, 91461, 92830, 94048, 95358, 96604, 97475, 
             98044, 98044, 98044, 100531, 104095, 105650, 107259, 107935, 
             109056, 109056, 113017, 113017, 113017, 113017, 113017, 119653, 
             121925, 124164, 126342, 128294, 129218, 129722, 130633, 132720, 
             134593, 136277, 137956, 138666, 138956, 139810, 139810, 139810, 
             144469, 145324, 146330, 146558, 147257, 148840, 150219, 151630, 
             152555, 152555, 153659, 154311, 155751, 156975, 158170, 159138, 
             160053, 160288, 160946, 162540, 163754, 165121, 165650, 165923, 
             166146, 166927, 168011, 169250, 170426, 170896, 171169, 171381, 
             172032, 173498, 174751, 174751, 177157, 178036, 178300, 178943, 
             180261, 181543, 182673, 183719, 183719, 184991, 185848, 187464, 
             188890, 190186, 191262, 192165, 192405, 193148, 194592, 196010, 
             196010, 198614, 199303, 199589, 200492, 202069, 203645, 203645, 
             206481, 207625, 207909, 208925, 210649, 211765, 213405, 213405, 
             213405, 213405, 217180, 218890, 219862, 221252, 221252, 221252, 
             221252, 224657, 226208, 226881, 228299, 228299, 228299, 228299, 
             231815, 232638, 234034, 235435, 236664, 237654, 238040., 238841, 
             239851, 241331, 242745, 243990, 244927, 245272, 246083, 247672, 
             247672, 250575, 250575, 251238, 251238, 253477, 254144}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 4, 4, 6,
              9, 11, 19, 19, 33, 48, 48, 79, 91, 91, 148, 148, 148, 243, 450, 
             562, 674, 860, 1100, 1331, 1696, 1995, 2314, 2606, 3024, 3523, 
             4032, 5387, 6507, 7560, 8078, 8911, 10328, 10869, 12210, 13197, 
             13832, 14393, 14967, 15729, 17167, 17920, 18681, 19323, 19718, 
             20265, 20796, 21340, 21856, 22245, 22614, 22856, 23293, 23660, 
             24087, 24376, 24594, 24729, 24864, 25168, 25498, 25772, 25949, 
             26192, 26271, 26341, 26604, 26951, 27032, 27381, 27485, 27483, 
             28062, 28193, 27976, 28084, 28167, 28167, 28167, 28317, 28407, 
             28480, 28546, 28611, 28663, 28720, 28751, 28779, 28886, 28967, 
             29010, 29056, 29087, 29100, 29153, 29237, 29260, 29287, 29315, 
             29339, 29346, 29375, 29484, 29512, 29540, 29554, 29568, 29574, 
             29595, 29652, 29661, 29680, 29705, 29704, 29704, 29736, 29763, 
             29780, 29794, 29812, 29812, 29813, 29836, 29847, 29846, 29889, 
             29912, 29909, 29909, 29931, 29929, 30018, 30035, 30049, 30046, 
             30046, 30069, 30056, 30063, 30072, 30081, 30081, 30081, 30096, 
             30109, 30108, 30123, 30150, 30150, 30150, 30149, 30177, 30174, 
             30185, 30203, 30202, 30202, 30201, 30201, 30247, 30263, 30279, 
             30279, 30279, 30302, 30301, 30300, 30300, 30373, 30381, 30382, 
             30396, 30412, 30412, 30441, 30460, 30460, 30470, 30495, 30518, 
             30539, 30559, 30576, 30575, 30573, 30575, 30613, 30643, 30656, 
             30735, 30735, 30735, 30790, 30838, 30884, 30931, 31085, 31085, 
             31085, 31174, 31252, 31252, 31333, 31483, 31483, 31483, 31549, 
             31711, 31769, 31816, 31952, 31952, 31952, 32096, 32140, 32219, 
             32295, 32356, 32356, 32356, 32456, 32714, 32788, 32876, 33054, 
             33054, 33054, 33374, 33636, 33777, 33939, 34236, 34236, 34373, 
             34746, 35268, 35493., 35728, 36273, 36494, 36725, 37141, 37141, 
             38370, 38730, 39557, 39861, 40131, 40678, 40678, 42215, 42215, 
             42215, 42215, 42215, 44731, 45946, 46366, 46795, 47932, 48184, 
             48398, 48897, 49902, 50271, 50610, 51566, 51779, 51977, 52383, 
             52383, 52383, 53791, 54416, 54630, 54804, 55170, 56001, 56293, 
             56584, 57210, 57210, 57554, 57924, 58712, 59001, 59259, 59869, 
             60056, 60186, 60537, 61339, 61614, 61904, 62063, 62209, 62382, 
             62745, 63713, 64016, 64267, 64399, 64555, 64671, 65049, 65915, 
             66197, 66197, 67062, 67229, 67380, 67690, 68431, 68660, 68942, 
             69578, 69578, 69906, 70309, 70963, 71273, 71619, 72268, 72497, 
             72668, 73113, 73725, 74075, 74075, 75238, 75478, 75673, 76128, 
             76852, 77209, 77205, 78211, 78401, 78572, 79030, 79752, 80045, 
             80404, 80404, 80404, 80404, 81817, 82399, 82705, 82975, 82971, 
             82968, 82968, 84185, 84610, 84884, 85141, 85141, 85141, 85141, 
             86347, 86764, 87079, 87372, 87796, 87958, 88088, 88447, 88811, 
             89063, 89328, 89551, 89720, 89927, 90260, 90660, 90660, 91148, 
             91148, 91424, 91423, 92080, 92367}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"England", "UnitedKingdom"}], 
        "Country" -> Entity["Country", "UnitedKingdom"], "GeoPosition" -> 
        GeoPosition[{52.578333829720236`, -1.4918739645867167`}], 
        "ConfirmedCases" -> TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 156018, 156410, 156782, 157074, 157293, 
             157545, 157797, 158078, 158401, 158725, 158940, 159118, 159328, 
             159435, 159696, 159958, 160150, 160292, 160391, 160587, 160764, 
             243910, 244412, 244991, 245483, 245814, 246386, 246992, 247609, 
             248089, 248895, 249510, 250007, 250379, 250885, 251482, 252117, 
             252913, 253585, 254120, 254519, 255038, 255740, 256428, 257138, 
             257859, 258475, 259022, 259722, 260534, 261348, 262070, 262746, 
             263602, 263602, 263602, 265849, 266645, 267324, 268312, 269011, 
             269011, 270971, 270971, 270971, 274248, 275200, 275834, 276809, 
             277516, 278551, 279459, 280519, 281457, 282215, 283280, 284155, 
             285505, 286611, 287502, 288989, 290138, 291179, 292418, 293925, 
             295594, 297071, 299647, 302175, 304269, 306555, 309133, 312276, 
             315284, 318121, 320380, 323029, 326425, 329213, 332984, 336622, 
             339901, 343655, 347842, 352925, 358557, 364280, 368919, 373719, 
             377035, 382686, 388342, 393931, 398728, 409534, 430843, 441528, 
             454176, 465704, 480656, 491428, 504056, 514439, 526086, 540396, 
             556528, 572667, 584843, 598142, 612846, 629211, 647025, 669973, 
             687327, 704443, 723775, 740262, 758145, 777774, 799019, 818759, 
             839580, 858444, 879046, 894906, 912236, 934099, 955236, 975504, 
             997379, 1015672, 1034708, 1053330, 1073300, 1104143, 1128683, 
             1152981, 1174979, 1194402, 1211951, 1229140, 1249431, 1267276, 
             1284891, 1301559, 1314888, 1324742, 1340635, 1355272, 1367546, 
             1380869, 1390923, 1401792, 1413410, 1426733, 1438725, 1452137, 
             1464803, 1479097, 1490720, 1501179, 1514139, 1531761, 1549660, 
             1567128, 1584292, 1602174, 1618678, 1642110, 1664511, 1688963, 
             1711738, 1743893, 1772635, 1804923, 1839170, 1874731, 1906291, 
             1937598, 1963217, 1999728, 2046892, 2090446, 2139956, 2190702, 
             2239950, 2286803, 2339983, 2394923, 2450983, 2497824, 2559581, 
             2613838, 2664129, 2705964, 2747085, 2789983, 2834341, 2885082, 
             2922841, 2958104, 2992238, 3022609, 3057670, 3092041, 3129156, 
             3159652, 3187232, 3207381, 3225301, 3248215, 3274397, 3301106, 
             3322195, 3341249, 3358064, 3373085, 3390350, 3408879, 3426193, 
             3442495, 3456961, 3469231, 3480147, 3491698, 3503699, 3516998, 
             3528695, 3538194, 3546803, 3556039, 3566965, 3577705, 3588001, 
             3596965, 3605373, 3614793, 3622085, 3630729, 3639352, 3646745, 
             3653272, 3658352, 3663090, 3668620, 3674028, 3679671, 3684724, 
             3689842, 3694339, 3698242, 3703136, 3707999, 3713743, 3719272, 
             3723811, 3727585, 3731849, 3736240, 3741067, 3746280, 3750089, 
             3754821, 3759280, 3764026, 3768609}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0., 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 36883, 37069, 37240, 37266, 37299, 
             37524, 37692, 37812, 37979, 38099, 38138, 38152, 38427, 38568, 
             38706, 38888, 38982, 39015, 39036, 39187, 39354, 39434, 39567, 
             39626, 39647, 39663, 39815, 39936, 40018, 40066, 40213, 40234, 
             40245, 40379, 40462, 40528, 40640, 40680, 40706, 40718, 40828, 
             40906, 40959, 41082, 41143, 41156, 41163, 41282, 41360, 41398, 
             41512, 41584, 41589, 41598, 41598, 41598, 41795, 41886, 41940, 
             41948, 41900, 41900, 42072, 42072, 42072, 42072, 42072, 36731, 
             36742, 36757, 36763, 36765, 36782, 36786, 36789, 36805, 36818, 
             36828, 36837, 36849, 36850, 36852, 36854, 36861, 36872, 36881, 
             36892, 36894, 36896, 36923, 36931, 36944, 36950, 36959, 36964, 
             36971, 36996, 37013, 37031, 37054, 37076, 37094, 37103, 37139, 
             37172, 37209, 37240, 37270, 37286, 37299, 37367, 37429, 37477, 
             37535, 37574, 37606, 37625, 37688, 37753, 37823, 37902, 37956, 
             38018, 38061, 38185, 38293, 38404, 38524, 38652, 38711, 38783, 
             38996, 39140, 39300, 39488, 39629, 39766, 39856, 40178, 40414., 
             40628, 40854, 41132, 41264, 41389, 41748, 42136, 42433, 42736, 
             43064, 43191, 43366, 43826, 44304, 44773, 45053, 45449, 45592, 
             45783, 46301, 46724, 47140, 47576, 47842, 48212, 48406, 48941, 
             49545, 49956, 50407, 50804, 50998, 51187, 51718, 52273, 52601, 
             53025, 53369, 53570, 53747, 54285, 54736, 55155, 55508, 55948, 
             56086, 56280, 56747, 57284, 57722, 58125, 58566, 58807, 59005, 
             59613, 60238, 60706, 61276, 61451, 61697, 62019, 62379, 63298, 
             64118, 64731, 65080, 65472, 65842, 66626, 67510, 68514, 69670, 
             70541, 71039, 71534, 72685, 74085, 75199, 76338, 77478, 78076, 
             78636, 80143, 81805, 82939, 84190, 85423, 85974, 86522, 88042, 
             89610, 90698, 91822, 92920, 93448, 93816, 95172, 96345, 97162, 
             98054, 98778, 99107, 99411, 100385, 101311, 101905, 102562, 
             103106, 103334, 103544, 104277, 104915, 105292, 105773, 106170, 
             106360, 106525, 107008, 107388, 107654, 107954, 108208, 108323, 
             108422, 108729, 108993, 109195, 109406, 109541, 109602, 109664, 
             109871, 110027, 110165, 110310, 110416, 110456, 110517, 110618, 
             110739, 110822, 110903, 110985, 111011, 111027, 111130}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"California", "UnitedStates"}], 
        "Country" -> Entity["Country", "UnitedStates"], "GeoPosition" -> 
        GeoPosition[{37.28105574018539, -119.64765211057427`}], 
        "ConfirmedCases" -> TemporalData[TimeSeries, {CompressedData["
1:eJyF0nt0z3Ucx/Hn5/v77Xf7fr+/336bXWwTG3bBZtvv8mU0IrcSWZNmbsUk
DeEwWkRZ2By30FyyiBUphxiWW41inNiUqITZctiKQuwcdvp0jj86nTp9z3l8
33983uf7fn0+n2/0C5MyJiqAkD766/WPR/kXpr+x/A/rQ7b/4fgP6kPaQyFS
c6m15JG6SIOkkVKOtFTaIV2QIuR+MqWtUqIMXi7dkPbK4KvNci0AxsuQXWWA
63Yok4O6uCAlCK4Gw4+hUBMJQa1gTxs5ux3UJkHbVPmtNHg7Hb7qCVX9oKk/
ZGVAZabMmwX5w2Xe0ZA+DlrkQt1kiMyT/a/CqjdhYSFcWibrGijaAHM2Q+xW
KN0uc+2Clw9CdQWknYDRpyHvLPT/Hp6rhWMNcOR3eQaNcq5JEGgTVDkFPUIE
I6IEeW0EK9sLCjyC2M6ClHRBfB/BLwMFF4cIFo0S5L8keHySYOkMQZd5gvJC
2b9SMPs9QZ+PBQN3CxIPy/7jAm+1oNMFQbt6waA/BEaTYK9D4fMQhYpoBXey
wpWuCsoTCg0ZCgNGKfyWq/BrvsInixQmrlWYsE1hyj6FA1UKd+oVBj9QKHab
uB9notgvL6SfifUvmeg+30TWJhOhFSaWV5u4+IOJa3Yzn8WYyR1s5vR0Myve
NZNz0EzCBTOHbplJDA1gdN8Aeo0PYOPSANSdAfQ7FcDQqwEkBVk4n26hdIKF
3cstzNxj4fYpC4d/trDwgYXrSVZSxlp5q8BK//et3Cm3sv20lVs1VobbbXwS
bmNtDxtNQ2ysmGbjjUIbYRWyfmsj0GLnUks7vwy145hoRxTY+WCNnf377Yy/
ZKf+lp1vdAdTWzsY5XdwbYCDvmMcrMt3MGGxg4RNDp4tc1By1EHkRQfP1zuY
K1SUZiqxsSoZnVTie6vkDFApzlaJeFFl8jSV8/NUVq5QmVOi8vU2lZN7VRqP
qMw6o3KlVqXqlsq9JpWnnRrXmms0i9OI8mj076kRmaGxMVvjg7EasVM0Pnpd
40CRxrtrNAZ9qHF8l8anhzTSKjWOndM4W6ex67ZGudBZpel0DtOZ3UZnl0fH
201n8JM6izN1tg3T5X+uE/OaztoFcn2Dzo0yHXOlzphvdcbW6hy7o9NgcUK4
k6gEJx07O/myj5P8LCeNuU4WvOGkbLWTop1Ollc62fKdk5RGJ/fCXdxNdpGZ
4SI9z0X2Ohclh1xE1LmY5QxkXNdAyiYFcva9QCJ/CmSdcBNpuJk5001DmZuh
l93EhwVxc1AQF4uC2Hs0iKGmYB4ZEMyqDcGMbgpm8PhmLPu+GQ2dQqgtDiEy
KhSjJJQ9MWHMeD+MmuRw6laF82V4c1xBEUyviODM65HMahHF3ENRdMxuQW5N
C9IXP8Jr0S15MLmlPOdW5FxtRYdp0eQSQ/s5MXS7E8Pxza15akobUm1tuT23
Lb1DYklYH8tTaXHsbowjvTqe0hkJnDC3o3JLO8qeb89UOvBFcQfuJiQytTSR
X4OTOF2SxP3rSVge7ciRbR35zppMYFYypdYU6oalcH51Cjtup5D9WCo5BamM
25eKITwUeD1k5XhYsd7DY5c8TBZeZsd5KR7h5eZ8L/FbvMys9nLqrpdNET6W
Jfvo3tvHyBd91MzxEf6Oj+PlPrZW++hd6yP1no8Obj8b4/z0etTPkoF+0kb5
6THBT+J8PxOL/byyxc+NA7JW+Tl32c/yej8n7/p5RjcoiTCYF29w3jCI6G7w
Tl+D9pkGRcMMzo0zyJtu8NNcgx6FBu4lBn3XGVzYbPAnjnONgA==
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
              2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59 "", 59 "", 59 "", 59 
             "", 59 "", 59 "", 59 "", 59 "", 59 "", 59 "", 59 "", 59 "", 59 
             "", 59 "", 59 "", 59 "", 59 ""}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           DateFunction -> Automatic, 
            ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
              1, 1, 1, 1, 2, 3, 4, 4, 5, 6, 7, 12, 13, 18, 23, 24, 30, 39, 50,
              65, 81, 94, 110, 124, 146, 173, 199, 238, 265, 289, 348, 380, 
             432, 495, 544, 583, 605, 641, 715, 768, 861, 957, 1037, 1140, 
             1177, 1225, 1282, 1421, 1533, 1621, 1689, 1725, 1779, 1864, 1946,
              2031, 2126, 2180, 2216, 2278, 2381, 2464, 2535, 2613, 2687, 
             2716, 2779, 2879, 2957, 3052, 3136, 3208, 3240, 3279, 3403, 3497,
              3583, 3666, 3738, 3754, 3769, 3819, 3895, 3993, 4077, 4144, 
             4172, 4217, 4305, 4374, 4444, 4529, 4606, 4632, 4657, 4745, 4854,
              4934, 4978, 5076, 5099, 5114, 5200, 5271, 5355, 5426, 5494, 
             5515, 5566, 5626, 5725, 5806, 5868, 5899, 5932, 5983, 6082, 6169,
              6265, 6315, 6334, 6373, 6441, 6573, 6718, 6859, 6955, 7027, 
             7051, 7089, 7250, 7375, 7489, 7603, 7702, 7715, 7770, 7888, 8047,
              8201, 8337, 8408, 8448, 8494, 8679, 8908, 9026, 9214, 9345, 
             9396, 9441, 9684, 9808, 10021, 10133, 10307, 10377, 10476, 10523,
              10753, 10870, 11148, 11218, 11243, 11296, 11504, 11690, 11810, 
             11946, 12131, 12153, 12235, 12382, 12532, 12677, 12805, 12894, 
             12937, 13022, 13150, 13317, 13493, 13638, 13709, 13731, 13758, 
             13823, 13983, 14077, 14230, 14327, 14378, 14439, 14594, 14691, 
             14804, 14893, 15018, 15016, 15056, 15189, 15291, 15393, 15516, 
             15583, 15606, 15633, 15782, 15885, 15973, 16054, 16115, 16147, 
             16171, 16244, 16338, 16418, 16486, 16567, 16579, 16586, 16644, 
             16729, 16832, 16910, 16956, 16979, 16982, 17055, 17167, 17256, 
             17305, 17343, 17358, 17386, 17460, 17529., 17559, 17618, 17659, 
             17671, 17689, 17745, 17808, 17860, 17931, 17961, 17973, 18021, 
             18066, 18108, 18135, 18205, 18253, 18262, 18288, 18347, 18453, 
             18542, 18640, 18672, 18726, 18753, 18862, 18968, 19025, 19089, 
             19116, 19151, 19173, 19304, 19410, 19553, 19734, 19870, 19928, 
             20015, 20205, 20411, 20603, 20787, 20958, 21040, 21144, 21420, 
             21817, 22094, 22370, 22582, 22675, 22837, 23239, 23558, 23881, 
             23958, 24218, 24282, 24419, 24917, 25334, 25897, 26286, 26542, 
             26638, 26880, 27400, 27926, 28457, 29106, 29707, 30004, 30260, 
             31031, 31684, 32318, 33002, 33408, 33615, 33746, 34441, 35060, 
             35549, 36362, 36846, 37121, 37543, 38268, 38817, 39574, 40238, 
             40702, 40928, 41402, 41902, 42484, 43120, 43690, 43991, 44155, 
             44494, 45009, 45496, 46022, 46466, 46874, 47057, 47119, 47510, 
             47936, 48259, 48836, 49120, 49345, 49541, 49888, 50972, 51395, 
             51794, 51953, 52158, 52491, 52798, 53083, 53466, 53854, 54134, 
             54220, 54316, 54628, 54890, 55160, 55517, 56426, 56573, 56674, 
             56796, 56987, 57200, 57350, 57435, 57505, 57622, 57798}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> Missing["NotAvailable"], "Country" -> 
        Entity["Country", "Turkey"], "GeoPosition" -> GeoPosition[{39., 35.}],
         "ConfirmedCases" -> TemporalData[TimeSeries, {CompressedData["
1:eJzdk4lTlVUYh5/vLB+LgrthKni5K/dyXRhJLMXcUCOVcEsRd1NzJyWXRAyx
cqSR9FakXinETE1zRTGXHJWMzD1y0hoxl1EsNctx72umv6Iz85x33vP+3t87
Z+Yc26ip6VMEYFhs+Hf7HyzjP/R/mBb1LVpZjLI4YDHOEgSti59RcN8SpYXA
gjDwR0KXxnC9meXhgFQv/NwWOnWEqhTY/QrkZMLeCRCWDR3zIT0A3lLYUQYV
lfDWLzD7dxj0BOrWMThpMziVYFDU2SD2FYMxow3GzTTIWmAQLDA4UWTweI1B
wiaD/J0GF/YbDKg0WHLWIOoXg6rLBpk1BhvuGJy+b1AsBIPDBYX1BCueEXza
XPDQJijxCMJbCSYnCpp0EIzuItjTQ9D5ZUGnNEGt/oLvBwkWZghcI6zeMYLs
8QLvJEHiNMHpGYKeswUx8wSv5Vq+eYJtiwSNFwvuFAiWFwpEwIofC6avFKQX
C2pKBBWfC7I2CpxbrTm7BG/uEyQcss6PCn79QbDqtGDeT1b9guDiRcHZK4Iv
agQZdwTH7wl8j60eITkbIqmuLVlcTxLfWHLgWUmXGMk+u+SRW9IkXuJtbdFW
0ihJEtFBYrwoud1VcrKHZGGqJK6vpCJdkjlQcn+wZGWmpMNIycExkn7jLZ+J
ksBUSds3JJXZkvfnWPUciXxbci5fsvc9yccFkrmFkp0BSdonlndQklUiMddJ
1myU9N4iqdkhWVcuydtv5YckiUclF45JNp2SrKqSbD8vSaqW3LgiCa2RHL0l
mfS35KVHkomGIjlE4YtQJDVQiCaKxBjFYKci4FM8baNITVKcSVY86aYoTVUs
SlfUGay4N0yRM1YxeqJiyHRF5CzF+RxFRb6i3RJF7DKFo0jRYLWiutTSblSM
3aaILlesPmD5HFF0/l5x+KTi1Sqr77wipVpx7ariyE1Fxp+K4H1F/lPFVq0x
amuG1dccj9J8Ga156NBk+DTVbTTzkzTLOmn6pGjG9tb0HaDZMVTzwRjNt5M0
HWdqxs/T9MrX/Fqgyf1Qs2C1Zuk6zWdbND3Krfyg5VOpWXtG8/iCRl3VvHtL
88IDTR1lEhNp/d4ok/xYk6DfJK+9yebuJinpJs8PN3FOMVmZYzJkqUmvNSaX
d5u8dtJk9Q2TGaEh1LeHUL45hOWZofhOh7Kkexjz94fRPDGcE1vC6d26Fv6v
anE4vjbvlNSmri2CfZ9FEIyOJDsQyTe+phSuasousxkT5jSz3mszLk9szoiq
5ixOjqZjIJqi36JJahXDtDkxJFTEcC2iBVPTWzCvoAUPDrVgEDYaJtsYMdfG
km022l2ycSkyllmJsdx7PZZASSwrzsXiCrPzONFOcoadWzl2zq+14z9mZ/4d
OwsaOXiY6GB2PwerJjnIy3PgDDroWebg3HEHnqsOQp84KK3vZLPHyZRuVhzp
JDrHosjJX9ucfHTMyb4bTtqEu6iKc/F1TxdF41xkLXKRW+zCfcDFpYsuSqWb
VJubYCc3uzLd9Mh2kxZwk7DdzfETbqJuumkQ7uGQx8PALh6ejPRQmO/h+noP
fU546HrXQ3xUHA3bx1E2PI67BRblcbS8Gkf/Bl76dPZiTPZSXOwl40cv7er4
aJTiIyvXx9A9PoJ/+PDHx/PJ5HjmlMVTqf3cHuTnufV+xAM/36W1pG5ZS/4B
FZN6mQ==
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 26,
              42, 70, 105, 162, 243, 333, 415, 484, 786, 1042, 1326, 1582, 
             1846, 2142, 2423, 2965, 3446, 3957, 4799, 5674, 7089, 8631, 
             10453, 11976, 13430, 14918, 16477, 18491, 21737, 25582, 29140, 
             33791, 38809, 44040, 48886, 53808, 58259, 63151, 68166, 73285, 
             78202, 82984, 86396, 89480, 92691, 95780, 98889, 101715, 104030, 
             106133, 108137, 109962, 111577, 112895, 113987, 114990, 116111, 
             117602, 118694, 120015, 121507, 122793, 124369, 125963, 126984, 
             127973, 128947, 129921, 130852, 131778, 133400, 135322, 137969, 
             141380, 144598, 146839, 147860, 149102, 150087, 151417, 152364, 
             153379, 154640, 156022, 157516, 158828, 160240, 161533, 162848, 
             164234, 165706, 167198, 169182, 170595, 171809, 173111, 175422, 
             176965, 178278, 179492, 180680, 182995, 185292, 187511, 190390, 
             191883, 193217, 194515, 195671, 196720, 197733, 198820, 199834, 
             201013, 202010, 203002, 204011, 205214, 206365, 207374, 208477, 
             209487, 210469, 211561, 212557, 213539, 214535, 215516, 216494, 
             217497, 218491, 219506, 220546, 221574, 222656, 223759, 224970, 
             226155, 227089, 228057, 228980, 229972, 230969, 231971, 232913, 
             233915, 234797, 235569, 236370, 237165, 237908, 238795, 239797, 
             240792, 241809, 242812, 243839, 244926, 245929, 246876, 248087, 
             249108, 250092, 251105, 252152, 253245, 254188, 255407, 256524, 
             257731, 258833, 260058, 261260, 262602, 263745, 264805, 266117, 
             267233, 268435, 269696, 270723, 271964, 273282, 274514, 275630, 
             277052, 278504, 279749, 281151, 282657, 283868, 285050, 286370, 
             287599, 288954, 290352, 291754, 293145, 294357, 295658, 296972, 
             298368, 299679, 301098, 302499, 304003, 305427, 306939, 308446, 
             310027, 311520, 313093, 314390, 316008, 317519, 319181, 320762, 
             322465, 323971, 325486, 327007, 328824, 330665, 332379, 334293, 
             336221, 338239, 340286, 342501, 344613, 346794, 348804, 351102, 
             353663, 356375, 359063, 361655, 364573, 367592, 370825, 374637, 
             377891, 381569, 385480, 388771, 392616, 396227, 400242, 404727, 
             409320, 414141, 418331, 423142, 427242, 431253, 436270, 441515, 
             447361, 452593, 458109, 1581565, 1603780, 1631944, 1661191, 
             1691113, 1721607, 1753552, 1779068, 1800286, 1834705, 1866815, 
             1901307, 1935292, 1970803, 1994034, 2015230, 2037433, 2058437, 
             2078629, 2100650, 2114760, 2126432, 2136534, 2146430, 2155338, 
             2164040, 2172251, 2182145, 2190047, 2198150, 2208451, 2218464, 
             2227927, 2236938, 2246047, 2254052, 2262864, 2270769, 2277987, 
             2283919, 2290032, 2296050, 2301861, 2307721, 2314403, 2322511, 
             2331314, 2340216, 2348309, 2355409, 2362415, 2370431, 2379070, 
             2387384, 2396199, 2404416, 2412505, 2440706, 2429273, 2437382, 
             2445285, 2453096, 2461204, 2468419, 2475329, 2482435, 2489624, 
             2496833, 2504050, 2511548, 2518758, 2523760, 2529450, 2534996, 
             2540293, 2546503, 2556785, 2565723, 2572234, 2578181, 2586073, 
             2593264, 2601137, 2608848, 2616139, 2.623924*^6, 2632030, 
             2640669, 2649862, 2659093, 2670273, 2685560, 2701076, 2716969, 
             2734862, 2752023, 2770638, 2788757, 2807572, 2825187, 2844681, 
             2863882}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 4, 9, 30, 37, 44, 59, 
             75, 92, 108, 131, 168, 214, 277, 356, 425, 501, 574, 649, 725, 
             812, 908, 1006, 1101, 1198, 1296, 1403, 1518, 1643, 1769, 1890, 
             2017, 2140, 2259, 2376, 2491, 2600, 2706, 2805, 2900, 2992, 3081,
              3174, 3258, 3336, 3397, 3461, 3520, 3584, 3641, 3689, 3739, 
             3786, 3841, 3894, 3952, 4007, 4055, 4096, 4140, 4171, 4199, 4222,
              4249, 4276, 4308, 4340, 4369, 4397, 4431, 4461, 4489, 4515, 
             4540, 4563, 4585, 4609, 4630, 4648, 4669, 4692, 4711, 4729, 4746,
              4763, 4778, 4792, 4807, 4825, 4842, 4861, 4882, 4905, 4927, 
             4950, 4974, 5001, 5025, 5046, 5065, 5082, 5097, 5115, 5131, 5150,
              5167, 5186, 5206, 5225, 5241, 5260, 5282, 5300, 5323, 5344, 
             5363, 5382, 5402, 5419, 5440, 5458, 5475, 5491, 5508, 5526, 5545,
              5563, 5580, 5596, 5613, 5630, 5645, 5659, 5674, 5691, 5710, 
             5728, 5747, 5765, 5784, 5798, 5813, 5829, 5844, 5858, 5873, 5891,
              5912, 5934, 5955, 5974, 5996, 6016, 6039, 6058, 6080, 6102, 
             6121, 6139, 6163, 6183, 6209, 6245, 6284, 6326, 6370, 6417, 6462,
              6511, 6564, 6620, 6673, 6730, 6782, 6837, 6895, 6951, 6999, 
             7056, 7119, 7186, 7249, 7315, 7377, 7445, 7506, 7574, 7639, 7711,
              7785, 7858, 7929, 7997, 8062, 8130, 8195, 8262, 8325, 8384, 
             8441, 8498, 8553, 8609, 8667, 8722, 8778, 8837, 8895, 8957, 9014,
              9080, 9153, 9224, 9296, 9371, 9445, 9513, 9584, 9658, 9727, 
             9799, 9874, 9950, 10027., 10099, 10177, 10252, 10326, 10402, 
             10481, 10558, 10639, 10722, 10803, 10887, 10972, 11059, 11145, 
             11233, 11326, 11418, 11507, 11601, 11704, 11820, 11943, 12084, 
             12219, 12358, 12511, 12672, 12840, 13014, 13191, 13373, 13558, 
             13746, 13936, 14129, 14316, 14509, 14705, 14900, 15103, 15314, 
             15531, 15751, 15977, 16199, 16417, 16646, 16881, 17121, 17364, 
             17610, 17851, 18097, 18351, 18602, 18861, 19115, 19371, 19624, 
             19878, 20135, 20388, 20642, 20881, 21093, 21295, 21488, 21685, 
             21879, 22070, 22264, 22450, 22631, 22807, 22981, 23152, 23325, 
             23495, 23664, 23832, 23997, 24161, 24328, 24487, 24640, 24789, 
             24933, 25073, 25210, 25344, 25476, 25605, 25736, 25865, 25993, 
             26117, 26237, 26354, 26467, 26577, 26685, 26797, 26900, 26998, 
             27093, 27187, 27284, 27377, 27471, 27562, 27652, 27738, 27821, 
             27903, 27983, 28060, 28138, 28213, 28285, 28358, 28432, 28503, 
             28569, 28638, 28706, 28771, 28839, 28901, 28965, 29030, 29094, 
             29160, 29227, 29290, 29356, 29421, 29489, 29552, 29623, 29696, 
             29777, 29864, 29959, 30061, 30178, 30316}}, {
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"Texas", "UnitedStates"}], 
        "Country" -> Entity["Country", "UnitedStates"], "GeoPosition" -> 
        GeoPosition[{31.48178818314407, -99.37005326650524}], 
        "ConfirmedCases" -> TemporalData[TimeSeries, {CompressedData["
1:eJzV0olzTVccwPHvfe/l3ffuu/e9vLxEvDzZk7dECUpDhFZILbGHEPuSiRGi
jGVoKdXUTi21pCFijK3EElE1loaKZYKgqSHVEkM0qDVFlegx03+id+Zzzpy5
5/f7nd+5N3LUJ30n6ABJ2Plu+B89esEgmASLoP0nSHAJjYU2QhehvzBBKHoX
I/pcJKSIxicLz4XDItl5kcxlhBUyrDXDHwqkqlBtFbXs4r0DshrAeif4GsG4
cPgtCpq74Ywo1jUebrSAnFbwUwIUJEJ0e3jQAQ6lgH9XSEoFTw8Y1lvsT4NP
B8KgIZAxDOaPhNpR8FcWzMiGhInwejKUTYf6mWCbA9NzYeICOLkEPl8Br1aL
+DxxlgK4ugnU7VAqmswrhiGHxPooOEtFXBlcOwvtKsSZLsHLX6BVlah7HZbd
gN234f59uPMn/FwHS16/uzuJh0YJTZPId0hkuiRqoiSWuyX2xEm0aC6xsK3E
rWSJH1MlvkyTKM+QGD1C4oscic2zJBYvlijOFzl2STQ7JBF2TqLlTYncOokC
TcfSaB01bXQs6KYjKlNH3UwdvTfpOH5Yx4tKHXkPdUz5W0e3aD1VqXo2TdDz
Jl9P4BE9FdV6snUGLocacHYy0GS8gWPfGehyzcCJNwbyQv24296P4YOFJX40
2efHufN+LKvzI1Nv5KL42EVtjezPNFK2wEjQXiPJZ42suGJk7wsjExvJdO4s
03uUjHe2zM21MhG7ZZaekulUI3O2XmaH04QzycTLdBNzZ5i48rWJB0Umdpw0
0fKaicJHJmLrTbzxN1McaWZ7azMD+5hZPcLMoMlmPlxuJjnfzOZtZpyHxbrc
TNNrZtIfmzktKYRYFEZaFfJdCuPjFdYlKFR1V+g3QGHDGIWSaQr2lQp3Nyls
3a/wfqlC5nmF+GqFxA8shPexIKVbyBpj4fpUC/PnWri9ysKEDRYiDljILxdz
lYVbjyxU61WKrSoVYSpj41WyO6p0S1PZmKnSeLLKq5kq0+arlG5QuVmicuy0
yo3fVRKfqjyXNaY4NFK8GlOTNUK7a9wdoxG3TCNrvUZ9iUaHCxq/1mocN1gJ
d1nZ0sbKxFQrN0ZYCZtjpeMWKwHlVj6utXJHtnE5zMbiRBtHsm3MybPRtdDG
rns2Uqz+7Gjsz9bO/gye5k/NNn8mXfcnQbMzqo2d7t/aOVhsZ6gcwLbkAKYM
CqB8XAALcwMo2BfAzZoApjVwcHmIg+pCB1qlg3x9IE+bBiL3DSRtSSC9SgNp
9jKQnOZBrBseRPqcIA6cbkBaYDBPxwbzVVEwpifB9HqvIbN7C7Ma8vxSQw55
nNj7OjEMdxI3xUn2eSdlT53EZIVwrySEzc9CWOxxUTTUxfKNLnrVusjPbMTs
E41IjQ2lc0YoO8+E0s4URtKwMA4cDWNPdDgblofT9UU4a5IikKdG0LMwglX3
I+ibEcmYkkh61EeyIyGKA+lRPC6M4uizKDKToilcFs36ymjm2mJYlxxD2sUY
TofEMntELKVrYtlfEUvt41iW2t3MTXDTLsdNXYGb3Atuqv5xs9DuYVGMR/x7
Hi4kerjV08P1AR4+mumh4TceKnd72FfmwfTIQz/NS1VjL3K6F0eOl/6feTmY
56Xt916o9PLqiZcK2UdaAx/zIn2kxvvokuLDONhHxiQfd+f5eLvSh7tA2ONj
9Ckfuqs+ht3x8UOdj+C3Plqb4tjriCPMHce/B7R/3g==
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255 "", 255 "", 255 "", 
             255 "", 255 "", 255 "", 255 "", 255 "", 255 "", 255 "", 255 "", 
             255 "", 255 "", 255 "", 255 "", 255 "", 255 ""}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           DateFunction -> Automatic, 
            ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 5, 5, 6, 9, 12, 15, 
             21, 26, 30, 37, 45, 54, 66, 77, 100, 116, 136, 150, 160, 189, 
             210, 238, 266, 283, 305, 342, 375, 414, 451, 476, 490, 507, 533, 
             556, 604, 624, 638, 651, 666, 719, 754, 812, 840, 863, 878, 901, 
             925, 954, 985, 1025, 1066, 1094, 1117, 1146, 1172, 1235, 1280, 
             1318, 1343, 1350, 1388, 1426, 1460, 1470, 1478, 1528, 1533, 1546,
              1581, 1611, 1619, 1652, 1675, 1683, 1716, 1744, 1776, 1812, 
             1833, 1841, 1848, 1867, 1905, 1930, 1956, 1971, 1984, 2001, 2049,
              2089, 2129, 2158, 2183, 2191, 2207, 2236, 2270, 2317, 2354, 
             2388, 2402, 2416, 2455, 2503, 2542, 2592, 2607, 2628, 2677, 2778,
              2875, 3006, 3062, 3138, 3216, 3276, 3362, 3498, 3657, 3820, 
             3939, 4012, 4106, 4199, 4439, 4622, 4790, 4990, 5076, 5713, 5913,
              6193, 6442, 6576, 6865, 6878, 7016, 7271, 7706, 8569, 8847, 
             9058, 9157, 9230, 9222, 9527, 9771, 10078, 10268, 10396, 10447, 
             10678, 10934, 11174, 11418, 11581, 11699, 11749, 11935, 12140, 
             12365, 12537, 12607, 12683, 12779, 12919, 13104, 13296, 13426, 
             13576, 13654, 13697, 13792, 13923, 13930, 14227, 14332, 14405, 
             14451, 14593, 14738, 14826, 14951, 15051, 15088, 15127, 15229, 
             15372, 15510, 15610, 15707, 15745, 15807, 15902, 16016, 16130, 
             16224, 16295, 16320, 16437, 16528, 16661, 16767, 16871, 16943, 
             16971, 16995, 17078, 17188, 17283, 17375, 17440, 17465, 17481, 
             17558, 17652, 17659, 17773, 17915, 17955, 17978, 18061, 18162., 
             18276, 18385, 18465, 18502, 18534, 18632, 18771, 18907, 19046, 
             19146, 19184, 19223, 19337, 19469, 19474, 19785, 19918, 20002, 
             20032, 20147, 20338, 20565, 20751, 20903, 21013, 21049, 21245, 
             21454, 21639, 21693, 21788, 21843, 21896, 22114, 22335, 22573, 
             22825, 23055, 23137, 23186, 23372, 23657, 23897, 24143, 24347, 
             24400, 24440, 24648, 24920, 25177, 25522, 25714, 25827, 25936, 
             26117, 26406, 26707, 26896, 26916, 26966, 27038, 27282, 27600, 
             27944, 28253, 28338, 28430, 28551, 28797, 29118, 29498, 29645, 
             30313, 30479, 30585, 30895, 31277, 31693, 32086, 32428, 32600, 
             32711, 33032, 33491, 33942, 34381, 34725, 34911, 35090, 35420, 
             35877, 36292, 36650, 36924, 37074, 37245, 37619, 38039, 38453, 
             38893, 39182, 39322, 39482, 39799, 40148, 40535, 40901, 41149, 
             41273, 41336, 41386, 41496, 41630, 41832, 42041, 42162, 42301, 
             42521, 42831, 43085, 43376, 43519, 43697, 43909, 44186, 44463, 
             44757, 45047, 45249, 45315, 45411, 45582, 45796, 46007, 46229, 
             46366, 46423, 46519, 46651, 46827, 47025, 47198, 47298, 47346, 
             47446, 47527}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"Maharashtra", "India"}], "Country" -> 
        Entity["Country", "India"], "GeoPosition" -> 
        GeoPosition[{19.45377788905411, 76.12177018861917}], "ConfirmedCases" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 90787, 97648, 97648, 101141, 104568, 
             110744, 113445, 116752, 120504, 124331, 128205, 132075, 135796, 
             139010, 142900, 147741, 152765, 159133, 164626, 169883, 174761, 
             180298, 186626, 192990, 200064, 206619, 211987, 217121, 223724, 
             230599, 238461, 246600, 254427, 260924, 267665, 275640, 284281, 
             292589, 300937, 310455, 318695, 327031, 337607, 347502, 357117, 
             366368, 375799, 383723, 383723, 400651, 411798, 422118, 431719, 
             441228, 450196, 457956, 468265, 479779, 490262, 503084, 515332, 
             524513, 535601, 548313, 560126, 572734, 584754, 595865, 604358, 
             615477, 628642, 643289, 657450, 671942, 682383, 693398, 703823, 
             718711, 733568, 747995, 764281, 780689, 792541, 808306, 825739, 
             843844, 863062, 883862, 907212, 923641, 943772, 967349, 990795, 
             1015681, 1037765, 1037765, 1060308, 1097856, 1097856, 1121221, 
             1145840, 1167496, 1188015, 1208642, 1224380, 1242770, 1263799, 
             1282963, 1300757, 1321176, 1351153, 1366129, 1384446, 1400922, 
             1416513, 1430861, 1443409, 1453653, 1465911, 1480489, 1493884, 
             1506018, 1517434, 1528226, 1535315, 1543837, 1554389, 1564615, 
             1576062, 1586321, 1595381, 1601365, 1609516, 1617658, 1625197, 
             1632544, 1638961, 1645020, 1648665, 1654028, 1660766, 1666668, 
             1672858, 1678406, 1683775, 1687784, 1692693, 1698198, 1703444, 
             1710314, 1714273, 1719858, 1723135, 1726926, 1731833, 1736329, 
             1736329, 1744698, 1747242, 1749777, 1752509, 1757520, 1763055, 
             1768695, 1774455, 1780208, 1784361, 1789800, 1795959, 1802365, 
             1808550, 1814515, 1820059, 1823896, 1823896, 1832176, 1837358, 
             1842587, 1847509, 1852266, 1855341, 1859367, 1864348, 1868172, 
             1872440, 1876699, 1880416, 1883365, 1886807, 1886807, 1886807, 
             1888767, 1892707, 1896518, 1899352, 1902458, 1906371, 1909951, 
             1913382, 1916236, 1919550, 1922048, 1925066, 1928603, 1928603, 
             1932112, 1938854, 1942136, 1947011, 1950171, 1954553, 1958282, 
             1958282, 1965556, 1969114, 1971552, 1974488, 1978044, 1978044, 
             1984768, 1987678, 1990759, 1992683, 1994977, 1997992, 2000878, 
             2003657, 2006354, 2009106, 2010948, 2013353, 2015524, 2018413, 
             2021184, 2023814, 2026399, 2028347, 2030274, 2033266, 2036002, 
             2038630, 2041398, 2044071, 2046287, 2048802, 2052253, 2052905, 
             2056575, 2060186, 2064278, 2067643, 2071306, 2076093, 2081520, 
             2087632, 2093913, 2100884, 2106094, 2112312, 2121119, 2129821, 
             2138154, 2146777, 2155070, 2161467, 2169330, 2179185, 2188183, 
             2198399, 2208586, 2219727, 2228471, 2238398, 2252057, 2266374, 
             2282191, 2297793, 2314413, 2329464, 2347328, 2370507, 2396340, 
             2422021, 2449147, 2479682, 2504327, 2533026}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 42638, 46078, 46078, 47796, 49346, 
             56049, 57851, 59166, 60838, 62773, 64153, 65744, 67706, 69631, 
             73792, 77453, 79815, 84245, 86575, 88960, 90911, 93154, 101172, 
             104687, 108082, 111740, 115262, 118558, 123192, 127259, 132625, 
             136985, 140325, 144507, 149007, 152613, 158140, 160357, 165663, 
             169569, 175029, 182217, 187769, 194253, 199967, 207194, 213238, 
             221944, 221944, 239755, 248615, 256158, 266883, 276809, 287030, 
             299356, 305521, 316375, 327281, 338362, 351710, 358421, 368435, 
             381843, 390958, 401442, 408286, 417123, 428514, 437870, 446881, 
             459124, 470873, 480114, 488271, 502490, 514790, 522427, 531563, 
             543170, 554711, 562401, 573559, 584537, 598496, 612484, 625773, 
             636574, 644400, 659322, 672556, 686462, 700715, 715023, 728512, 
             728512, 740061, 775273, 775273, 792832, 812354, 834432, 857933, 
             884341, 916348, 936554, 956030, 973214, 992806, 1016450, 1049947,
              1069159, 1088322, 1104426, 1117720, 1134555, 1149603, 1162585, 
             1179726, 1196441, 1212016, 1229339, 1255779, 1266240, 1281896, 
             1297252, 1316769, 1330483, 1344368, 1358606, 1369810, 1384879, 
             1392308, 1415679, 1431856, 1445103, 1455107, 1460755, 1470660, 
             1478496, 1486926, 1494809, 1503050, 1510353, 1514079, 1524304, 
             1531277, 1540005, 1551282, 1562342, 1569090, 1577322, 1577322, 
             1588091, 1597255, 1605064, 1605064, 1612314, 1615379, 1618380, 
             1623503, 1630111, 1635971, 1642916, 1647004, 1651064, 1654793, 
             1658879, 1663723, 1668538, 1672627, 1676564, 1680926, 1685122, 
             1685122, 1695208, 1703274, 1710050, 1715884, 1723370, 1730715, 
             1737080, 1742131, 1747199, 1749973, 1753922, 1757005, 1761615, 
             1766010, 1769897, 1774255, 1778722, 1781841, 1783905, 1789958, 
             1794080, 1801700, 1804871, 1806298, 1807824, 1809948, 1814449, 
             1820021, 1824934, 1824934, 1828546, 1834935, 1836999, 1847361, 
             1850189, 1852759, 1856109, 1856109, 1861400, 1863702, 1867988, 
             1871270, 1874279, 1874279, 1881088, 1884127, 1886469, 1890323, 
             1894839, 1899428, 1903408, 1906827, 1910521, 1912264, 1915344, 
             1917450, 1920006, 1923187, 1925800, 1927335, 1929005, 1932294, 
             1936305, 1943335, 1948674, 1952187, 1953926, 1955548, 1958971, 
             1961525, 1963946, 1970053, 1972475, 1974248, 1975603, 1978708, 
             1981408, 1985261, 1987804, 1989963, 1992530, 1994947, 1999982, 
             2005851, 2008623, 2012367, 2017303, 2020951, 2024704, 2030458, 
             2036790, 2043349, 2049484, 2055951, 2062031, 2.068044*^6, 
             2077112, 2089294, 2099207, 2106400, 2117744, 2125211, 2134072, 
             2144743, 2154253, 2163391, 2175565, 2189965, 2203553, 2214867, 
             2234330, 2247495}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 3289, 3590, 3590, 3717, 3830, 4128, 
             5537, 5651, 5751, 5893, 5984, 6170, 6283, 6531, 6739, 6931, 7106,
              7273, 7429, 7610, 7855, 8053, 8178, 8376, 8671, 8822, 9026, 
             9250, 9448, 9667, 9893, 10116, 10289, 10482, 10695, 10928, 11194,
              11452, 11596, 11854, 12030, 12276, 12556, 12854, 13132, 13389, 
             13656, 13883, 13883, 14463, 14729, 14994, 15316, 15576, 15842, 
             16142, 16476, 16792, 17092, 17367, 17757, 18050, 18306, 18650, 
             19063, 19427, 19749, 20037, 20265, 20687, 21033, 21359, 21698, 
             21995, 22253, 22465, 22794, 23089, 23444, 23775, 24103, 24399, 
             24583, 24903, 25195, 25586, 25964, 26276, 26604, 27027, 27407, 
             27787, 28282, 28724, 29115, 29115, 29531, 30409, 30409, 30883, 
             31351, 31791, 32216, 32671, 33015, 33407, 33886, 34345, 34761, 
             35191, 35751, 36181, 36662, 37056, 37480, 37758, 38084, 38347, 
             38717, 39072, 39430, 39732, 40040, 40349, 40514, 40701, 40859, 
             41196, 41502, 41965, 42115, 42240, 42453, 42633, 42831, 43015, 
             43152, 43264, 43348, 43463, 43554., 43710, 43837, 43911, 44024, 
             44128, 44248, 44548, 44804, 44965, 45115, 45240, 45325, 45435, 
             45560, 45682, 45682, 45914, 45974, 46034, 46102, 46202, 46356, 
             46511, 46573, 46623, 46653, 46683, 46748, 46813, 46898, 46986, 
             47071, 47151, 47151, 47357, 47472, 47599, 47694, 47734, 47774, 
             47827, 47902, 47972, 48059, 48139, 48209, 48269, 48339, 48434, 
             48499, 48574, 48648, 48746, 48801, 48876, 48969, 49058, 49129, 
             49189, 49255, 49305, 49373, 49463, 49463, 49521, 49631, 49666, 
             49695, 49759, 49825, 49897, 49897, 50027, 50061, 50101, 50151, 
             50221, 50221, 50336, 50388, 50438, 50473, 50523, 50582, 50634, 
             50684, 50740, 50785, 50815, 50862, 50894, 50944, 51000, 51042, 
             51082, 51109, 51139, 51169, 51215, 51255, 51280, 51310, 51325, 
             51360, 51390, 51415, 51451, 51489, 51529, 51552, 51591, 51631, 
             51669, 51713, 51753, 51788, 51806, 51857, 51937, 51993, 52041, 
             52092, 52154, 52184, 52238, 52280, 52340, 52393, 52440, 52478, 
             52500, 52556, 52610, 52667, 52723, 52811, 52861, 52909, 52996, 
             53080, 53138, 53208, 53300, 53399, 53457, 53589}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"SaoPaulo", "Brazil"}], "Country" -> 
        Entity["Country", "Brazil"], "GeoPosition" -> 
        GeoPosition[{-22.26108407721984, -48.74060908621821}], 
        "ConfirmedCases" -> TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 69859, 73739, 76871, 80558, 82161, 
             83625, 86017, 89483, 95865, 101556, 107142, 109698, 111296, 
             118295, 123483, 129200, 129200, 140549, 143073, 144593, 150138, 
             156316, 162520, 167900, 172875, 178202, 181460, 190285, 191517, 
             192628, 211658, 211658, 219185, 221973, 229475, 238822, 248587, 
             258508, 265581, 271737, 275145, 281380, 289935, 302179, 310702, 
             312530, 320179, 323070, 332708, 341365, 349715, 359110, 366890, 
             371997, 374607, 386607, 393176, 402048, 407415, 412027, 415049, 
             416434, 422669, 439446, 452007, 452007, 479481, 483982, 487654, 
             487654, 514197, 529006, 542304, 552318, 558685, 560218, 575589, 
             585265, 598670, 608379, 621731, 627126, 628415, 628415, 655181, 
             674455, 674455, 697530, 699493, 702665, 711530, 721377, 730828, 
             735960, 749244, 754129, 756480, 765670, 776135, 784453, 796209, 
             801422, 803404, 804342, 814375, 826331, 837978, 845016, 853085, 
             855722, 857330, 858783, 866576, 874754, 882809, 890690, 892257, 
             893349, 901271, 909428, 916821, 924532, 931673, 935300, 937332, 
             945422, 945422, 958240, 964921, 970888, 972237, 973142, 979519, 
             985628, 991725, 991725, 1003429, 1003902, 1004579, 1010839, 
             1016755, 1022404, 1028190, 1028190, 1037660, 1038344, 1039029, 
             1045060, 1051613, 1057240, 1062634, 1062634, 1064039, 1068962, 
             1073261, 1076939, 1083641, 1089255, 1089255, 1092843, 1098207, 
             1103582, 1108860, 1113788, 1116127, 1117147, 1117795, 1118544, 
             1123299, 1123299, 1125936, 1125936, 1125936, 1125936, 1125936, 
             1150872, 1156652, 1162782, 1167422, 1168640, 1169377, 1178075, 
             1184496, 1191290, 1200348, 1205435, 1209588, 1210625, 1215844, 
             1224744, 1229267, 1233587, 1238094, 1240473, 1241653, 1250590, 
             1259704, 1267912, 1276149, 1285087, 1287762, 1288878, 1296801, 
             1306585, 1316371, 1325162, 1333763, 1334703, 1337016, 1341428, 
             1341428, 1361731, 1371653, 1384100, 1384100, 1388043, 1398757, 
             1409140, 1418491, 1422087, 1423340, 1426176, 1427752, 1440229, 
             1452078, 1462297, 1466191, 1467953, 1471422, 1473670, 1486551, 
             1501085, 1515158, 1528952, 1540513, 1546132, 1549142, 1561844, 
             1577119, 1590829, 1605845, 1619619, 1625339, 1628272, 1644225, 
             1658636, 1670754, 1679759, 1694355, 1699427, 1702294, 1715253, 
             1731294, 1746070, 1759957, 1773024, 1777368, 1779722, 1794019, 
             1807009, 1820941, 1833163, 1833163, 1849334, 1849334, 1864977, 
             1878802, 1889969, 1901574, 1911411, 1913598, 1915914, 1927410, 
             1938712, 1949459, 1960564, 1971423, 1975927, 1978477, 1990554, 
             2002640, 2014529, 2026125, 2037267, 2041628, 2044699, 2054867, 
             2068616, 2080852, 2093924, 2107687, 2113738, 2117962, 2134020, 
             2149561, 2164066, 2179786, 2195130, 2202983, 2208242, 2225926, 
             2243868, 2261360, 2280033, 2298061, 2306326, 2311101, 2332043}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 49295, 49295, 49295, 49295, 49295, 49295, 
             49295, 49295, 49295, 49295, 49295, 49295, 49295, 49295, 49295, 
             49295, 49295, 49295, 49295, 49295, 49295, 49295, 49295, 157845, 
             162851, 162851, 162851, 175439, 176494, 194958, 199005, 202967, 
             204531, 211777, 220974, 230680, 240184, 246941, 252699, 255768, 
             255768, 255768, 282391, 290346, 299647, 299647, 302176, 319848, 
             328109, 337434, 337434, 344501, 349287, 351610, 363371, 369859, 
             378683, 383713, 387918, 390601, 391699, 397653, 414332, 426856, 
             437647, 453612, 457758, 457758, 473521, 487345, 502107, 514989, 
             524727, 530780, 530780, 547197, 556798, 570165, 579467, 592537, 
             597711, 598721, 609618, 625203, 644441, 655747, 666857, 668588, 
             671574, 680217, 690024, 699451, 704530, 717423, 722025, 724142, 
             733103, 733103, 751811, 763246, 768169, 768169, 770664, 780448, 
             792379, 803994, 803994, 818593, 821045, 821045, 823720, 831568, 
             839142, 847418, 855068, 856453, 856453, 865135, 873250, 880601, 
             888042, 895004, 898416, 898416, 898416, 908199, 908199, 908199, 
             908199, 908199, 908199, 908199, 908199, 908199, 908199, 908199, 
             908199, 908199, 908199, 908199, 908199, 989305, 995809, 998541, 
             999089, 999718, 1005729, 1012267, 1017876, 1023085, 1023085, 
             1023885, 1023885, 1023885, 1023885, 1023885, 1049348, 1051778, 
             1051778, 1051778, 1051778, 1068284, 1073039, 1075200, 1076073, 
             1076616, 1076616, 1082032, 1082032, 1084660, 1084660, 1084660, 
             1084660, 1084660, 1084660, 1084660, 1114557, 1124966, 1124966, 
             1126589, 1135106, 1135106, 1141481, 1157066, 1157066, 1165927, 
             1166823, 1166823, 1180726, 1185217, 1189305, 1189305, 1189305, 
             1195792, 1196775, 1205561, 1222776, 1222776, 1222776, 1222776, 
             1222776, 1250993, 1260722, 1270469, 1278967, 1278967, 1287986, 
             1287986, 1294620, 1294620, 1314843, 1324431, 1324431, 1336589, 
             1340014, 1350513, 1360789, 1370112, 1370112, 1373425, 1376887, 
             1378152, 1390344, 1390344, 1412310, 1415873, 1415873, 1420484, 
             1420484, 1420484, 1435128, 1463602, 1463602, 1463602, 1463602, 
             1496420, 1508890, 1524085, 1537739, 1537739, 1565915, 1571342, 
             1573945, 1589680, 1604022, 1604022, 1624672, 1638936, 1638936, 
             1646323, 1646323, 1646323, 1689766, 1689766, 1716064, 1720128, 
             1722223, 1736276, 1749210, 1749210, 1774964, 1786558, 1790461, 
             1792647, 1805549, 1805549, 1830423, 1841560, 1851030, 1852904, 
             1852904, 1865993, 1.877249*^6, 1887875, 1898463, 1898463, 
             1912917, 1914946, 1914946, 1914946, 1950306, 1961223, 1971748, 
             1975450, 1977901, 1977901, 2001058, 2013250, 2013250}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[TimeSeries, {{{
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 5363, 5558, 5773, 6045, 6163, 6220, 
             6423, 6712, 6980, 7275, 7532, 7615, 7667, 7994, 8276, 8560, 8560,
              9058, 9145, 9188, 9522, 9862, 10145, 10368, 10581, 10694, 10767,
              11132, 11521, 11846, 12232, 12494, 12588, 12634, 13068, 13352, 
             13759, 13966, 14263, 14338, 14398, 14763, 15030, 15351, 15351, 
             15996, 16078, 16134, 16475, 16788, 17118, 17442, 17702, 17848, 
             17907, 18324, 18640, 19038, 19377, 19647, 19732, 19788, 20171, 
             20532, 20894, 21206, 21517, 21606, 21676, 21676, 22389, 22710, 
             22997, 23236, 23317, 23365, 23702, 24109, 24448, 24735, 25016, 
             25114, 25151, 25151, 25869, 26324, 26324, 26780, 26852, 26899, 
             27315, 27591, 27905, 28155, 28392, 28467, 28505, 28912, 29194, 
             29415, 29694, 29944, 29978, 30014, 30375, 30673, 30905, 31091, 
             31313, 31353, 31377, 31430, 31821, 32104, 32338, 32567, 32606, 
             32642, 32963, 33253, 33472, 33678, 33927, 33952, 33984, 34266, 
             34266, 34677, 34877, 35063, 35108, 35125, 35391, 35622, 35804, 
             35804, 36136, 36178, 36220, 36490, 36669, 36884, 37068, 37068, 
             37256, 37279, 37314, 37541, 37690, 37870, 37992, 37992, 38035, 
             38246, 38371, 38482, 38608, 38726, 38726, 38753, 38885, 39007., 
             39119, 39255, 39311, 39331, 39346, 39364, 39549, 39549, 39717, 
             39717, 39717, 39717, 39717, 39907, 40202, 40202, 40549, 40564, 
             40576, 40749, 40927, 41074, 41179, 41256, 41267, 41276, 41455, 
             41601, 41773, 41902, 42048, 42076, 42095, 42290, 42456, 42637, 
             42788, 42969, 43015, 43040, 43282, 43461, 43661, 43802, 43971, 
             44018, 44050, 44282, 44282, 44681, 44878, 45029, 45029, 45136, 
             45395, 45576, 45758, 45795, 45808, 45863, 45902, 46195, 46477, 
             46717, 46775, 46808, 46845, 46888, 47222, 47511, 47768, 48029, 
             48298, 48351, 48379, 48662, 48985, 49289, 49600, 49885, 49945, 
             49987, 50318, 50652, 50938, 51192, 51423, 51502, 51556, 51838, 
             52170, 52481, 52722, 52954, 53034, 53090, 53455, 53704, 53997, 
             54324, 54324, 54614, 54614, 55087, 55419, 55742, 55971, 56191, 
             56266, 56304, 56702, 56960, 57240, 57499, 57743, 57799, 57842, 
             58199, 58528, 58873, 59129, 59428, 59493, 59546, 60014, 60381, 
             60694, 61064, 61417, 61463, 61584, 62101, 62570, 63010, 63531, 
             63965, 64123, 64223, 64902, 65519, 66178, 66798, 67414, 67558, 
             67602, 68623}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> Missing["NotAvailable"], "Country" -> 
        Entity["Country", "Argentina"], "GeoPosition" -> 
        GeoPosition[{-34., -64.}], "ConfirmedCases" -> 
        TemporalData[TimeSeries, {CompressedData["
1:eJzV0/lPFGccx/H37Mkuu8Deuyx7gbcoalERNCoqiKBEJVipR9W0VVrFu61n
tXhEabVCteBRT/BKvZpWg029jaVqPeJRD6wNCdTUu3hjv0Z/6L/QSV4zyTMz
z3y/n+eZ0MiCAeNUgCK2vTr9Dw7lP17VHiZMb1iE7Y2AiBWtRJLoKbLFCPGZ
WCP+EEaZ6PM36kVfmXS3qBOJavBrXhsr7olt2tesOhgi9gi1Hn58Y5gUtFbU
iMUGCDfKu+KYcIXDTHFR9JaCPzTLWAQcEYmRsEEEouAnkSXNfC8yrLBDuKSp
VeJtOzwTtxyw1AnLXDDfLe96oDoarnuho0++44dCCWFPEMZIED0aQVUTKG0O
g+MhPgFy2sL2t6S+DjCuE6R0htyucK476CWwJemSW6b00k9yHACaXMlrsIwN
gX3vSmbvwd/5ksN4GDRV5p0uayDhFsyDG4ukrmVSXxk8XAuhCnl+B4zaC5WH
JN9fIeGS9CCL4PsLOj+QTJ9L3TqF9haFATEK45soPEpQ6JqscLOXQv1AhV4j
FT4qUKiZoZC2QGFEscKadQotdisMP6CgPauw6rpC3B2FCw0KP9hUZLVQkZKq
YucgFbPyVVyfpuLxFypablKRWKnCd15F2i0VP78UdjUrmqoJpKoxDlMzarqa
1d+oKd6p5s9DarZXq0l4psbv0TC6g4Ze2RqyxmjYMkvD1KUaWm/TMPCohsk1
ctVqWR+nZVGSluI8LRdmaDGVayk8qSXjmZZBAR35KTqOD9dxeqGOQtlMs27q
SDbpaWinp3c/PekT9aSu09P4jJ7yl3pK48PYlRuGZVoYx2SjJZ8O4/zzMCa0
NhA91EDuHAO91hsoPmLgywcGqhsZmTbYSFyREfteI6t/N7I/LJwRXcIpnRJO
n+3hbKkJJ9Ziwpkgm/IdEyUlJs6dN9HWYiY+y8zWGWYaNppp94uZlg1mZidF
kD49grrKCHbcjeCuJ5LyrEg+LorEfD6Ss7YokvpH8Xh2FL6NUVw7E8VBg4XG
3Sw8nmQhZbOFrFMWfLUWVpqtmLpY2fy+Fc0yKxEHrEyqtpL20Mphu42iHjZM
42xUlNp4etxGRJ0N70sbd312xqbbOVFgJ3mFnUP77ZRfstNQa6fiiZ0NDgeJ
HR0syHPQ6lMHL5c66Fju4Ov9Dp5ecfDBE7nvctK0nZNP0pykDXRydLiT6rFO
ls91Urvayc59TvqcctLmqpP6O05Swl3UN3ZRkuri9lAXX012sanQxdyVLrIr
XVy++lqZzo3X4eZgMzf3erqZNNHN6LVutp50U3bNjfW+mwiDh/jmHozDPSwu
9rD8hIe9LzzUNYtmTLoYE023b6P557dormi86Nt7uTXIS+ZkLz1LvOw67EV5
4GVeIIb5GTG0yY/h4swYJqyMIfpIDFNuxzDZ5uNmJx+Xcnykj/bhm+vjeYWP
2iofG277GBzpZ0JzP5Ud/VzL9JOd72fRQj+eTX7CDvrZdclPWp0fpd7PRm2A
HF+AzJQAnrwA/ScEODU7wKOSAPG7A8SdDdD3foBmuiDzvEFqmgZxJQex5wQ5
PDFI1ZIga74LUnYwiOZkkGM3gvR/EWSYNyT/QAhbXojSiSGMc0L4S0Nk7Aux
73KI7k9DhKJjqUqMZXHPWIqGxpIxN5Z/AQ7jYKg=
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 3, 3, 27, 52, 52, 
             63, 72, 72, 72, 228, 240, 248, 256, 266, 279, 280, 325, 338, 358,
              365, 375, 440, 468, 515, 559, 596, 631, 666, 685, 709, 737, 840,
              872, 919, 976, 1030, 1107, 1140, 1162, 1192, 1256, 1292, 1320, 
             1354, 1442, 1472, 1524, 1601, 1659, 1728, 1757, 1837, 1862, 2266,
              2385, 2497, 2534, 2569, 2625, 2872, 2933, 3032, 3062, 3530, 
             3732, 3999, 4167, 4349, 4617, 4788, 4788, 5336, 5521, 5709, 5896,
              5993, 6088, 6180, 6909, 7305, 7568, 7991, 8332, 8743, 9083, 
             9564, 9891, 10174, 10512, 10721, 11851, 12206, 12728, 13153, 
             13576, 13816, 14788, 18416, 19143, 20134, 21138, 22028, 23040, 
             24186, 25224, 25930, 27597, 28531, 30095, 36502, 38313, 38984, 
             41408, 42694, 44173, 45467, 47298, 49120, 49780, 52607, 54105, 
             55913, 58598, 60531, 62815, 65447, 68022, 70518, 72575, 75083, 
             77855, 80596, 83780, 86499, 89026, 91302, 94129, 96948, 99852, 
             103297, 108242, 108242, 108242, 181389, 187283, 192434, 199005, 
             205697, 211702, 217850, 223531, 228725, 233651, 239806, 245781, 
             251400, 256789, 263202, 268801, 274458, 280165, 287220, 294007, 
             301195, 308376, 315530, 322461, 331621, 340381, 349132, 357388, 
             366590, 382490, 390098, 400121, 409771, 419513, 428953, 438883, 
             448263, 456347, 467286, 478077, 488231, 508563, 517228, 525486, 
             536589, 546924, 556489, 565935, 576715, 585857, 594645, 603140, 
             614515, 626114, 636672, 649017, 660272, 670725, 684844, 697141, 
             709464, 721380, 732582, 742235, 751146, 764859, 778501, 791174, 
             803965, 803965, 829647, 840520, 851854, 866695, 881113, 894819, 
             909586, 921344, 931147, 946134, 961101, 973939, 985316, 998016, 
             1009278, 1017647, 1030137, 1042237, 1053313, 1062911, 1073577, 
             1081897, 1081897, 1100180, 1110477, 1119366, 1129102, 1140196, 
             1148833, 1156474, 1167514, 1177819, 1187053, 1195492, 1203800, 
             1210634, 1217284, 1226662, 1235257, 1242877, 1249843, 1257227, 
             1263251, 1268358, 1274675, 1281955, 1288785, 1294692, 1300696, 
             1305587, 1311488, 1318187, 1324792, 1330160, 1335317, 1340120, 
             1344300, 1347914, 1352556, 1356755, 1362617, 1368346, 1374401, 
             1379726, 1384277, 1384277, 1384277, 1402227, 1407926, 1414680, 
             1420885, 1426676, 1426676, 1426676, 1447092, 1452960, 1458083, 
             1466616, 1474048, 1484794, 1494896, 1504330, 1511750, 1518715, 
             1527861, 1536423, 1549490, 1561963, 1573104, 1583465, 1594768, 
             1604373, 1613773, 1625755, 1636826, 1646668, 1656149, 1666527, 
             1674555, 1682563, 1693146, 1703459, 1712868, 1721650, 1729999, 
             1738768, 1745208, 1754705, 1763762, 1772059, 1778965, 1786178, 
             1792321, 1798120, 1806260, 1814160, 1820965, 1827118, 1833442, 
             1838291, 1842878, 1849451, 1855645, 1861433, 1866501, 1872213, 
             1877898, 1882568, 1886732, 1892834, 1899087, 1905021, 1911338, 
             1916936, 1921589, 1928377, 1934845, 1940317, 1.945816*^6, 
             1951540, 1956591, 1961640, 1968462, 1974866, 1981157, 1986903, 
             1993215, 1998594, 2003121, 2009877, 2016729, 2023664, 2030153, 
             2037686, 2043957}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 6, 8, 9, 
             13, 18, 19, 23, 27, 28, 36, 39, 43, 44, 48, 56, 63, 72, 82, 83, 
             90, 97, 102, 111, 115, 123, 129, 132, 136, 147, 152, 165, 176, 
             185, 192, 197, 207, 214, 218, 225, 237, 246, 260, 264, 273, 282, 
             293, 300, 305, 314, 319, 329, 353, 356, 363, 373, 382, 393, 403, 
             416, 433, 445, 452, 467, 484, 500, 508, 520, 528, 539, 556, 569, 
             583, 608, 632, 648, 664, 693, 717, 735, 765, 785, 815, 833, 854, 
             878, 913, 948, 979, 992, 1011, 1043, 1078, 1116, 1150, 1184, 
             1207, 1232, 1280, 1307, 1351, 1385, 1437, 1481, 1507, 1582, 1644,
              1694, 1720, 1774, 1810, 1845, 1903, 1968, 2050, 2112, 2178, 
             2220, 2260, 2373, 2490, 2588, 2702, 2807, 2893, 2939, 3059, 3179,
              3288, 3441, 3543, 3596, 3648, 3813, 3979, 4106, 4251, 4411, 
             4523, 4606, 4764, 5004, 5213, 5362, 5527, 5637, 5703, 5814, 6048,
              6330, 6517, 6730, 6848, 6985, 7366, 7563, 7839, 8050, 8271, 
             8353, 8457, 8660, 8919, 9118, 9361, 9623, 9739, 9859, 10129, 
             10405, 10658, 10907, 11148, 11263, 11352, 11667, 11852, 12116, 
             12460, 12656, 12799, 13053, 13482, 13952, 14376, 14766, 15208, 
             15543, 15749, 16113, 16519, 16937, 20288, 20599, 20795, 21018, 
             21468, 21827, 22226, 22710, 23225, 23581, 23868, 24186, 24572, 
             24921, 25342, 25723, 26107, 26267, 26716, 27100, 27519, 27957, 
             28338, 28613, 28896, 29301, 29730, 30071., 30442, 30792, 31002, 
             31140, 31623, 32052, 32520, 32766, 33136, 33348, 33560, 33907, 
             34183, 34531, 34782, 35045, 35307, 35436, 35727, 36106, 36347, 
             36532, 36790, 36902, 37002, 37122, 37432, 37714, 37941, 38216, 
             38322, 38473, 38730, 38928, 39156, 39305, 39512, 39632, 39770, 
             39888, 40009, 40222, 40431, 40606, 40668, 40766, 41041, 41204, 
             41365, 41534, 41672, 41763, 41813, 41997, 42254, 42314, 42314, 
             42422, 42501, 42650, 42868, 43018, 43163, 43245, 43319, 43375, 
             43482, 43634, 43785, 43976, 44122, 44273, 44417, 44495, 44654, 
             44848, 44983, 45125, 45227, 45295, 45407, 45832, 46066, 46216, 
             46355, 46575, 46737, 46827, 47034, 47253, 47435, 47601, 47775, 
             47931, 47974, 48249, 48426, 48539, 48700, 48985, 49110, 49171, 
             49398, 49566, 49674, 49874, 50029, 50188, 50236, 50327, 50432, 
             50616, 50857, 51000, 51122, 51198, 51359, 51510, 51650, 51795, 
             51887, 51946, 51965, 52077, 52192, 52453, 52644, 52784, 52870, 
             52880, 53121, 53252, 53359, 53493, 53578, 53646, 53670, 53836, 
             54036, 54231, 54386, 54476, 54517, 54545, 54671, 54823}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> Missing["NotAvailable"], "Country" -> 
        Entity["Country", "Poland"], "GeoPosition" -> GeoPosition[{52., 20.}],
         "ConfirmedCases" -> TemporalData[TimeSeries, {CompressedData["
1:eJzVkvlTlWUUxz/PZbns93K39y4CgaihiAMqIAKOWLjvKIrkgqOWIoymKasE
qKSCWi6VJkVZOJqOuKTmmPvaosWoBeK4MJSYUlju1Wmmf6J35vO+P7zP8z3n
+z0nNCt3TI4OUML2f1//k0f9h8d/+ApGwSaECNHCS8IsYZGwW7gnPBWmy8Vt
gl2M5wu/CkvdwOUOp4S5IjjTE1L1oPcSvOGJUCpF4vyhWwB4SrGkQGgzwTgL
nLHCAA3q7WBySh8uCOsAW4KkbjB8+QJ0DoOB4ZDXCUo6w8EuYIiAVV3BOxKm
dYfiKDjUA6aKgeEx4qMn9OsFRb1hfyxMiYd1faRegvSQCB2ToDAZTvcDRwr0
GgDfifGpqTB6oGgOEk+DJYuh4m847BoBK0fBidEwYiwsSYOE8XAuHSImwusZ
YM6EO8KMyTB0CuROhavTIGW6ZDADjkmo9tlQOweOZ8u9HPgoFybOg4vzIXMB
tC+UXCX4LnmQlg/lBZJBIdwqEs9LoHeJeHlT6pVCXZl8y2H2UtFYBleWw5C3
xP8KWL4SclZB30pIrBJPqyF9jfhbC2vfBrd1ELUe+myA/huh6l24/570ukn6
2wxffSA+q+H8h5BdA7GfSMafyvlaWLFN5rBd+BxadsHiOvDZJ3pfyA4cBOth
WH8E5hyTzE/C9TMw8rzM52u48S3suCS91oN2FZwNon9N6l0Hy03xfxt+b5FZ
t8JzWbyU32Sn2mUef0rej2Ufn8HZv+W8ThHroYjUK8Z4K7b6KrwDFIeNinaT
otaiuGxVzNQUvg6Fh0uRHqSoC5F/oYrQjoriTnKmi8LVTWGMUjyJVlT0ViyI
V/TtK3r9FHkDFDsGKxpHKsLGKRIzFLOnKPJnKCLmKoLeUGQuUdxZpjhapSjc
qIj7WHF/j2L+aUXnBsXiVkXNM0WOUcfdCB2rB+uonaUjuVLHhp06Ll7Q4WrT
MVZzY0uqG00Fbjh3u/GoyY3Hnu5sTXUnYo07zU3uZPX0oLXCg78ueHDVy5PC
NE/a9nryMFjPqQo9tX/oyRvvxZDtXhwI8CZpnjdXz3lzoYsPO1f64HfDh8wY
XyKLfLly3pfiF/1ILvHjhyY/3gn3p/sUf3yu++PpCiA+M4CL1QE4GgJo1xuY
FGzgQX8D7YsM6OoM7G820N9mxJFgZPJQI/VzjGRsMmK8ZKS/eyCR0YEkpgWS
OSuQ2NJArtUFUnUjkDV+JorjTfhlmOiUbSKpwkTZARNHWk3EGcy8HGZmYLSZ
75PMvD/JzLJKM8HHzey8a8bPy0JNsIUTPSzkDrfwtNzCmL0WKi9bWIqVmHAr
0XFWBgyz8kuulZ/WWWnbYyX7opUjLVaOP7DSqLfxNMzGpGQbJRNsVM+zsbDM
RkuljZvVNl49ZGPiZRsZ92ykeGhs0zTmhWqkx2j8PExj4EyNu0UaCes1dn2m
EbVb45ujGs8bNLIeagwz2vHoaqch2c65QXbUK3aeFdvJqbFTd9LO/WY7ucpB
jdFBSoSDfRMchFc46LXPwcLbDu74OtkcLCQ5uZfvpGy/k4wHTqZFucia7qKg
wEVmjYsfm12Miu+Ad2kHRtV34KwWRHpKEGvzg8hpDOJRajDlO4JpNIcQ+1oI
ETUhVN4K4R+v+1+k
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 13, 13, 1, 1, 1, 1, 13, 1, 7, 
             7, 7, 7, 7, 7, 7, 47, 56, 56, 116, 134, 162, 191, 222, 284, 318, 
             375, 439, 487, 618, 668, 774, 866, 981, 1040, 1133, 1297, 1513, 
             1740, 1944, 2126, 2265, 2466, 2655, 3025, 3236, 3491, 3762, 3945,
              4095, 4280, 4655, 4862, 5184, 5437, 5698, 5816, 6131, 6410, 
             6696, 6918, 7175, 7451, 7628, 7903, 8183, 8452, 8731, 8977, 9194,
              9276, 10020, 10330, 10560, 10692, 11016, 11271, 11449, 11726, 
             12014, 12227, 12410, 12641, 12855, 12998, 13196, 13411, 13696, 
             13805, 14104, 14226, 14383, 14654, 14921, 15317, 15698, 16181, 
             16683, 17076, 17573, 18134, 18654, 19218, 19972, 20548, 20897, 
             21281, 21791, 22209, 22651, 23127, 23746, 23966, 24238, 24878, 
             25477, 26048, 26635, 27148, 27515, 27756, 28492, 28928, 29505, 
             29924, 30292, 30539, 30771, 31139, 31541, 31997, 32419, 32753, 
             32856, 33043, 33190, 33643, 33987, 34374, 34709, 34881, 35056, 
             35321, 35642, 36041, 36403, 36691, 36877, 37150, 37611, 37961, 
             38362, 38853, 39130, 39359, 39643, 40099, 40481, 41029, 41661, 
             42183, 42448, 42784, 43399, 44097, 44785, 45536, 46192, 46638, 
             47030, 47865, 48593, 49820, 52346, 54256, 55113, 55910, 57135, 
             58069, 58848, 59725, 60659, 61097, 61548, 62110, 62725, 63312, 
             63861, 64302, 64604, 64972, 65561, 66158, 66740, 67326, 67904, 
             68420, 68955, 69695, 70401, 71353, 72209, 73003, 73552, 74158, 
             75346, 76490, 77875, 78982, 80302, 81201, 82004, 83847, 85588, 
             87773, 90162, 92651, 94014, 95956, 98884, 102204, 105092, 109344,
              112619, 115302, 119237, 123504, 129267, 134724, 140280, 146595, 
             154413, 159986, 168960, 177681, 188675, 200510, 209363, 219371, 
             230661, 242875, 254349, 267580, 282215, 294783, 306022, 324282, 
             342883, 361886, 381800, 407075, 423971, 438868, 454717, 469527, 
             494869, 516636, 538273, 559429, 577514, 597589, 622980, 646560, 
             666413, 687910, 706720, 722446, 738845, 768241, 792119, 815356, 
             840541, 858895, 869155, 879748, 892650, 903349, 915576, 927723, 
             938269, 946017, 954272, 965178, 975876, 984683, 992381, 999610, 
             1005376, 1014005, 1025889, 1036138, 1046281, 1055436, 1063093, 
             1069554, 1078892, 1087744, 1095616, 1104599, 1113738, 1123318, 
             1130460, 1138126, 1147123, 1155823, 1164650, 1173087, 1181326, 
             1187719, 1197034, 1207359, 1215732, 1215732, 1222782, 1230446, 
             1237736, 1243575, 1246267, 1250892, 1257352, 1264574, 1270467, 
             1276636, 1281396, 1283698, 1288163, 1294687, 1301571, 1307161, 
             1312856, 1317474, 1319635, 1324101, 1330127, 1336467, 1342031, 
             1347670, 1352443, 1354598, 1358666, 1365216, 1372326, 1378414, 
             1384373, 1389516, 1391981, 1397342, 1405552, 1414461, 1422829, 
             1430861, 1438032, 1441479, 1448619, 1459564, 1471608, 
             1.482568*^6, 1494083, 1503353, 1507905, 1516540, 1530484, 
             1546151, 1560227, 1574455, 1587164, 1593165, 1603832, 1620272, 
             1640050, 1656827, 1676008, 1693875}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 7, 8, 10, 14, 
             16, 16, 18, 22, 31, 33, 43, 57, 71, 79, 94, 107, 129, 159, 174, 
             181, 208, 232, 245, 263, 286, 314, 332, 347, 360, 380, 401, 426, 
             454, 494, 524, 535, 562, 596, 624, 644, 651, 664, 678, 698, 716, 
             733, 755, 776, 785, 800, 811, 839, 861, 883, 907, 915, 925, 936, 
             948, 962, 972, 982, 993, 996, 1007, 1024, 1028, 1038, 1051, 1061,
              1064, 1074, 1092, 1115, 1117, 1137, 1153, 1157, 1166, 1183, 
             1206, 1215, 1222, 1237, 1247, 1256, 1272, 1286, 1316, 1334, 1346,
              1356, 1359, 1375, 1396, 1412, 1429, 1435, 1438, 1444, 1463, 
             1477, 1492, 1507, 1512, 1517, 1521, 1528, 1542, 1551, 1562, 1568,
              1571, 1576, 1588, 1594, 1605, 1612, 1618, 1624, 1627, 1636, 
             1642, 1651, 1655, 1664, 1671, 1676, 1682, 1694, 1709, 1716, 1721,
              1731, 1732, 1738, 1756, 1774, 1787, 1800, 1807, 1809, 1821, 
             1830, 1844, 1858, 1869, 1877, 1885, 1896, 1913, 1925, 1938, 1951,
              1955, 1960, 1977, 1994, 2010, 2018, 2032, 2033, 2039, 2058, 
             2078, 2092, 2100, 2113, 2120, 2124, 2136, 2147, 2159, 2169, 2182,
              2188, 2203, 2227, 2237, 2253, 2270, 2282, 2293, 2298, 2316, 
             2344, 2369, 2392, 2424, 2432, 2447, 2483, 2513, 2543, 2570, 2604,
              2630, 2659, 2717, 2792, 2867, 2919, 2972, 3004, 3039, 3101, 
             3217, 3308, 3440, 3524, 3573, 3614, 3721, 3851, 4019, 4172, 4351,
              4438, 4483, 4615, 4849., 5149, 5351, 5631, 5783, 5875, 6102, 
             6475, 6842, 7287, 7636, 7872, 8045, 8375, 8805, 9080, 9499, 
             10045, 10348, 10491, 10848, 11451, 12088, 12714, 13288, 13618, 
             13774, 14314, 14988, 15568, 16147, 16746, 17029, 17150, 17599, 
             18208, 18828, 19359, 19861, 20089, 20181, 20592, 21160, 21630, 
             22174, 22676, 22864, 22960, 23309, 23914, 24345, 24771, 25254, 
             25397, 25474, 25783, 26255, 26752, 26992, 27061, 27118, 27147, 
             27454, 28019, 28554, 28956, 29058, 29119, 29161, 29502, 30055, 
             30241, 30574, 31011, 31189, 31264, 31593, 32074, 32456, 32844, 
             33213, 33355, 33407, 33698, 34141, 34561, 34908, 35253, 35363, 
             35401, 35665, 36054, 36443, 36780, 37082, 37180, 37222, 37476, 
             37897, 38344, 38712, 38994, 39087, 39132, 39360, 39721, 40177, 
             40424, 40709, 40807, 40832, 41028, 41308, 41582, 41823, 42077, 
             42171, 42188, 42436, 42808, 43094, 43353, 43656, 43769, 43793, 
             44008, 44360, 44649, 44912, 45159, 45285, 45317, 45599, 45997, 
             46373, 46724, 47068, 47178, 47206, 47578, 48032, 48388, 48807, 
             49159, 49300, 49365, 49761}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]], 
       Association[
       "AdministrativeDivision" -> 
        Entity["AdministrativeDivision", {"Florida", "UnitedStates"}], 
        "Country" -> Entity["Country", "UnitedStates"], "GeoPosition" -> 
        GeoPosition[{28.66481239914666, -82.52332310182058}], 
        "ConfirmedCases" -> TemporalData[TimeSeries, {CompressedData["
1:eJzNk4lTVWUYxn/nwuWe5d7LcoW7X0TDJUJxG1FUptDS1EFEM3dFjdxAcdRM
SuhmgNCMyXVDRdFwRMzdUEvTXJpQFEUaS8k9TQwVtDLT+tT+iM7M75zzPfO9
z/ucd84XkZI+OE0HSILyZ7f/+fUsou4//P7DIFAFJkGgwCVoKegoGCCYJVgl
OC/oLgxKBJ2EQaGglzA44Q8f62FJAHRRYIgGu8ywLAjGh8JQB7zihBhh6moD
9mhRFwPGznAmFsb1gDvxML+30PtCxUBwDobMIXB3GLQfKbRx4JsAle8I78lQ
Nw2WpkG1CNdnLsx9T/SYD4s+gEFZUJYNRV7YlAM5i6ChACIWQ/wSyPDBluUQ
vhJeXS18iyFsHRzZAOtLRY9NMGULaNug2U7xvkdkrID0fWIuByHqMJw+InIc
hxaVwuek6FUFkdVw5RxkiUFNuABP6yD1MhTcAGu9+P570OohfPsIcp+I7JJE
lEGiyiQRFyoxKFwiprWEuZ3Eb7ES4QkSGxMlfGMkJqVJaJkS83IkEn0SP5RJ
pBwQNZclDut1WFrrKI3TkZGsI3S6jiU+Hev36Zj4i45tJj/SW/nRIsGP1lP8
MH/qR8U+P9pf9aPJ7U9Coj/Rs/xpLPJnwRl/+j31p6SVnrHD9FQu0LP5cz3X
KvXcadST2zKA9skBbJsbwNSiAOYdDGDstQASVAMZ0QZcyQYuphmYlm1g5zID
NeUG9nxv4KubBu7LMq9HyGR3kOnbV+ZhqkxSlszQFTKRO2RufSMzplJm1I8y
6b/KdH8s84lJYbRH4XFbhaqOCr16Kpztp7D8LYUPJwl9pkJIpkK6V/x4JQop
mxWG7lWoOargrFEIr1MYeF1hWr3CtSaF/CfCR1NJsKnsj1D5qI3K1s4qV3qq
rHhTxTVMJXiSyu00lQWzVSIXiL15KjGFKonFKt3LVHzbVebsUok9pHLuOxXb
WZXMiypjb6qUN6h0fKDy5G8Vi0HjiUVjePgLnF00bHEaB/qIA5Kk4RqjsXSq
xvj5GgMWavyRr9GnSKN0vcbIvRpHj2vEndcouCJqGjRy/tEoCjRCcyPnuxhp
6mXkQZKR8IlGeswx4s0R67VGZu42UnvMyLzLRqruGjklTvZqqwlvtIkVfU28
PcLEmWwTss9E1A4TzatNrGky4bCaaepqZmuSmclTzJzLN1Ow5QUD7pk5Iwfi
iwxkeXwgrVICickLZOOuQFIviLV/EI7IILolBDElJYirOUG03R3ExStBRGvB
RLULpn1iMI2zgjGUBDPhnNAMIVR1DqF4aAilWSGkloVwqTaE7orlOSf7Wyh/
18KOXAsXKyxoDRY6dWj2nKQtzfi6thm7pVAe9wwlwxvKT9WhvOQOY97wMJbk
hVH5ZRh/3QtjXWsrsaOttFxr5f1TVk4/shJstzE53kbTdBs91tmoqbVxW2+n
bZSdbgPt7Mqwk19o5+VDdtR6O3siHUT0duAd4WCT10F9sQP1gNBuOxhrcBIf
4WRTVyfWZCe5M5zUfuZk2TYn9086ib7qFPNzckN2URjpYnE3F+XJLpwzXFz3
iqfPhX6zi7pjLqouubj7u4vXjG5uRLjJa+PG19tNyCg3f85yk5jvpmSNmw1f
uCnc76buhJuzP7tZ1ejmUYCH2U4Pt9p6aOzsoewND+uGe1g43cPKbA+Llnpw
l3rov92DdMzDvzX5eJM=
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 
             Missing["NotAvailable"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68 "", 68 "", 68 "", 68 
             "", 68 "", 68 "", 68 "", 68 "", 68 "", 68 "", 68 "", 68 "", 68 
             "", 68 "", 68 "", 68 "", 68 ""}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           DateFunction -> Automatic, 
            ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 5, 6, 7, 9, 10, 13, 13, 18, 18, 
             23, 29, 35, 54, 56, 63, 85, 87, 164, 170, 195, 221, 236, 283, 
             309, 354, 390, 438, 461, 499, 571, 596, 668, 725, 748, 774, 822, 
             867, 893, 987, 1046, 1055, 1075, 1088, 1171, 1218, 1268, 1314, 
             1364, 1379, 1399, 1471, 1539, 1600, 1669, 1715, 1721, 1735, 1779,
              1827, 1875, 1917, 1964, 1973, 1997, 2052, 2096, 2144, 2190, 
             2233, 2237, 2252, 2259, 2319, 2364, 2413, 2447, 2451, 2460, 2530,
              2566, 2607, 2660, 2688, 2700, 2712, 2765, 2801, 2848, 2877, 
             2925, 2931, 2938, 2993, 3018, 3061, 3104, 3144, 3161, 3173, 3238,
              3281, 3327, 3366, 3390, 3419, 3447, 3505, 3550, 3617, 3684, 
             3702, 3731, 3778, 3841, 3889, 4009, 4102, 4197, 4242, 4277, 4409,
              4521, 4677, 4805, 4895, 4982, 5072, 5206, 5345, 5518, 5653, 
             5777, 5854, 5931, 6117, 6333, 6586, 6843, 7022, 7084, 7157, 7402,
              7627, 7747, 7927, 8109, 8186, 8277, 8553, 8765, 8913, 9141, 
             9345, 9452, 9539, 9758, 9932, 10049, 10168, 10274, 10325, 10397, 
             10580, 10733, 10868, 10957, 11105, 11119, 11187, 11374, 11501, 
             11650, 11750, 11811, 11849, 11871, 11915, 12110, 12326, 12502, 
             12600, 12608, 12642, 12787, 12939, 13086, 13225, 13287, 13296, 
             13317, 13416, 13618, 13795, 13915, 14022, 14032, 14037, 14143, 
             14317, 14444, 14554, 14628, 14671, 14712, 14767, 14904, 15068, 
             15186, 15186, 15364, 15412, 15531, 15595, 15736, 15830, 15917, 
             15967, 16021, 16105, 16210, 16267, 16340, 16417, 16429, 16449, 
             16505, 16571., 16648, 16720, 16761, 16789, 16834, 16890, 16922, 
             16961, 17014, 17100, 17121, 17179, 17248, 17300, 17372, 17445, 
             17489, 17518, 17559, 17644, 17731, 17810, 17889, 17930, 17991, 
             18085, 18157, 18254, 18254, 18363, 18442, 18500, 18597, 18679, 
             18776, 18874, 18994, 19084, 19177, 19282, 19378, 19462, 19591, 
             19714, 19785, 19866, 20003, 20082, 20204, 20305, 20401, 20473, 
             20568, 20680, 20754, 20874, 20995, 20995, 21135, 21212, 21308, 
             21409, 21546, 21673, 21673, 21890, 21987, 22090, 22188, 22317, 
             22481, 22666, 22804, 22912, 23071, 23227, 23396, 23613, 23799, 
             24004, 24137, 24274, 24436, 24578, 24739, 25011, 25164, 25293, 
             25446, 25673, 25833, 26035, 26254, 26360, 26479, 26685, 26822, 
             27019, 27247, 27457, 27599, 27696, 27815, 28048, 28208, 28382, 
             28565, 28683, 28779, 28934, 29154, 29311, 29474, 29692, 29813, 
             29906, 30065, 30213, 30340, 30478, 30624, 30734, 30852, 30999, 
             31135, 31267, 31387, 31522, 31620, 31683, 31764, 31889, 31948, 
             32040, 32145, 32225, 32255, 32348, 32449, 32504, 32598, 32651, 
             32713, 32742, 32779, 32820}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
        1, {All, "GeoPosition"} -> 1, {All, "ConfirmedCases"} -> 
        1, {All, "RecoveredCases"} -> 1, {All, "Deaths"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "AdministrativeDivision" -> TypeSystem`PackageScope`AtomShape[150],
             "Country" -> TypeSystem`PackageScope`AtomShape[90], 
            "GeoPosition" -> TypeSystem`PackageScope`AtomShape[106], 
            "ConfirmedCases" -> TypeSystem`PackageScope`AtomShape[160], 
            "RecoveredCases" -> TypeSystem`PackageScope`AtomShape[160], 
            "Deaths" -> TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 6, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "AdministrativeDivision", "Country", "GeoPosition", "ConfirmedCases", 
         "RecoveredCases", "Deaths"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 10], "Meta" -> 
     Association["ID" -> 231022224036064], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
        1, {All, "GeoPosition"} -> 1, {All, "ConfirmedCases"} -> 
        1, {All, "RecoveredCases"} -> 1, {All, "Deaths"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "AdministrativeDivision" -> TypeSystem`PackageScope`AtomShape[150],
             "Country" -> TypeSystem`PackageScope`AtomShape[90], 
            "GeoPosition" -> TypeSystem`PackageScope`AtomShape[106], 
            "ConfirmedCases" -> TypeSystem`PackageScope`AtomShape[160], 
            "RecoveredCases" -> TypeSystem`PackageScope`AtomShape[160], 
            "Deaths" -> TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 6, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "AdministrativeDivision", "Country", "GeoPosition", "ConfirmedCases", 
         "RecoveredCases", "Deaths"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 10], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 
     6, "DataRowCount" -> 10, "DataColumnCount" -> 6, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AdministrativeDivision", 
                  Style[
                  "AdministrativeDivision", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "AdministrativeDivision"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "AdministrativeDivision"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Country"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GeoPosition", 
                  Style[
                  "GeoPosition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "GeoPosition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GeoPosition"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfirmedCases", 
                  Style[
                  "ConfirmedCases", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "ConfirmedCases"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfirmedCases"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RecoveredCases", 
                  Style[
                  "RecoveredCases", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "RecoveredCases"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RecoveredCases"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deaths", 
                  Style[
                  "Deaths", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Deaths"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Deaths"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"France\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"46.23\[Degree]N 2.214\[Degree]E\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"England, United Kingdom\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"United Kingdom\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"52.58\[Degree]N 1.492\[Degree]W\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"California, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"37.28\[Degree]N 119.6\[Degree]W\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Turkey\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"39.0\[Degree]N 35.0\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"31.48\[Degree]N 99.37\[Degree]W\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Maharashtra, India\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"India\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"19.45\[Degree]N 76.12\[Degree]E\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"S\[ATilde]o Paulo, Brazil\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Brazil\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"22.26\[Degree]S 48.74\[Degree]W\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Argentina\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"34.0\[Degree]S 64.0\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Poland\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"52.0\[Degree]N 20.0\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Florida, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"28.66\[Degree]N 82.52\[Degree]W\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1249., {359.41754150390625`, 366.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1249., {359.41754150390625`, 366.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.825670061907927*^9, 3.825670095438451*^9}, 
   3.825671122014564*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fa764e91-a408-4d89-bda1-722b1911ce88"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analiza primerov v Sloveniji", "Section",
 CellChangeTimes->{{3.8250682552920322`*^9, 
  3.825068258384305*^9}},ExpressionUUID->"517d7274-63a8-41bf-be00-\
1104589dc0f4"],

Cell[TextData[StyleBox["(Osnovni prikaz podatkov, par grafov)",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.825068333722145*^9, 
  3.8250683442350492`*^9}},ExpressionUUID->"082cc481-dc95-4367-bac7-\
04a233cd70ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"podatki", ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<Country\>\"", "]"}], " ", "\[Equal]", " ", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "Slovenia", Typeset`boxes$$ = 
       TemplateBox[{"\"Slovenia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""}, 
        "Entity"], Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
       Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        1.101433`6.493503077719687, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{167., {8., 18.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825671167006868*^9, 3.825671209876992*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"4c0aab4e-db50-4bdd-a997-95ef4206ca96"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "AdministrativeDivision" -> Missing["NotAvailable"], "Country" -> 
        Entity["Country", "Slovenia"], "GeoPosition" -> 
        GeoPosition[{46.11667, 14.81667}], "ConfirmedCases" -> 
        TemporalData[TimeSeries, {CompressedData["
1:eJzV1PtPl2UYx/HPfT2IJ+QYiiIkqAgrWtgwdWo0KGNmViYtTUtjJkXoGB46
gJpJntLldBnNAwqUaaYJmAoeMLKMCI+wmEXlseap6GhKb9f3h37wH+i7vb7b
cz/36bmu+7pjJk19NMckOWy68fc/+t3Yd3ufYJ9bMQhP4A1UoBnXEOb+FY0x
mI012IUWBDNhf8zCZnyNVsR6UjrmogyHcRrX0NtPSkUmFqAEFajCJ2hBKyLa
SX3RH3cjBenIwHhkIw8vYQ4WYSWKsPY/SvEeNuJ9bME2lKMCO/Axdvrs8tmN
qpuo9tmL/TdxALU+B1GHL33q0eBzBMfQiCY041ucxXlcwmVcwXW085c6oyv6
IBFJSMFITEIulqEE5fgCP+AyHEnvjSQMQioykIVXsAJFKMZOnMAV+HWQQhGL
fkhGKsYhGy/jNczHUqzDh9iJg/gcX6EFbejZUboXEzEN+ViFapxDYCf2h3HI
QgHW4wAuILQz34BUZGMDmtA+gLOC8ZiBdbiMoV3IPcICaUcpfkduEOcVz1AE
x5EWwnvUIyOUHGFZmDT8FukMAsKlqRjclfygsRvnJIK4d5dCerAXNERKo6Ok
fdHSkF70ieFsxkpBfch3HGcqgRq4nbY7WeMu5kuWFg6UcoZJF9Ok50dIPUZT
MxRj8ATJy+Ts55CHmey5gOdCYreY/hSq/3K+722pcB3xKWP8ZuK1ldh9REwr
pdv2SpWfks866bmj1H6j9EcTfb6RHjtD20Xqp5V8XEWb9DM3Wgd/p12BTsXh
Tt9HOoXEOk2Pc4qLdxqV6FQ/wKl2qFN1mlO/EU6Jo5yCH3Ga87hT81NOoc86
JeQ4/ZnnNHiW0/kXwaWRtMDpnaVO81Y4JRc5bVrtNGCtU1SpU84HTisrnN6q
Yv09TjP2Oc2ucRp0yKnqqFP8Sac7TjntOO205pzT+p+ccn91WmKmN7uYKsJN
XaNMIb1M+2NMYQmme5JMKQNNDwwzPZhmmn+/aetw08SHeD/GVDPWNOVp0wuT
TYVTTNuzTGnTTAUzTRvyTdteNbW9bkpfZCpfbIpbbpq+irlWmzoXs24J48qY
811Tz42M32Jq3W46vsNUt9sUXs18e0zx+02Ta03HPjNl1pl6NZj2HjZVHjEN
OWHK58LMPWny+860+5Rp7hlT3lnTwz+aOl0ytfuFdX8zBf5lWnLVNOFv031t
puvmaay/pyc7etoS4Kky0NO8IE/dwzyN7OYpItJTTbSnWi7iQ308XejLc4Kn
fwBgFB5D
           "], {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "RecoveredCases" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 10, 10,
              10, 10, 10, 10, 10, 10, 70, 70, 79, 79, 102, 102, 120, 128, 137,
              148, 150, 152, 152, 165, 174, 174, 190, 192, 193, 197, 205, 211,
              211, 219, 221, 221, 223, 230, 233, 233, 239, 241, 241, 244, 246,
              247, 252, 255, 256, 256, 259, 260, 267, 270, 272, 273, 1335, 
             1338, 1340, 1340, 1340, 1340, 1340, 1346, 1346, 1354, 1356, 1357,
              1357, 1358, 1358, 1358, 1358, 1359, 1359, 1359, 1359, 1359, 
             1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
              1359, 1376, 1376, 1376, 1376, 1376, 1376, 1376, 1384, 1384, 
             1384, 1384, 1384, 1384, 1384, 1384, 1384, 1423, 1429, 1429, 1429,
              1429, 1469, 1473, 1488, 1501, 1522, 1522, 1568, 1568, 1603, 
             1625, 1648, 1661, 1678, 1678, 1678, 1733, 1742, 1761, 1780, 1797,
              1821, 1826, 1831, 1854, 1884, 1909, 1927, 1927, 1927, 1960, 
             1960, 1960, 1960, 2027, 2042, 2051, 2052, 2052, 2079, 2079, 2079,
              2079, 2079, 2122, 2139, 2170, 2199, 2236, 2268, 2283, 2296, 
             2323, 2359, 2402, 2440, 2483, 2483, 2530, 2533, 2587, 2620, 2662,
              2699, 2730, 2730, 2789, 2844, 2897, 2939, 2981, 3023, 3048, 
             3048, 3168, 3245, 3353, 3457, 3555, 3600, 3682, 3804, 3906, 4041,
              4041, 4265, 4265, 4399, 4535, 4655, 4842, 5024, 5182, 5219, 
             5314, 5515, 5689, 5924, 6148, 6313, 6385, 6572, 6922, 7299, 7659,
              8018, 8424, 8582, 8968, 9667, 10401, 11208, 12091, 12785, 13297,
              14074, 15550, 17190, 18825, 20767, 22443, 23533, 25007, 27577, 
             30027, 31792, 33548, 34864, 35387, 36519, 38507, 40153, 41691, 
             43272, 44137, 44558, 45587, 47770, 49654, 51121, 52814, 53687, 
             54138, 55476, 57447, 59469, 60957, 62600, 63580, 63999, 65240, 
             67437, 69170, 70733, 72290, 73377, 73760, 75017, 77453, 79193, 
             80935, 82541, 83536, 83977, 87960, 90100, 91952, 91952, 92986, 
             93787, 94191, 95688, 97766, 99382, 100868, 102252, 103107, 
             103467, 104988, 107103, 109148, 110925, 111269, 111864, 112371, 
             114330, 116745, 119149, 120894, 121288, 122008, 122745, 125315, 
             128709, 131377, 133428, 135262, 135993, 136402, 138272, 140353, 
             142134, 143610, 145156, 145722, 146003, 147687, 149385, 150860, 
             152290, 153791, 154321, 154607, 156266, 158128, 159657, 160953, 
             162248, 162824, 163162, 164676, 166220, 167477, 168432, 169406, 
             169896, 170198, 170527, 171905, 171905, 171905, 175210, 175210, 
             175210, 175210, 177641, 178510, 179414, 180366, 180366., 181023, 
             181915, 183002, 183848, 184753, 185698, 186147, 186386, 187112, 
             188315, 189333, 190206, 191122, 191500, 191706, 192439}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2], "Deaths" -> 
        TemporalData[
         TimeSeries, {{{
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 
             9, 9, 11, 11, 15, 15, 17, 20, 22, 28, 30, 36, 40, 43, 45, 50, 53,
              55, 56, 61, 61, 66, 70, 74, 77, 77, 79, 79, 80, 81, 82, 83, 86, 
             89, 91, 92, 94, 96, 97, 98, 99, 99, 100, 101, 102, 102, 102, 103,
              103, 103, 103, 104, 104, 104, 105, 106, 106, 106, 107, 107, 108,
              108, 108, 108, 108, 108, 109, 109, 109, 109, 109, 109, 109, 109,
              109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
              109, 109, 109, 109, 109, 109, 111, 111, 111, 111, 111, 111, 111,
              111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
              111, 112, 113, 114, 115, 115, 115, 116, 116, 116, 117, 117, 117,
              119, 119, 120, 122, 123, 124, 125, 125, 126, 127, 128, 129, 129,
              129, 129, 129, 129, 129, 129, 129, 129, 130, 131, 131, 133, 133,
              133, 133, 133, 133, 133, 133, 133, 134, 134, 134, 135, 135, 135,
              135, 135, 135, 135, 135, 135, 135, 135, 135, 136, 140, 141, 142,
              142, 142, 143, 145, 145, 146, 147, 149, 149, 150, 152, 154, 155,
              155, 156, 159, 159, 160, 165, 167, 167, 169, 173, 175, 176, 180,
              184, 188, 190, 192, 200, 211, 214, 235, 240, 251, 264, 278., 
             292, 315, 338, 363, 388, 412, 441, 471, 497, 531, 554, 578, 605, 
             645, 686, 724, 765, 797, 831, 876, 919, 964, 995, 1026, 1052, 
             1097, 1156, 1199, 1245, 1293, 1336, 1384, 1435, 1490, 1547, 1592,
              1653, 1700, 1744, 1796, 1862, 1900, 1949, 1998, 2041, 2063, 
             2107, 2149, 2190, 2233, 2274, 2314, 2353, 2379, 2418, 2454, 2479,
              2507, 2532, 2565, 2595, 2631, 2665, 2697, 2728, 2774, 2803, 
             2838, 2868, 2899, 2922, 2947, 2973, 2998, 3022, 3053, 3070, 3093,
              3121, 3140, 3180, 3206, 3231, 3257, 3284, 3309, 3329, 3360, 
             3379, 3406, 3425, 3448, 3468, 3490, 3503, 3522, 3541, 3564, 3580,
              3595, 3612, 3623, 3635, 3654, 3667, 3677, 3692, 3705, 3717, 
             3728, 3733, 3745, 3755, 3762, 3769, 3776, 3784, 3792, 3802, 3809,
              3823, 3836, 3836, 3854, 3863, 3874, 3878, 3882, 3888, 3891, 
             3897, 3904, 3908, 3918, 3926, 3929, 3934, 3938, 3941, 3948, 3951,
              3961, 3967, 3972, 3976, 3985}}, {
            
            TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
             2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.2]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
        1, {All, "GeoPosition"} -> 1, {All, "ConfirmedCases"} -> 
        1, {All, "RecoveredCases"} -> 1, {All, "Deaths"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "AdministrativeDivision" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Country" -> 
            TypeSystem`PackageScope`AtomShape[90], "GeoPosition" -> 
            TypeSystem`PackageScope`AtomShape[106], "ConfirmedCases" -> 
            TypeSystem`PackageScope`AtomShape[160], "RecoveredCases" -> 
            TypeSystem`PackageScope`AtomShape[160], "Deaths" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 6, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "AdministrativeDivision", "Country", "GeoPosition", "ConfirmedCases", 
         "RecoveredCases", "Deaths"}, {TypeSystem`UnknownType, 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Meta" -> 
     Association["ID" -> 231026519003454], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
        1, {All, "GeoPosition"} -> 1, {All, "ConfirmedCases"} -> 
        1, {All, "RecoveredCases"} -> 1, {All, "Deaths"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "AdministrativeDivision" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Country" -> 
            TypeSystem`PackageScope`AtomShape[90], "GeoPosition" -> 
            TypeSystem`PackageScope`AtomShape[106], "ConfirmedCases" -> 
            TypeSystem`PackageScope`AtomShape[160], "RecoveredCases" -> 
            TypeSystem`PackageScope`AtomShape[160], "Deaths" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 6, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "AdministrativeDivision", "Country", "GeoPosition", "ConfirmedCases", 
         "RecoveredCases", "Deaths"}, {TypeSystem`UnknownType, 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     6, "DataRowCount" -> 1, "DataColumnCount" -> 6, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AdministrativeDivision", 
                  Style[
                  "AdministrativeDivision", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "AdministrativeDivision"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "AdministrativeDivision"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Country"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GeoPosition", 
                  Style[
                  "GeoPosition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "GeoPosition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GeoPosition"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfirmedCases", 
                  Style[
                  "ConfirmedCases", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "ConfirmedCases"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfirmedCases"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RecoveredCases", 
                  Style[
                  "RecoveredCases", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "RecoveredCases"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RecoveredCases"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deaths", 
                  Style[
                  "Deaths", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Deaths"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Deaths"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Slovenia\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"46.12\[Degree]N 14.82\[Degree]E\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GeoPosition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["RecoveredCases"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Deaths"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{917., {68.41754150390625, 75.58245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{917., {68.41754150390625, 75.58245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825671213938424*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"c7d71ba3-c60c-4ef9-8850-29909860cd1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"potrjeniPrimeriSlovenija", " ", "=", " ", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<ConfirmedCases\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.825671235635047*^9, 3.82567126840746*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e744508c-18d6-41aa-8bd3-fbe7ec94c320"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0mtMEwYQB/COIQ/ZFB3MsYAbZIMIYgfdhtZa7gDRVh4C8igPgTYgwgB5
BoEVHcKGnWNqKSCVCcWoTCgDZnBsMOVVdVoYOKbZA4WIhIPxLGCRrCYkXHK5
/D7d/ZOzFib7x+gxGAyOrl/NbM1bQ8gmZKwWP3DHo9jda24vX8ys4ayZqcoz
ur9nzf1F7ar/uGu2dFI6OsCao26HFfohoa+pXb/KRuvK29WS/60bIXeu8/rE
2TCIdb+vvONO6BW3J6D253QQu3ynnvB45Tr1uEs+7N5kLbX3JHTb9OZUqOQM
zA1EevnvI8y3yXm3n3sOhhyCWen7CbcveUtqjkghJW6lrZ5HWKT63Gx7WQms
fCPkDvAJR1qck53TZMCsyBRu9iK8ILBy/PSmDKRs9x/53oSV5jV8/WcymO/4
TZvos3r/lAy0zgaj13xXrV8Ky5Llrt6DhKfDj9+SsEqh+m41z9Sf8ErZjNNg
RCnkyl9b5gUQGrJvJ5Z0lIJfiFV10iHCQcW4RcCtMri39Jy+DyTsFJvEfz11
AaAgxWEgiFAwaj9nNCuHMUVjmSaYsPUvU8GCvBJcripqnQSEkQuWW2OEl+Ck
zK8hOJRQ89WiuPjtKkiOV4bKwnR5hmekJeoqONvXxVKHE+4Spc2GRStAaVPO
mI0gXB/84k9D28uQIrBMZUYStpg13ln0uQLM7PDBoChC6VF2fNDENbDeEZiQ
FU1YYOI6//dgPbT0vFQ0Cgn5Uvnm2sJG4B8Q9Q6KCFM5hy9PZt6Ak81ZVeYx
hB6HuquYH/4CTYYHYrmxhJbFX0y7tXWCxeRDQfQRwpden2gqJnrhg59MZ+Rx
uvxzpzM+OvEP2B8zEnccJeR4lg2XeI7AQ5OGer0EXR5WlbV55hg0s003cD4j
VD77WDbSMwnFAY7RUYmEva6iP7r7pmGD/4uQi0mEfhcLbIekc1DEPuXRlUz4
e7XR81anBdh5o/vw6DHCjr19nu/lLYFky00rm1Tdvm1nniw81cJjYVzvvjRC
bUL9o4rwFXhwvseuMJ1QbLt+ylvDQE3wv3VtGYR3HzN+ULH00MKg2e5pJuG4
+l6Er9vr+KR8p+fWLMJfTxmHVATpY82W7JC9xwlZTL0kpcs6fCMnYWNBtu5/
KiskDdPr8GqK+XxbDmGaQt9YfckAXf1zHwznEr5vX/flQXdDzHnnvJe1mHC+
aWTbrMYQm1Sxbbw8QrreOiYrMcJCY2rPOEFoJhJPb/Qxxv8B0yC/5g==
                   
                   "]]}, Annotation[#, 
                  "Charting`Private`Tag$58790#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.78864*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.78864*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3788640000, 3825446400}, {0., 
                207297.99291684537`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0mtMEwYQB/COIQ/ZFB3MsYAbZIMIYgfdhtZa7gDRVh4C8igPgTYgwgB5
BoEVHcKGnWNqKSCVCcWoTCgDZnBsMOVVdVoYOKbZA4WIhIPxLGCRrCYkXHK5
/D7d/ZOzFib7x+gxGAyOrl/NbM1bQ8gmZKwWP3DHo9jda24vX8ys4ayZqcoz
ur9nzf1F7ar/uGu2dFI6OsCao26HFfohoa+pXb/KRuvK29WS/60bIXeu8/rE
2TCIdb+vvONO6BW3J6D253QQu3ynnvB45Tr1uEs+7N5kLbX3JHTb9OZUqOQM
zA1EevnvI8y3yXm3n3sOhhyCWen7CbcveUtqjkghJW6lrZ5HWKT63Gx7WQms
fCPkDvAJR1qck53TZMCsyBRu9iK8ILBy/PSmDKRs9x/53oSV5jV8/WcymO/4
TZvos3r/lAy0zgaj13xXrV8Ky5Llrt6DhKfDj9+SsEqh+m41z9Sf8ErZjNNg
RCnkyl9b5gUQGrJvJ5Z0lIJfiFV10iHCQcW4RcCtMri39Jy+DyTsFJvEfz11
AaAgxWEgiFAwaj9nNCuHMUVjmSaYsPUvU8GCvBJcripqnQSEkQuWW2OEl+Ck
zK8hOJRQ89WiuPjtKkiOV4bKwnR5hmekJeoqONvXxVKHE+4Spc2GRStAaVPO
mI0gXB/84k9D28uQIrBMZUYStpg13ln0uQLM7PDBoChC6VF2fNDENbDeEZiQ
FU1YYOI6//dgPbT0vFQ0Cgn5Uvnm2sJG4B8Q9Q6KCFM5hy9PZt6Ak81ZVeYx
hB6HuquYH/4CTYYHYrmxhJbFX0y7tXWCxeRDQfQRwpden2gqJnrhg59MZ+Rx
uvxzpzM+OvEP2B8zEnccJeR4lg2XeI7AQ5OGer0EXR5WlbV55hg0s003cD4j
VD77WDbSMwnFAY7RUYmEva6iP7r7pmGD/4uQi0mEfhcLbIekc1DEPuXRlUz4
e7XR81anBdh5o/vw6DHCjr19nu/lLYFky00rm1Tdvm1nniw81cJjYVzvvjRC
bUL9o4rwFXhwvseuMJ1QbLt+ylvDQE3wv3VtGYR3HzN+ULH00MKg2e5pJuG4
+l6Er9vr+KR8p+fWLMJfTxmHVATpY82W7JC9xwlZTL0kpcs6fCMnYWNBtu5/
KiskDdPr8GqK+XxbDmGaQt9YfckAXf1zHwznEr5vX/flQXdDzHnnvJe1mHC+
aWTbrMYQm1Sxbbw8QrreOiYrMcJCY2rPOEFoJhJPb/Qxxv8B0yC/5g==
                   
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$58790#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.78864*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.78864*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3788640000, 3825446400}, {0., 
                207297.99291684537`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"22 Jan 2020\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Mar 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["427", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJzV1PtPl2UYx/HPfT2IJ+QYiiIkqAgrWtgwdWo0KGNmViYtTUtjJkXoGB46
gJpJntLldBnNAwqUaaYJmAoeMLKMCI+wmEXlseap6GhKb9f3h37wH+i7vb7b
cz/36bmu+7pjJk19NMckOWy68fc/+t3Yd3ufYJ9bMQhP4A1UoBnXEOb+FY0x
mI012IUWBDNhf8zCZnyNVsR6UjrmogyHcRrX0NtPSkUmFqAEFajCJ2hBKyLa
SX3RH3cjBenIwHhkIw8vYQ4WYSWKsPY/SvEeNuJ9bME2lKMCO/Axdvrs8tmN
qpuo9tmL/TdxALU+B1GHL33q0eBzBMfQiCY041ucxXlcwmVcwXW085c6oyv6
IBFJSMFITEIulqEE5fgCP+AyHEnvjSQMQioykIVXsAJFKMZOnMAV+HWQQhGL
fkhGKsYhGy/jNczHUqzDh9iJg/gcX6EFbejZUboXEzEN+ViFapxDYCf2h3HI
QgHW4wAuILQz34BUZGMDmtA+gLOC8ZiBdbiMoV3IPcICaUcpfkduEOcVz1AE
x5EWwnvUIyOUHGFZmDT8FukMAsKlqRjclfygsRvnJIK4d5dCerAXNERKo6Ok
fdHSkF70ieFsxkpBfch3HGcqgRq4nbY7WeMu5kuWFg6UcoZJF9Ok50dIPUZT
MxRj8ATJy+Ts55CHmey5gOdCYreY/hSq/3K+722pcB3xKWP8ZuK1ldh9REwr
pdv2SpWfks866bmj1H6j9EcTfb6RHjtD20Xqp5V8XEWb9DM3Wgd/p12BTsXh
Tt9HOoXEOk2Pc4qLdxqV6FQ/wKl2qFN1mlO/EU6Jo5yCH3Ga87hT81NOoc86
JeQ4/ZnnNHiW0/kXwaWRtMDpnaVO81Y4JRc5bVrtNGCtU1SpU84HTisrnN6q
Yv09TjP2Oc2ucRp0yKnqqFP8Sac7TjntOO205pzT+p+ccn91WmKmN7uYKsJN
XaNMIb1M+2NMYQmme5JMKQNNDwwzPZhmmn+/aetw08SHeD/GVDPWNOVp0wuT
TYVTTNuzTGnTTAUzTRvyTdteNbW9bkpfZCpfbIpbbpq+irlWmzoXs24J48qY
811Tz42M32Jq3W46vsNUt9sUXs18e0zx+02Ta03HPjNl1pl6NZj2HjZVHjEN
OWHK58LMPWny+860+5Rp7hlT3lnTwz+aOl0ytfuFdX8zBf5lWnLVNOFv031t
puvmaay/pyc7etoS4Kky0NO8IE/dwzyN7OYpItJTTbSnWi7iQ308XejLc4Kn
fwBgFB5D
    "], {
     TemporalData`DateSpecification[{2020, 1, 22, 0, 0, 0.}, {
      2021, 3, 23, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.2],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825671269098064*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"4449ff48-c4cb-4ab2-b89e-987023e87194"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"potrjeniPrimeriSlovenija", ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Potrjeni primeri Covid-19 v Sloveniji\>\""}], 
   ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825671300326181*^9, 3.82567136297097*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"2291f0b4-b594-4f3b-aba6-cc623ccabc8f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxV1QuYD/Uex/HJJaukUbqd49ToUFvpNKdUihgRG2JsYomaiFY2BpFbGpTb
cZmEtgsmVCvUkKgtmrR1dJFJklBNbFpsNam0CdX/8/9+9Pz+z7PPPK/nO7f3
3LZh3yH5/atpmrb8JE3LLP/6Ja2vr2yt/f3Ti1Rb81W7kerggOq4fnPFWivV
5kDVzmOq/fWqo29Vp/VaKDZaqLYHqPZ81WGp6qRctX76DWr/dardfqqDmarj
daq1ParNOi3V/mtU+47qaLrqdI1q4yvVdu1Wav9VqsM+qpMpqvXVqq3dqt2T
LbXfVB33Uq09otp8SbXzuWq/emu1/3LVaY+/bf31Z0w84QYZ2ytUe9tP2Mw4
1G5UnFx6wq0y1m+jvU4ZWw/RVveM3WV0cFfGwScnPCDj+BjtDMpYy23D+ZCM
zXzaHJqxM061/xydwFFM2yMyTo/Q6QPob9yW649Gfxc6GIv+0bQ2Hv1LaM9D
/2ban4D+KjqahP4Lb2LPI+jvRMeT0T+SDqagP6D1aej/gM6bjv5f6JwZ6L+g
Hftnov9meuos9A+nc2ejfwFdARub6Bk++g/RdR5Ff4P27IPDdrQxB/3uiTms
P0Vvg6136BR2f6D1x9B/Xh6vJxy3oWNYG0w7c9FfTM+FnY30JtivpHfD0dk3
8/7NQ79FN4KNQXQBbM+j74e9N+kQDvfTMZyc2YHXE9Zb0tp89BfSubA7h+4G
B2/QhXC8jx4Ha/U6Kjabq3b603NhfzYdwNFr9FI43UuXwEbdTuJXYbsZXQZ7
fekYDmfQ2+BkLb0b1r+mk2z/qbeIy7P9V6sO7qQrsv3TVGtr6Mps/5d0mu3P
6azYv1J11Ft1Olm1sYr+Odu/S7VXs4v4aLb/CrrG4+jvqVp/WLX1omp3h+qg
ms33DY6b0PVhrYdqcwLdAHaW0ybsf0o3haM/VKeXdBU3g41utAXb41V7JXQe
HG6l7Wz/Ubp3tv/ifL6v2f6udFG2fyw9Ltv/LP10tn8LvTTbf4R+I9vf6FZ+
X7P9nemybP8ouirbv5iuX4z+D+kmsPErXQDbDbvxewZ7Hek1cDiCLoOTRbT2
BPrfp5vC1s/0VNg9/zZ+r+Agj27xJPqH0T6sLaBj2Pw/3eQp9P9Iz4D9f3bn
9YGjm+gaT6N/CD0DNp6ky2C7jC6Hve/pOgvQf24PXi84uZFeCuv30SlsPU7b
C9H/Fl0IBwfph+H4rAIeH9YsumAR+u+ly2BnLp0ToH8D3QiOKui2cHpGT3Fn
2LiBvhe276Enw96j9Fo4fJ3eASff0IdhXe/F83kG/dfTp8Du3XQDOJhFW3D8
Kn0HrO2lh8HmabeLZ8HOtfQc2L+LXghH/6MjOH2FPg4bCd1sMfpP6S2eCHtN
6Y1weAedwMlU+gisv0ybS9D/BT0Gdmv14fMMB/+lGyxF/+30MFibTK+FzZDe
Cjs76aOwX+MO3u9n0f8fejKcFtA7YWMS3eg59K+k+8LeZye2h8OT7uT9h5PL
6HbPo787HcKWR9ctQf8L9N1wsI0uhePjdCWsXeLw+ViG/lvpBHYepMe8gP7n
6fzl6P+YvmgF+n+nK2HjorvEHVai36a/h70xdPmL6F9Kr3kJ/R/R/UL0/0Z/
Clv/7sv7sQr9t9Aj4eAB+iM4fobuvhr9H9IxbB6mZ7+MfqOfuP0a9Heg98HR
/XSdV9C/kB4CG+/R169F/0/0ftj7193iz9ahvz1d+ir6h9J9X0P/03S9UvS/
SxfBbkrHr6P/H/3Ft65Hf1s62oD+IfT5EfqfEHsHYedtzq230P8d57U2ov+c
ATIf+Db6W4u9L8rQX0SPfxf987m+tQn9Eb38PfQf4Prr3kd//XvEbT9Efyux
du0W9A/kvPnH6H9MHO3civ71nL+7Df3f0gO3o/+MQv5/+Az9LcSR9jn6B9Az
d6HfF1tHv0B/Kefrv0J/udiJEvSfPjBro/Br9F8njlbCXj/a2oP+mWKt5V70
r+NcL0f/HrG1Dbbq3CvzBd+g/xqxcdo+9Dt0ezieLg62wNorYuebb9H/Ffe3
vQL9tQfJ9nP3o/8qsXXfAfT3oRM4nSLWLjiI/tXcfjNs7xZ771ei/+Qi2X7z
d+g3xd6s79Hfi+73A/ofoffC1kti4/QU/Z9z7sBB9fuk9yAcXy7We/2I/gKx
sQE2J3Le8BD6V4jte2B/u9iZCEfa4KzTbXB6qTgp+gn9t4nt3bD9kDju+DP6
l4nd1XD4CeeH4OTYYL7vv6A/d4h4FGzli8NjsDtObAw9jP7nxP4eOI7pLr+i
/3dxMAk2G7syXwg7XejjsD9arE+qQv8ScbgfTjeLzbzf0F8ltpfA9oVDZf2d
sNdJ7PwEhyPFcdcj6A/EyXZY/0Bs9/wd/b+I3fdg94Jhcv8TOLhZ7NQ6iv7h
4vRiWFso9pfA5iZx1PwY+g9xf1thv8FwOZ8bj6O/ndi9HU5dzqfBxlNioxS2
36F7/IH+H8ROfS2zDM+7P+upRXDSRlyyEtYHi8MK2Crm+tpJmaW7UZxTFw4q
xcV5cHz2iKyrpsFaa7G2ETYHia1DsDNP7FxYLbP03xTnNoWj/WLvBjg9c6Qc
fzhstBQXl8B2oVjfDntzxFb16uh/Q1x4FZzsE5ttYb3eA7K/W2CrudiYCLv9
xenrcDBbfO53cPyaeOpZNbAsF1e1gs26o7LOy4edZuKgD+z3FZuPwtEMccnb
cLpW7ByAja/FBTk10X/qaDl+I9i7Wmw2hcM7R/N6wsk0cZIH62vExSNg60tx
sAh2c8bI+WyAgyvFzpdw3JvzClibIjYOweYqsVX7ZPTvEpuXwX7NsXK8dnB0
hdjoB6c9xdoE2HhYXDUTtl8Uh/Ngb4c4WQWH1cZlXfEJnDQR+wdhvYfYyKmF
/gniHY1hd7k4pykcfCoOmsPxH2IvH9YufVC+J6Ngs5s4txh2xotLXob9ErEb
w9FWsbMbTo+K0z2wcfF42d8R2O4qTs/JQf9YcXwlHD4rTjrAyRax2x/Wj4jD
EbDV6CF5vsfBbmfxpmI4GCUuLIXjxeJoB6xtFuuHYfNXce7ZtdHf0JPrcxHs
dxQXXgFHI8R659qt/wSFNmvi
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.78864*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.7868256*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{{0.}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "NoShowPlotTheme" -> "Scientific", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Potrjeni primeri Covid-19 v Sloveniji\"", TraditionalForm],
  PlotRange->{{3.78864*^9, 3.8254464*^9}, {0, 207298.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.825671312773864*^9, 3.825671366798324*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"fe02db85-f5d7-49fa-bf76-da7d48fa843a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{"potrjeniPrimeriSlovenija", ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Potrjeni primeri Covid-19 v Sloveniji, logaritemska skala\>\""}], 
   ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8256714076751423`*^9, 3.8256714585719852`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"70d66e43-b26f-4a5c-b25c-192131051de8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxV13k0VP//wPEpLSg1FEVhKHvWUpYwV5IlDCUlaiKSPhhkicqQaBFDu6Sh
T30oWVqUj5ah0kIlKpFQiepz09CCVL4vr/f5/c4x/8x5nHPPPfd5zn2/X++r
5hfmETCWwWDwxzAYI//wE3tRNPXF/OcfW4MuGzArCezlbVIcoT48Yk7RaPNf
/P/1E9jgUobtKHfogr31Mh0ex04aMdMTvCb7Qp78POaI2QngH/uKZ/h+kx0x
rxCsUhFZnlo7bcTCRrBehv1j29rpI67/DS7kPXoalC4/Yob2EprKjSpoMVJX
GLGRB5jtV96UFYPmbh9twVnw5MJF7tdPoUX14BXGkozmFTNGLP4JjvqpVfLg
IZqlYUdTlfkqOduVZo6Y4wae4xK1iu+L5m8DL5WU+PWtDF16Gswd7B48ME0R
+x+BY0MyzKJWoJkDYP1Ul8LCWjRbfSlNHd08g5E3Wwn7l4PDW34xl61HC6PB
3t3LlynvQtcLwS2rVQKP30IzasGqfx7VmonRRt/B7zrmXbI0mYX9qvbwPA2q
5afWogWO4KcK4W3le9GiSLCHLPdXdC5afBJsEaOd21COZt0Hu8UXjrduRXP6
wAz3wG8VP9H82ctoqvxy6DErxdnYbw9WMONLpJijO3jgYDohps8dzTwBrs2I
Ukzgotl3wWF7d+8OCUTzvoBf+NZp64aghYoONKW2RXgwMBldvwQ80/6Cc/Eh
NCMUbHp+hv6aMrTRMbD3WKf8xEo0txp8NXtzmuAuWkCDJxh6Lgh6gBYpONJU
XVLkXsd6tJgNzjAxUVZtQrO2gG+J6po+dqA5h8GZohtVGl1o/i1w793Oufa9
pP8juLV7eoV2P+mf5kRTuoW7GQeGSL812Cu9JY4eJv1B4IM1V6/qTVTG/ixw
QGdiiPxUtPA6OLvAZkqhHLq+CyyhrpxgroBmyDqPspHlaHMDwPfefrfZroQW
ZIA7N3Z+PjEbLaoAT+ur7eYoo8XvwN2Tb1SNV0GzpiynKdfl1Z+aWGiOGVhy
iuzib+povh+4RK2VN1UDXZoGnt+i2FNN3FEObtjvuk9HC818A96btLawlZg9
yYWm3JtmFmZok37T0RauBx+Ky9xrq0P694424zKY4VXv9J3YqA2c7t5B/6NL
+iVdR1lgMtoin9EWp4w2qwyc7FgX5q1H+l+NNn+8G7xvWf4zb80j/YZgj39p
uzkGpH/NaDOTR5tdPNq8l6MtHMuhKTnxje8phqR/HjhTUl/vkxHp9xpto0Rw
RkLG++UmpP88eNMSn1NVpqT/Odiy6rppxELSPzzaYh13mjK5WnxBfRHpXwne
9JVnu8uM9O8cbX4B+FrmD9935qS/AXz5eRZjiSXp/wUOkdiR5W5F+rU8aGp2
mXcrw5r0u4PjN5lMmMIm/fHgztWTc+7bkv4zYP+H7mZmDqT/CfjSw/MDWY6k
/ye4uXpDvNCF9M9dQVOvmuMYLq6k3xX8QmZP0CCxIBbcvtAmrNSL9OeDNf5j
itf4kP46cHyOev5KLunvBw/9KBh/ZBPpV1tJU3lH02be4pF+Z7C+Qu/po9Gk
Pwr8UemTlME20n8KLBNhYtmYRPofgp0vpuyfvZ/0fwO/VqBD1h4j/SqeMK8+
sV945pN+B3Cb1CQT/cukPwLccOhiTreI9J8EyxhXuyU8JP33wBat79PVXpL+
XrBh3dMLul2kf9YqmjpetfRw6WfSvxSsFm7+Mbyf9IeBdWc8dC2WVsH+bPAM
fnFwghyacwcsS09XECug+T3gfq3eCdGz0aUzvWA/LRsobtdEd9iCc1JyEg2M
0cwQsGTn/Yn+lmj2UXCV1Sl7dQc0rwrc9SHpnrMzWvgf+P4FPZlBV3S9/GqY
v8knmuPWohls8NbS0xYbg9FGweA+YZWMfCyaewjsfa4690QiWnATHJVTLJO1
By36MOJbpf6xArRYbg3s5xXvDT5nkX4rMHcy3XD3OOnfBNb3VWrMEpL+THBQ
aWsVq4j0V4JdvI72WV4m/e/BqSddt3pWkn6mN009sa8UZ94i/RbgxqXpOtIi
0r8RvGBWQQl1h/Sng8U7xdtP15H+a2C7vF7PrEbS/w7sbDz/s+5L0i+zFtaf
Sv/KzDbSvwhcwvZNj2sn/RvASp5Jvxa8Jf37wX8sEhvffyT9V8CpZ96E1vST
/g5wjEPGkyPjVLFf2gfW52dq45XpaP4Cn/87D6JL14Gdla+4NGqjO/aAJz2+
yPQwQDMvgQNlbbtOm6PZr8GClc4lXx3QvIm+NLXqQNr5aG+00BicpZueXrYZ
Xb8WrPb0VF5BHJqRAp573zymIxVtVArOSVi7cOkBNLcFHGqW9tD1MFowbh3M
p5dfaXE+WmQA7qvs7FpWghavBmu/UFSvuYlm7QKH+G3Ttqwj/RfAD6Y3Tlvf
RPqbwMp/Le6+/5r0j1lPU5RdzXlrmvTrgcdnulSvGCb9q8AKpmddyyRZ2M8H
T5/ql5TJRPPOjVy/3cLr/Ay08NmI989xLVJB1/8BC/NFGZfU0QwdLvRMXSwR
qIM2WgG2WNz2+pMpmrsDfK7rhU0JhRb8AxY7rJa55Y4WPQX7MO9JS21Ai4fA
efekez6GolmaG2jqXy/jlPVRaA4HvHi1285IPpofBy4NuJGTJ0CX/g1muVll
0SfRHY/BJk/WZNLFaOYgmFtvKD57nfTP8aOppiGt7KIHpN8FbPWR8yf0CemP
AT8O2eEW3Ez688CuCV9+xnwg/XXg2unSs058J/0/wOXPVf9LllLDfpY/rIc5
lpbDs9ACJ3D2OadL4Xpo0VbwvKhgf1lDtDgX/C3Bt83fDM16AN7Yl5n62wnN
+Qp+u87+T4I3mq+8kaY8/XfdfR2KLl0G/ttg2k5BIrojHDxgdfLpYDqamQNu
j3wnezgHza4BJ1csCkk+jeaJwSd3H9x37wZaqBRAU1pdkn0dL9H1dmADNS+R
YS+aEQamdPd98ZBSx/7j4Do3uSpTdTT3Nrg8xUtFaR5a8Bn8PLX/bIUtWjQj
EPbjivz0pCC0mAJbFMjE7T6AZv0F7szuMB97Gc05AvZUZTzb0YLmi8AvJHoc
j/SjSz+B1feM3Tdj8hzsn74J9t/7b8cNaaOZNuAmq31J1WvR7M1gdTXNoth0
NO8gOPP+vxWp19HCG+AnT+5NXdCDru8G96QGp02Un4v9ckHwvVQz0fu0Ptpo
Mfhb9dIKKRc0NxAcdGB9Ts1OtEAAThh36vi0c2jRv+Cetw0JC++hxZ3gIYFH
bttbNGvqZvheineQS/6B5piD7YsG9bf+QfP9wcKw6Y1Pp2hg/wFwezzvZpMO
uuMq+Fzkw3tONmjmW7CtpqAo2APNnhwM8175QGRQAJq3EEyrJNjnhKGFXPCB
tlT5l1vR9fvAAy9Drb7x0Ywr4NK66Is3j6GN2sEGcUnjMorQXKkt8DwH5x46
XIkWzAff0eCaOtahRb5gg1x26qdnaHEq2LztQ4qgGc26CJYU5+nadKE5reDj
ramO2gNo/oS/YD09OFjbIKWJ/UZgrZcTkvMU0B3eYN2xdXf85qKZu8FFXuHz
4+ah2SXg/cN3lTSN0Lxm8O+WSANDC7RQIoSmypSMFbuc0PX64OTbVQMPvNCM
1eBcuV6RsT/aKAkcc3XcXItQNLcI3CetvOS/KLTgBVgqPWJMSyxaxAiF8xRb
RfdiIlqsC5bboet8OBPN8gQnyh2R7clBcxLAZmI/nlQBml8IDtnaJytzkfQ3
gqXiWIOW10j/b/CUD8/LZ1WSfu0wmpp10ye09g7p9wAXRlbvUXxK+reDLZjX
hne8Iv1nwcusJOr470l/Pbhk5bhxvT2kfwi8QfGfDP+vpF+DR1NjYgYfFn0n
/W5g48CHETd+k/5t4GtfX5afk9TC/tPgF9enDg0w0eJH4BrdGa/5M9GsAXDk
zqHgQlU0Rz0c+vyen/4xB81fDjZ88/tUmwa6NBosHZpYOVMf3SEE/85682fW
IjSzFqyWo/v9OhvN/g7OsP7+V7sDmqcaAd8jvM8lqU5ooSP4VVTGTTcXdH0k
2LtUbVGeG5qRC770wX/+qtVoo/vgs3l3VV75obl94A/jqjRkQ9CC2ZE0FVEl
45e2lfTbg0+UpbnqRZN+HrhXws7QbBvpPwG2mZPy97rtpP8ueODMxd7tKaT/
C9jgz9zMsoOkX3ErnM82dffvyyX9S8DZjhk5m8+S/lDw8KlN68IvkP5jYHvx
5vVUKemvBjdMsnRoKiP9NNjmrEFZ4TXSrxBFU1fKlunME5F+CjxUUVu+u4b0
bwG/n392/+da0n8YHOHd6r/kKem/BTZtqIg2ayT9H8FTvX8zbJ6R/mnRNJUW
v0tWvoX0W4NVbj/TfNVO+oPAuctcv1zuJP1Z4NflATviP5L+6+Af7TpfdveQ
/i7wsDz1j52Y9MvGwPs5Jt7Pupf0W4Lfe9dvKPhB+gPAX2ydBtJ+kf4M8Ocr
l7STxmhjfwWYF+CjeGA8mtEJTmj2SaqWQhtNiYX5+WvdFcEkNNcM3H/XcUHx
ZLTAD9xTclPtmixalAaebCfYna2AFpeDC3eo3XNXQrPegE8P5a7RV0ZzJm0D
/7lR2ayK5puCu4O+eqxUQ5euB6++zRheoI7u2AuWNpP4YD8HzbwMPrrC0yxa
C81uAz/Rvmnhq4fmScbB+UjnTo+5AVpoAl646XOBujHp9wGnRqlrTjMh/ang
2Fm21mJiozKwhtPRM9KmpP8VOMDr+uPZZqR/fDxNWf/c1X/IgvQbglvdazeq
W5H+NWB7uyeva21IfzJYEG5zrI9N+ovBV99vv5hHkf6XYL9x2jqqdqR/7HZ4
P0WcotnLSP88sF65pqGBI+n3Am8Vci6ccyb9iWBnjYbzVq6k/zx47Ls+pRg3
0v8cnGmdm6HCIf3D4J3i9svyHqRfdwec/3pDTNw9Sf9KsNTVbKkJq0n/TvC+
9cfD1niT/gLw5cExZXd9SH8DWNdi6swaX9L/C+xWUfncYx3p19oJ5yf7qENL
uKTfHRzPHvh5w4/0x4MZ++Wb+zeS/jPgBl3JX18DSf8T8DrNznz1zaT/J9g8
97ZFTDDpn5tAU83SHNvfxDxX8BTrhTUrQkh/LNj4i3aTDI/054PjqcQcfgTp
f5QwMs/32bzaSvr7R+4nodS9JYb0q/FhfthpWlyJJf3OYOrvMIvQbaQ/Chz5
89Dgq3ht9v8AwarEvA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.78864*^9, -0.21060925705372754`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{{{
       0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}}, {
       11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.991464547107982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.214608098422191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.396929655216146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.551080335043404, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.684611727667927, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.802394763324311, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       7.600902459542082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.006367567650246, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.294049640102028, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.517193191416238, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.699514748210191, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.85366542803745, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.987196820661973, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       9.104979856318357, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       9.903487552536127, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       10.308952660644293`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       10.596634733096073`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       10.819778284410283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11.002099841204238`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11.156250521031495`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11.289781913656018`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11.407564949312402`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       12.206072645530174`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       12.611537753638338`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       12.89921982609012, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.122363377404328`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.304684934198283`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.458835614025542`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.592367006650065`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.710150042306449`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       14.508657738524219`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       14.914122846632385`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       15.201804919084164`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       12.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       8.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       9.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       10.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       11.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       13.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       14.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}}, {{{3.7868256*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{{0.}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "NoShowPlotTheme" -> "Scientific", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Potrjeni primeri Covid-19 v Sloveniji, logaritemska skala\"", 
    TraditionalForm],
  PlotRange->{{3.78864*^9, 3.8254464*^9}, {-0.21060925705372754`, 
   12.241912650523977`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{3.8256714592852163`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"74d150a8-182b-4a4f-84ce-a38440878755"]
}, Open  ]],

Cell["Dnevno stevilo novih primerov:", "Text",
 CellChangeTimes->{{3.82567151998444*^9, 
  3.825671524592519*^9}},ExpressionUUID->"51ff1844-2fa8-41c5-a969-\
9f36e60ba363"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", "potrjeniPrimeriSlovenija", "]"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Dnevno stevilo novih primerov Covid-19 v Sloveniji\>\""}], ",", " ", 
   
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "october 2020", Typeset`boxes$$ =
           RowBox[{"DateObject", "[", 
            RowBox[{"{", 
              RowBox[{"2020", ",", " ", "10"}], "}"}], "]"}], 
          Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.715078`6.305898410292855, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{267., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True], ",", 
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "today", Typeset`boxes$$ = 
          "Today", 
          Typeset`allassumptions$$ = {{
           "type" -> "Clash", "word" -> "today", "template" -> 
            "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
            "count" -> "2", 
            "Values" -> {{
              "name" -> "DateObject", "desc" -> "a date", "input" -> 
               "*C.today-_*DateObject-"}, {
              "name" -> "Word", "desc" -> "a word", "input" -> 
               "*C.today-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           1.085948`6.487354023303364, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{129., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True]}], "}"}], ",", "Automatic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825671534583467*^9, 3.825671696744277*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e1a894bb-6802-47e2-84ac-dad1061e1a6e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxV1gmU1dQdBvCISFGpBqUWW1oDRUVEjWwOe4ABZmCAzDAwbxaGsO8Q2WFY
AiIoskQ2URYjIB0RNVpEtFhTq+20Qk212rFSjUoVLa2p1Upxq+97813Pn3OA
8zt3/e720nrc7JKJjTRNO3iepmX///aPPqP7mb7ad3+s7dJuJB18JB236CGs
9ZE2p0o7W6T9Z6WjD6TT5j2FjZ7S9iRpz5cOn5FOTknrl/aS+btJu+Olgw3S
8VPS2rvSZrPeMn9Xad+RjtZJp4eljbel7Qv7yPydpMPR0slaaf0JaeuktNvE
kvlN6bhCWrtd2nxM2nlD2j+/r8x/g3Ra9p2tb/8aq5RbZG0fkvW915XbZMtD
rZ/M3175xmy5PlK5e9bWCmUra/ch5cFZB68q52cdf6XcP2utXX+6b9ZmiXLX
rJ2l/WX+A8rXZMujmPaGZJ2eU+UDkP/qfLoP8g9X7pm1tzhfzCfcp1yQdXIi
X8xPP0t7xcjfZoDI6xYpD0L+BQPEesWBLNdeoj2Mb36myouQ/6qBLO+XtV+o
jHzRXFrrjPy7lfOQv26gyGd/MlDsl9dqEPuDw4G0hvESd5BYL32n8s3I/6Jy
K+T/WNlA/isLRPu4f4GYrzarQIxn7lBuj/zPS/tnlHGeoysKxflNLWljeqFo
b28rFPP1nlPG+Q4/LBTzTy4fTLdE/t7S1hTltsi/WRnnMzg2WMw3fl9aaz5E
3v8e0s7EIWI8f5NyU+R/Wjntk/3nPWnjkiJaR/68ItHeGycdri8S7ZMjynhP
9HdkuXXxUGG3y1Ax/2CMLI/vlOXaYVluviXtNB0m739H6ahKOl0jbTw+TPRn
vynLvQuGi3zhTdJJ+XBRX18tbT0q7dZLB41s0V/cQVors+X+r5TlzsPKOC/+
a7bIE30j26fXFcv9Ly0W/dnLi2X+WlkeviKdfKmM86FfWyL3v7hElLs1yjhv
wYPKuE/xyyUy/zllnG+z7Qi5/8Ok/UXKuM/RXmXc5/T4CNGf8bky7qPdupTu
kLU3RLkN8s8vFfNP7lfO/f79oVSMb32q3AX5fzqSNpG/QLkX8s8ZKepru2V9
83fKt2Tt/FsZ77n/41Ey/wBlvMfpbGX8Xhn3jRJ57RdGif3w/qWM9ytsWUZ3
Qv5+0vpMaeueMjE/99dlYv2Df5SJ/Yl/kBH1NSsj1secptwD+bdmxHj+rzIi
T3Q6I9Yvvaxc3BejV7nMP1nau7tczCf8ZblYz+Tv5XL/9QpxXqzuyrn3b4Is
DzYqd0T+oxWiP+29CrH+5vcrxfycW5RxX/yxlWJ9o7sq5f4/qYzvHSOpFOtr
X1TF3/t+yN+Zzn0PhNVVYn7JHco4b/ovqsT+WH+T/bnfG03j+yS4mc59f8SV
slxbo8pz33/haJn/r8q4L37jahrjRTfSue+XNKPKc99/t1WL+dmPVIv18f5S
LfYnPG8M6+N7NbleGd+X+ihlfO9ZnjK+59yDY2T+P0vHX9NaN+S/zhHzNUco
lyL/Mtoagfw/V+WVyP8n2qtA/i/oKIP814wV87NtZfTvLaGjauTfT2voL/kj
bYxF/v+p9lXI/7NxbI/5uENprRD5FyqPQv4HlNGfdpz2ML75XzqZjPzGeNaH
/cF0Mh7556lynK90z3iZ//e0MxX5/6PaT0T+n0xg/ZnIP4h2ZiD/rbSG+vqu
CaK99VvVHvnclLYWIP+PJjbYXIT8+XSMcm02HS1E/nvpcDHy/4Y2MJ7/TzpF
f9EPJzW45Rrk70sXrEX+GbS+Dvm3q/rrkT+iQ7QPP6LrPORvMZnzvQP5+9Bb
70H+qbR2H/JvoT+9F/mfpY/tQf4PaBP1tcumNLj2buTvSR9H/84kesp+5Pfp
efuQ/xm65S7kP0WbsHHp1Aaf3Yr83egpK5F/PO1sRv4NdO39yP8UncF89Xdp
dwfyN5vG8ZDX7UrX34X8Dq0tQ/51tI682pN01QPI/zbdAevlXDi9wYewHn4n
uu1O5B9NR9jPdC3trED+J+gXtiH/SdUf8nlNZnC8APlNuh3yJRV0kMt/O635
yP8Y7SCf+wadwXoH589s8ATki2+gd2H+WoZujPUzV9HHML5ziPaxXv7rtF6D
/NqsBu/HeGl7+uu9yD+SPonx7BV0AnsP0bUYP3yVbol8yVe0uRz5283meqO+
VUIfwfq5S+mTOH/BAboKjmPayuX/gm6K+2le7fJ+L0H+4bSG9fAX0z7Gi/a5
Yv7pCTrAeTHO0nXbkb/NrbzvOJ9ekTLek3ABvQvtk4Dei/H0l+hhsPUZ3RT5
3KvmcH/wngWFtHsb8s+lC/C+aHvo0zjvZh3dBPfb+YSu34v8reaK+x4NpH3M
P3XpvNz7t5M28H7ZL9IB+vc+pjsfRP4r5zX4ogPI358uyOWfRa/ejfw76HqM
5z5PazifwRnVHvXjK+bzfqA/rS/dGHnM6bSRO//baD23/8/RdXi/og/pcA7y
X76A9x331ehN18H2FPoYzoO3md4Bh8foFrn7/75qj/3Smy/k7wHGs3rQ+bn3
fyJ9Onf+N9Fb0V/8NJ2H+6qdUsb7ZF6yqMH2KuTPo0P8Xvrj6Dqc92g93TN3
/o/QVVuQ/x367Abkv3gx73Pu968LbeO9DMfQAfIld9IRxtcP01VYL+stujHm
7zZdwvuwCfk70kfhuIr25yH/WjrFeObjtIHz5LxJn8V75F9Qw/uE+xvdRHu5
97+cTpDXWE2n+J6wH1Xls5C/vkasR9hoKfPgvU060LWYj15G+6hvraSPYjz3
YdpZivyvKWO8+Bs6wfeG1n4Zzwt+f81Suh7r5SynPeT1a+k6jB+9Qid4b9Iv
aWsa8l+7XLwHdjFdh/l6NXSC9zd8kNbxXiQv0z7K9XO0hftgtV3B84LvS3cY
HWJ+wSI6xv7Fe+nMRuQ/QduYj/k53Qz1ndYef48xnj+ENnFeovl07Ubr/xeI
fVg=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.8104992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{{0.}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "NoShowPlotTheme" -> "Scientific", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Dnevno stevilo novih primerov Covid-19 v Sloveniji\"", TraditionalForm],
  
  PlotRange->{{3.8104992*^9, 3.8256192*^9}, {0, 3354.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.825671538801159*^9, {3.8256715695241528`*^9, 3.8256715784227123`*^9}, 
   3.825671617509197*^9, 3.8256717104053907`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"95762132-082b-429d-97e9-7cd668e905b2"]
}, Open  ]],

Cell["Izracunamo 7-dnevno povprecje novih primerov v Sloveniji:", "Text",
 CellChangeTimes->{{3.825671809787403*^9, 
  3.825671819795883*^9}},ExpressionUUID->"3514735f-cc9e-4d03-b80b-\
1149c1731210"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noviPrimeriSlovenija", " ", "=", " ", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"Differences", "[", "potrjeniPrimeriSlovenija", "]"}], ",", " ", 
     "7"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8256718706302147`*^9, 3.8256718727052603`*^9}, {
  3.825671926376905*^9, 3.825671952980822*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"09d8a367-1420-4e65-a213-f56b73e2eb90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"noviPrimeriSlovenija", ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<7-dnevno povprecje novih dnevnih primerov Covid-19 v \
Sloveniji\>\""}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "october 2020", Typeset`boxes$$ =
           RowBox[{"DateObject", "[", 
            RowBox[{"{", 
              RowBox[{"2020", ",", " ", "10"}], "}"}], "]"}], 
          Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.715078`6.305898410292855, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{267., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True], ",", 
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "today", Typeset`boxes$$ = 
          "Today", 
          Typeset`allassumptions$$ = {{
           "type" -> "Clash", "word" -> "today", "template" -> 
            "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
            "count" -> "2", 
            "Values" -> {{
              "name" -> "DateObject", "desc" -> "a date", "input" -> 
               "*C.today-_*DateObject-"}, {
              "name" -> "Word", "desc" -> "a word", "input" -> 
               "*C.today-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           1.085948`6.487354023303364, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{129., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True]}], "}"}], ",", "Automatic"}], "}"}]}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.825671956462056*^9, 3.825671997178791*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"282e3be2-ed55-4add-bc73-809fbb2660f8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxVlwl4VNUVxx+oFIXigLJZ1AHZZRnZlW3ISgKBSci+DtlICEleSAhJCOGB
soplBFkEgamgBREYKYK41NGWFqrUKVaKjdVhtSroiIqyaTP/d/6v3+Xj+/h+
nnPPOb/77rx37ZlfmVTUWtO0na00Lfxvyx9H6dhLk7T//3GvU9nzlsr+z1UO
dRynsH2cyq5ilQ2Pyr7XVQ6eV9l293iFnY+qrBeo7H1K5cBhlbWzKjvaT1D9
R6nscavsX6Vy6KDK9s9Udt05UfUfrrIvR+XgcpVtB1R2fqKy3sap+jtUDmSq
rC1V2bFfZffHKntum6T6D1Y5lNbCa3vHtfw9ObGF7UuseCjMrpdVNk5Z+a2d
YX8tQuHgwBauaD5U3nyoY5htKVbcHmbnohY+XB5O6B9mfXcLxyFheJi9H1rx
MWEO3Ipg//Fh1vpHXpqE8pedYXYkkcsnhdndGMl6E8PsedHicWH2B1q4D/4D
OHQ9kv3A9j5R5LFhdk2PYn+wUR9FH8zj2xEl9TpFwP9EFP0j4f8T849Hwb9X
tNQzouE/NZrzxMC/Npo+4ICX+Vos/N+LlvmyEHf8wPzLiLsfjGE91PfExTCO
/v5qxjthvtBWK4757cdiWB/sukJuxv4aPWLFbxT23xcTy/0FB3WLJ8B/C/MP
Yb+cR2O5f9hP/ZtY+o2Gf/fJ9B8F/8jJ9BkB/wqVHZus/GHwf3cy530E/pes
fLC/SxznAYeccew/BP5lFg+C/3or/yH4vx3H+XvD/4s49usF/3vi6Y9824R4
5iPuLInnPGB9bTz7gb1vxtOnJ/wvWvXuh3/HKVzfDf5jpzDeGf5FKnvWWIzf
o//IFM7bBv7npii/X3uHqcxvBf8xU9nvdvjnT+W8beG/eqr6+z+krredUdnZ
LkFhfaTF18LvF29eAvt9H+bAygTux1dh1g6q7Pg0gT4Xw+xuO43znA2zZ9g0
5jeH2Z+tcmjZNPX994oadzWrceOO6UrcN3S60j+YobLtCZWd+1TWT09X5vW2
dil+gUEqa2kuJd+xWI2797iU/fR8ZMVvwP8XlUMDEpV8e7LKriaVjV0q+04m
cp4r8L+ZSL+r8O+XpOQ7E5P4e7oF/wVJynnwvpDEenfh/H+gsnY9ifU74Pz3
nsHz0h7nf5rKnroZPK/34vw/P4P98fsIvW/lI27/0Yp3x/nvmcz+D+D8T0lW
fp++ecnK7zu4PVl5H9j+lsz6eF84v09Wv38PpHD9QPhPTmE+3keBuSmcH+8r
bWsK58P7zvHXFNbD99P9bQrnGwn/36SyPt6X/uhUxsGhylTuP/Ltmy1G3PXn
VPZHfeNrK455fN3SWM8B/4g09kPcVp6mvH+dG9O4Hvn6O2nK+9f7VRr9BsO/
czr9kK8501nf9J+dzv6m/zMqe/6YzvrI9/9XjYc6ZSj3D/v4DOX74JplxYfC
/+kM9se8vjcylHmDFzIUH5stU/meOB/LpA+et16YyXkGwP+3mdwvxAOvWetx
XrRzFveF/6+z2L8P/EdnKd8rz8wszo+4/8ks9usH/1et+MPwD2Ypvq67spX9
MkZksz++z77cbPrg+x1cka3c32x/yOZ+PQb//2Szvvn9/1UOGfcD7yM5yv0q
kJXDerhPaMsYP27e/3xWHOz+dw7nBXtuz+V9Buwfksv6uB+G0hlvBtsfz6Uf
2LU3l88D/Y1/5Sr3S1+rPObjfhR8OE+5P9lS8zgv7ltOI4/rcR/TX8pjfbD3
n3mcH/e3wM/ky2BtgJv9zPvfDDfrm/e/hYwbcfD/vZt+CfD/h1vqDU6E/w2L
Z8C/70w5P1fBLtdMmbcwBf4NMzlPKvx3Mn4+Df5/t+Lp8L/GeqMy4P9QvuTv
BOsJ+TKvH+ydn8/+4MDv8rkfmfB/P5/31yz4X+V6LQf+9gL658E/vkD8t7jh
X1NAH3BoW4H02wC2Hy/gfs6E/3dc/0Y+/O8v5PMqgH9soaxPLYR/VSH7g23P
Mf9KMfz/Uig+J8B6qFD6rSyF/31Fkp9UDv+oIs5XCf/KIskfUAX/Z4vEJ7ka
/n9ifgzYc5ncphb+XYu5vh7+k4p5XhvhP6dY5os24L+hmP2XwN9P/vlx+H/J
9TuWwv/eWRIvXg7/ibMkfmMV/EtnSf3Oa+C/jvGCp+H/FuNH18H/81k8X+vh
36lE8kdvhP+4Etnv05vgX1wi+zdtC/w95L5b4f96idSrAYfOs15XsP3uUomn
Pwf/R0tlvzqinlFQKn7xm+H/VKn0v4n+wcNc78B8trPMf2kD/NvPlnrjwfqo
2dJ/LPy87tkybxtwYBX51DPwf5Ucg7jjM/JJsPvOMuFDYM/wMtnPW2B/DuMd
0D+0vEzm7w22HyAHwK5PysTHDTbazJG4D+xzzJH674CDmXPEdx/YtnSO9PvS
9N/P9adN/4/JO8He28p5PrB/gcHl0r8EcS29XPJXgB1LyqVfBNj9MuONYM8p
xovBfq1C6leZ/gMrJH7R9E+pkPUh039RBc8D5jF2V4hPA9j3IeNR4OCtCnm+
M83n379S6vXA+XAmVUp8HuJ6Y6XM8yzY+2KlnIc9pn+A8Qtg7Ya63tFHl/w0
sHs6uSvYU6/LfO3B/h2MbzT9T+h8Pjgf9p90vj/Arl5V0q8IbEytknousK+2
StZHgIPeKqkfC7a9V8X3ifn8f6hS9lt/cK7Uq8P59sbNlfwz5u+/mjzAPP/b
mD/CPP/H5kq/c+b5vzJX5t1qPv8e1RLfbj7/mGqJ7zX99Wq+n83nv6Va+i3G
frmOVsu8B/D8jG+q+b0yf//dayR/N94PwcgaqZ+A94etoobnezv8N9XIPPvB
+rvMv7wN/pdqxM/A+yjQZR7z0U+bNE/qFWIeRxnjQ83nv55x8/fieXue1L9m
/v6/IO8Fh+6pFU40n/8Ecj3221VSK/Vew/Mw1pINsO/NWs4LDl6slf2sANs6
zpf5KsHOsfOlfg5YL5rP9yPYu2a+rP/afP5HuH4jWDvP/CFgR4c6vo/B7jF1
Sn9Pfp3Mlw32r2b81Fr4H6rj7wVsP1Mnfun4Hrna1Ut8hgf+I+ulXy+wL4/x
G/ieBVfWy3kYj++d7SDjZSvh/2k9v2dgvW2DxNsh3zusQeKrwYHsBpnnGPK1
5Q28P4Adr3D9gifh39wg+/st4p47FvD+h++xf+gCmb8JHMpgfCzY/sQCqb8V
7NpHzgEbp7m+ywr4t26U/bwPHBzUKPN6zO9/GuNrwc7FjfQD63saZd4jYO9H
jB8EB37h+ivL4D9wocQbEXckL5R+u9Df3bRQ6i0Ge3YtlHlzwf6TXN8eHLrJ
+EXTv1+T7Md3pn9iE/cb/Y0FTdKvG9j3QpPMt9m8/3zQxP+/ANuuN7E+2Nl7
kcTPgPVp5N2o561bJP1Gmv7PL1L2QztBrsH8jh8XSf0JeN7ungafp/n8pxh8
nmD/PPKFlc7/AQstGCY=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.8104992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{{0.}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "NoShowPlotTheme" -> "Scientific", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"7-dnevno povprecje novih dnevnih primerov Covid-19 v Sloveniji\"", 
    TraditionalForm],
  PlotRange->{{3.8104992*^9, 3.8256192*^9}, {0, 2027.857142857143}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.825671999455812*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"01029d70-88ed-4bbd-9d67-04eae641e27a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.825671828307919*^9, 3.8256718334776373`*^9}, 
   3.8256719307192574`*^9},ExpressionUUID->"17dad9ca-4a69-4ce2-a3c1-\
0130e53f7863"],

Cell["\<\
Stevilo dnevnih novih primerov na 100.000 prebivalcev, 7-dnevno povprecje:\
\>", "Text",
 CellChangeTimes->{{3.82567209274811*^9, 
  3.82567210562206*^9}},ExpressionUUID->"6f41c471-bbba-448c-807d-\
1888e066f7f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noviPrimeriNa100000Slovenija", " ", "=", " ", 
   RowBox[{"100000", " ", "*", " ", 
    RowBox[{"noviPrimeriSlovenija", " ", "/", " ", 
     RowBox[{
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "Slovenia", Typeset`boxes$$ = 
        TemplateBox[{"\"Slovenia\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
          "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""}, 
         "Entity"], Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {},
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.528976`6.635945661936828, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{167., {8., 18.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True], "[", "\"\<Population\>\"", "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825672116357706*^9, 3.8256721628008204`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"16da3051-fca2-4836-a486-b02e6d32e7a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"noviPrimeriNa100000Slovenija", ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<7-dnevno povprecje novih dnevnih primerov Covid-19 v Sloveniji na \
100.000 prebivalcev\>\""}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "october 2020", Typeset`boxes$$ =
           RowBox[{"DateObject", "[", 
            RowBox[{"{", 
              RowBox[{"2020", ",", " ", "10"}], "}"}], "]"}], 
          Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.715078`6.305898410292855, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{267., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True], ",", 
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "today", Typeset`boxes$$ = 
          "Today", 
          Typeset`allassumptions$$ = {{
           "type" -> "Clash", "word" -> "today", "template" -> 
            "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
            "count" -> "2", 
            "Values" -> {{
              "name" -> "DateObject", "desc" -> "a date", "input" -> 
               "*C.today-_*DateObject-"}, {
              "name" -> "Word", "desc" -> "a word", "input" -> 
               "*C.today-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           1.085948`6.487354023303364, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{129., {11.5, 17.5}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True]}], "}"}], ",", "Automatic"}], "}"}]}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.825672167643948*^9, 3.825672179797824*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"b7b49643-4ff3-4381-98ab-cce83a5c9770"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxV13lcTOsfwPFpEdIykl1MtpRtRIsszZQlaRlp1zIlbos0RQhlUIorjdxs
KeMSIjVRWbKMxHWFRoQUpmSrQ0MhRL/vfM/r3N/r8Y/X+/WcmTmf85zznCfT
0BiPZZosFuuYBoul/h/+cSNmUHzW//8J95CWXCEtf0ta1XcmYc5M0oLlpMUS
0rJLpJXNpNmGswjzppMWLSUtTSetOE+a1USaqzeb7LcmLRGSlu8grSohzXlJ
WtDbnuyfSloWSFqZSpp9ljSvgbRIh0f2c0kr/EmzUkhzi0gL60hLtPhk/0TS
Kh9wHPtBW9TYnfZgzhZw2MfHsblHTqotKCAtfvzf8ZfVlrEcCCstwB9TPSS2
c6vUZnuB8yz3mtoa1anN2wSeOJgVaDLyldqifLDNc4Nu23Uf1JY+/G+8XW3F
L7DubYt9az2+qs0a50jxp+/U/rDb8IfaXA/wGcc9ytxHaOFGsEYv25bznd/U
lhwHn2z803B3/he15QpwneeSxdq/0aof4B9f7cYvssbv54yZQ/FT7Qts5sTi
uMAdPNpPXxZ4uwP7E8DjI3VjKnfg8bKjYH6ORkHng5/Yfw9cviw9aIXfb+zv
BBfnHSwu6O7G/pFz4fPhG1fv3cniqftdwGN7aeWWBWuoLV0DHmDTz1LiiFZI
wb4bahrNS9CsKvAut6FdG63Q3C9gR+eIw6OiNNUWjphH8c8JVp/KP4jfL1kA
fj/qSmXXULR8FdhMb8Qeo4Bf2J8D1om0L785Cs25Dd7SKF+S6dCF/Z/BhhaW
4SmJ2CceNp/iZ4UcL+37tRP754FTJGULWuvQShF4lyD/66mpeP3Z2eDA53Vn
bV7i9eLdBM/9SaWeYuH1FbXNZ/o+4fwPdmL60QpHsNiyKnr66Tac/5WkufvB
e87K/rkQROH8Vzgx59uK80+B772Ou9Cqh5YPWMDcn2gVD5y46eKO5IFvsT8K
vI996Ghk+mvsz1rAzOcL7L8Gnv2xz9XDdi+x/z34y35398M9n2N/P2fmfkaz
Zzszz0cD9oeDSzwlh3vsQ4sywdy7fXk1pfXYf9mZuZ+fYf8b8NADQ7RyVz7G
/r4LKb7+Wk6K4n0N9s8Ab3l+bLn1PAX2LyMtyQBHdT/k9gi7g/0XwfNPNcVr
7b+O/a8WEs8vx8CFOf4S9tu6MNf7GvaHgqssQ2qtEyqwf6cL+fyXkZ9nN5Lm
9XElLLICu5W/nBbpfw77g12Z3yvC/u1gr7sN7YphedhfQpr7wpXpOYL9vdyY
8zmE/ZZuzPFZ2B9AWrXNjVz/islxQT05Lu7hTozLJrsTv6/0I81OJs0rJC16
6k6cr1RTQPQpJpBm+QiI47mbyXHhaQFxPSW1/42XYn83aZX5IuJ4jidpQRJp
8UnSsppFzPkUYH/XIqavGPvNPIjjeYs8mPWgDPs3eBD3gzQPXOMY9FfOjErs
rybN+gFWLvM1ipL/g/2jFzPr+U3sdyMtWQf+le9ioHPnPvb/Da40DRugKMPn
Q3V3MXO/VWP/N7CkO7dZq+oh9pt6Uvxc0wOhD9yfYP9CT+L5lMV7Es+38rAn
sR6w73gy34/rBa/Dk3z/Dfdi+pqx3wl87cY6u+FpuB4p4sDOgR2+F8a3YH8O
uPZrzFqPalzvuP+AG3pGW1/c/RH7P4GPbkqevTVJhf1DvZn1CtdL+VxwsKQ1
i4pDq2K8mfUCj+ccBJu4THjjoYnjgkrwgBmTzSh7fD+LP3oz84XnIxvkQ/Fv
PYr/nuz8HvsdwDuPnOvlcQjH2dE+xPrL2+fDvC/eYf91H2L9lbb6MPfHG+zv
70vxzcuNN0e14/ezeL7M9ab7I8EJpvcLa97h+Qn/Ii256susr/T6/44cVxn5
EfsPziw/4v0g+MOP2U/g+Yl3+zH3A1pW7kecr/K1H9HDZvsT7xOeHdg4zWSO
TQHOtygMHBN4Te98Jt4P0l3g9tezVrSswnHFBX9mvW3C/lfg1zccPw5rU2K/
/hLmfkYLbZYQ7ytJyBJmfnFc/id4+8cjY3J64fepSsFWFr+GJjfj73GUS4he
gW4Acb3E0wKY38f7RRYEvhQSG8EO/Iz9aQHE/o19LoC5v3H/xHsewPweWtQz
kHm/4f5AOiWQ2F8plgQyzzvuJ1jbwINbRvef++Q79ssCmfsDLXwWyNyPaIl2
EMUv09qWHjQJLZ8E7ltn5v3CGPcrKl/wYpO3PdaloDlbwZ+snZJ2N+DvCc4E
Mc8jWvwkiNhfyjSCmecT95/K8cHE/ontDa6yTryTGY/7QZ44mHm+cD8oOhXM
rA9o6aNg5vnF/ZriNzigfuGF3o1olrmQuf5o7mKwZULC1F9ummoLE8Hf5p53
uCPVUltyAhxd+O/woJ86assfgNvfVi0fFKertuon+NpNHSuXbfpqc8aGUPzV
1z2ffi43UFsgAAf/mXY0YS1bbfF6cHXms9MDjvdVW3YM/NsrWntImJHayvvg
Mo3OTC63n9rs7+AnR59EJoajeaNCKX6vgScKVZfRIlfwo/aDm/Rr0NK14Ogz
W0znd6EVR8BNxm6sSh9j7L8LLuD3eCN6jOZ+DWX+PhiA/ZylFP9UpmHnQPtB
2O8Mjgl27flaMhj7V4NnU4k3YmeiVbng8VGLVtRvR3P+BXf7OnQFhQzF/nbw
4NYoo4DHw7DfJIziH7xxZtsI0+HYPx/cp6p712X3EdgfCxaF1Gv0y0CzD4E/
7fRNyM43xf5b4MbycP34dLRIBZ5pd+75wxOjsH/IMjjfIB3d+7vHYv8csGd8
ys8iwTjsjwEXtVdXGURZYP8BsGZo2DOTionYfwNsnSLqrXEGLfkAHlQuHhnW
wcX+gcvh/EoDNdsCp2I/H8zLXlV856EV9q8Ax83w+6DSm479e8GdTjvtDHNn
Yr8cTBWkn3C8PRv7W8DnLumdqT/Bw37jPyi+97ewT15aDthvD9YMzmh6WjkH
+yPARtlBbk4f5mP/HnC/oAbHfyudsf8KeL89b+9CkRv2vwUPeutuwnomwH6j
cFg/OiJMHr1YhP0zwX/lNFYkjFiM/cvBp0uGtB3W9sJ+CfjdY3NFW4w39l8C
x1jaGFoWoFXN4O8RgmniMDTHMILit77QLt73AD8vmA4efSPvbEatJ/YvBR/e
HB3SNhMtSwcLi0yzJs/A31eeB2v8mvB+Zx2eH7sJnDMubaU0Ds3Ti6T4K0ov
WEwcjhZZgyfIh0Te98E+qRAsnOOQ9WYSWrED/HPzPrOO3nR/KXjW5zE15kI0
9yVY8tvnLVWFFvaOovibQks2BpehJVPBD28lp/p/QMsDwRmx0aqhP9CqVHBx
7VZ5jS6eD+cs+PMFs9U2GWhBA7ij54KlcdPRYp0VFF+7qbQ2aw1axgU79fkd
a5uMVvqDNyz1/rsknu5PAVsPvNx31VG6vwhcOKmyPjiL7q8DR05ZaOcXjZZq
RcP75uW7YmUlWjERLEt8feegPZrlC/bPOlFd5UPP/xbwwEl7x+8ZiRYWgOXN
M6dluKElj8Gv7B//cpqNlrNWQk9s47Jj89AqC/Ch7Jy11VK63wuszDhgVHeC
7t8EPr1gRpt3J92fD/4j6LK/s5EH9j8Ee4+aRn16R/f/Uh+flKpq+033j4uh
+PX3tXmVu/B4ngeYlber3dMALdoI7rsmKXiDBVp6HOx1+NZPE1u0QgFOfXTX
5mcYmvWT/Dx3jIjij6qqL4//Rve7g+eZdCZZ3qL7E8BWrdSAJ1fo/qPg9Ovc
HgVL6f574BvBE4cvf4H3A6cTvLm4NuogfX8JRsbC+8jZdlbLWrTYBay7bLPU
OBwtWwMOPu+T2z8QrZSCb4lSevQJQbOrwCtatCfcGk3P/5dY4nqLRsTB73Vo
LD+61R37F4Avrk2NWp5NP/+rwC1XU0tm6eI4Kxf8/fZzq1QP+v6/DZaEq94P
r6Pv/89gGzsDHaNwun/YKrg/be6teBRB988DF46ZXxu6mu4XrWLWZ3r+s8Ev
jPPHaQ7C6yu4CbbXd7jSpInPt7gNPP+0+aoh++jnf/BqWJ/tP3d1O+N6oXQE
7/2woKjqNpq9ErzmmPude/6+2L8fXJWle/fAUrSoAjw6Q1qof98H+ylwr1dH
Tq0sxfVIMSAe9tMsvq7fDvw9Fh+8+nNy8+Rb9PxHgROS7pWefkrPfxY46qrV
FAv6eZFcAxff1blU+55+/t+DZ6y80OhVRD///dbA32ejp9il0PPJmQ3WXRVy
IDkZr7cgHHw31OXmpCU4H+JM8PbPV4Z810bLLoONYk3cnvVAK9+ANaUTm869
d8X+vmthfc+hnNa0onkzwJp3uxrcq9GiZeA07Qtm7fPw89IMcLzP5Vp5IT3/
F8F/WPf20jVHs5rBDypuZhuk4ee5ButgvfqhF2t+Di20XUf8viQUvN41J3/l
fbR8J9h8bIe4pNsF+8vA+uzA9a/qFmJ/Izhiw3LelHP4PhL0SYD5H+R6VX/k
Auy3Arca7y+a/8QJ+4PBDh2+xwbnopXbwYkeRzMfWOL7jl0CDhKyjndIHLH/
Bfh15Y7WqR/Rol7rKb7OnulXh+nh8VJLsFO0MCo5Bq0IAEsibN5aPcXjWalg
uybjd9kNaG4x+PIl74Bgs7nYXw+umJbHafyG45IeG5j9uQP2TwZv97UbV90f
rfIDG022XfSukY/9yeA2mcuejIk4LihUj2tFeLt04bj4KTi+/5On93fguExz
I8U33P0lLi4drZwATquosdAYhWb7gA9c2737xmg0bzO4bV6JJJCDFp0Gl6fz
wgoc0NJa9fF7Kvaa2aMV3RuZ5xN/n2WRSPHXLdlwXc8Yx7me4En11l6pP9DC
JLC+ftqW3Aa05KTa030S7Sro/hrwyb836DZvofu7wIaLJ0Q1LENzzJIo/oeK
edLtMXT/oiRmv0b3bwAPHDN4zF4NtCwPHHOLbVQjpfc/1eDMwr9qAkLR7B9g
82aD5Ip6NG/0Jng/R03ZGvAELXIDP2hZd8QtFr9Pug4cXuYv2PIcrfh7E3E9
WPfAk3OiXT/V0P3fwJmDV9fkrcT5FpqKYX3M8bLVXEHP/0Jw7YjI9fnn0fJ4
cLRjy/D+bY68/wGc/bpn
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.8104992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{{0.}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "NoShowPlotTheme" -> "Scientific", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"7-dnevno povprecje novih dnevnih primerov Covid-19 v Sloveniji na \
100.000 prebivalcev\"", TraditionalForm],
  PlotRange->{{3.8104992*^9, 3.8256192*^9}, {0, 97.55626202615456}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.825672183655385*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"91e6a7dc-8140-49ed-b13d-c8aba7c6c399"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{956, 755},
WindowMargins->{{33, Automatic}, {Automatic, 44}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9bf0d2ef-7731-4e51-b8d2-8c3e035721fa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 197, 4, 123, "Title",ExpressionUUID->"52c07043-0fc0-4b9c-8ee9-651caf285f05"],
Cell[780, 28, 210, 4, 67, "Subtitle",ExpressionUUID->"41edfe03-a6f1-45d5-982a-25067c1d7b47"],
Cell[CellGroupData[{
Cell[1015, 36, 166, 3, 84, "Section",ExpressionUUID->"78e77c0d-fea5-4e8d-a92f-2bede3387de9"],
Cell[1184, 41, 271, 8, 44, "Text",ExpressionUUID->"91fb3070-106d-411c-ac7b-9405650d3532"],
Cell[CellGroupData[{
Cell[1480, 53, 329, 5, 37, "Input",ExpressionUUID->"c77b2033-dff4-4cee-b273-5313f708bd27"],
Cell[1812, 60, 801, 15, 50, "Message",ExpressionUUID->"02583fbd-bfa9-4f73-838e-19c27f6aa718"],
Cell[2616, 77, 801, 15, 50, "Message",ExpressionUUID->"284b70af-6b55-4796-b3f3-31efb5839a8d"],
Cell[3420, 94, 809, 15, 50, "Message",ExpressionUUID->"4c655c51-6d04-4076-be05-861bbba33296"],
Cell[4232, 111, 578, 12, 29, "Message",ExpressionUUID->"2fe0e264-7dd1-4eeb-8625-ac8bcd68c1c8"],
Cell[4813, 125, 126280, 2418, 765, "Output",ExpressionUUID->"aa8e3426-1c69-49bd-989f-e77578629e91"]
}, Open  ]],
Cell[131108, 2546, 161, 3, 44, "Text",ExpressionUUID->"052a4964-4100-4363-9b69-0bb774a5cb0a"],
Cell[131272, 2551, 291, 7, 37, "Input",ExpressionUUID->"23290cdf-c3bc-4366-a8ba-be7271edf147"],
Cell[131566, 2560, 159, 3, 44, "Text",ExpressionUUID->"3615b7aa-621c-439f-ab32-3ac16136cf38"],
Cell[131728, 2565, 357, 9, 37, "Input",ExpressionUUID->"fa75c7da-6964-4e47-93f9-f03ae2d8d8cc"],
Cell[CellGroupData[{
Cell[132110, 2578, 376, 9, 37, "Input",ExpressionUUID->"8afce086-09d5-411e-84ba-8aadc5f4b56d"],
Cell[132489, 2589, 263075, 4992, 749, "Output",ExpressionUUID->"fa764e91-a408-4d89-bda1-722b1911ce88"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[395613, 7587, 175, 3, 84, "Section",ExpressionUUID->"517d7274-63a8-41bf-be00-1104589dc0f4"],
Cell[395791, 7592, 223, 4, 44, "Text",ExpressionUUID->"082cc481-dc95-4367-bac7-04a233cd70ec"],
Cell[CellGroupData[{
Cell[396039, 7600, 1680, 35, 47, "Input",ExpressionUUID->"4c0aab4e-db50-4bdd-a997-95ef4206ca96"],
Cell[397722, 7637, 48743, 866, 167, "Output",ExpressionUUID->"c7d71ba3-c60c-4ef9-8850-29909860cd1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446502, 8508, 333, 7, 37, "Input",ExpressionUUID->"e744508c-18d6-41aa-8bd3-fbe7ec94c320"],
Cell[446838, 8517, 15790, 314, 77, "Output",ExpressionUUID->"4449ff48-c4cb-4ab2-b89e-987023e87194"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462665, 8836, 477, 9, 90, "Input",ExpressionUUID->"2291f0b4-b594-4f3b-aba6-cc623ccabc8f"],
Cell[463145, 8847, 13106, 312, 478, "Output",ExpressionUUID->"fe02db85-f5d7-49fa-bf76-da7d48fa843a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476288, 9164, 510, 10, 90, "Input",ExpressionUUID->"70d66e43-b26f-4a5c-b25c-192131051de8"],
Cell[476801, 9176, 27301, 654, 484, "Output",ExpressionUUID->"74d150a8-182b-4a4f-84ce-a38440878755"]
}, Open  ]],
Cell[504117, 9833, 171, 3, 44, "Text",ExpressionUUID->"51ff1844-2fa8-41c5-a969-9f36e60ba363"],
Cell[CellGroupData[{
Cell[504313, 9840, 3665, 79, 136, "Input",ExpressionUUID->"e1a894bb-6802-47e2-84ac-dad1061e1a6e"],
Cell[507981, 9921, 7235, 160, 487, "Output",ExpressionUUID->"95762132-082b-429d-97e9-7cd668e905b2"]
}, Open  ]],
Cell[515231, 10084, 199, 3, 44, "Text",ExpressionUUID->"3514735f-cc9e-4d03-b80b-1149c1731210"],
Cell[515433, 10089, 435, 9, 37, "Input",ExpressionUUID->"09d8a367-1420-4e65-a213-f56b73e2eb90"],
Cell[CellGroupData[{
Cell[515893, 10102, 3632, 78, 136, "Input",ExpressionUUID->"282e3be2-ed55-4add-bc73-809fbb2660f8"],
Cell[519528, 10182, 7662, 166, 487, "Output",ExpressionUUID->"01029d70-88ed-4bbd-9d67-04eae641e27a"]
}, Open  ]],
Cell[527205, 10351, 179, 3, 37, "Input",ExpressionUUID->"17dad9ca-4a69-4ce2-a3c1-0130e53f7863"],
Cell[527387, 10356, 222, 5, 44, "Text",ExpressionUUID->"6f41c471-bbba-448c-807d-1888e066f7f0"],
Cell[527612, 10363, 1759, 36, 72, "Input",ExpressionUUID->"16da3051-fca2-4836-a486-b02e6d32e7a8"],
Cell[CellGroupData[{
Cell[529396, 10403, 3663, 78, 162, "Input",ExpressionUUID->"b7b49643-4ff3-4381-98ab-cce83a5c9770"],
Cell[533062, 10483, 9329, 193, 510, "Output",ExpressionUUID->"91e6a7dc-8140-49ed-b13d-c8aba7c6c399"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

